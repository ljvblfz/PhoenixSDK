Compiling...
MatrixMul.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 39(0x00000027).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 39(0x00000027).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &MatrixMul.CDecl.Function()->(void)              #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #4
                       START MatrixMul(T)                                    #4
MatrixMul: (references=1)                                                    #4
                       ENTERFUNCTION                                         #4
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG106.up32->char (i8), 0.i32, 2.i32, 11(0x0000000b).i32, &m.up32->integer (i32), &p.up32->integer (i32), &n.up32->integer (i32), &i.up32->$$unnamed100 (i32), &j.up32->$$unnamed101 (i32), &k.up32->$$unnamed102 (i32), &s.up32->integer (i32), &a.up32->$$unnamed103 (UnmgdArr[integer (i32)]384), &b.up32->$$unnamed104 (UnmgdArr[integer (i32)]192), &c.up32->$$unnamed105 (UnmgdArr[integer (i32)]256), &matrixmul.up32->$$unnamed106 (Aggregate64)                     #39
   m.integer (i32).a32 = ASSIGN 4.integer (i32)                              #6
   p.integer (i32).a32 = ASSIGN 3.integer (i32)                              #6
   n.integer (i32).a32 = ASSIGN 2.integer (i32)                              #6
   matrixmul"$runtime_handle"($$unnamed106 (Aggregate64)+0).HANDLE (up32->void).a32 = CALL &_file_open.CDecl.Function(up32->i8,i32,i32,i32)->(HANDLE (up32->void)), &$SG105.up32->char (i8), 0.i32, 0.i32, 13(0x0000000d).i32               #13
   t163.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), matrixmul"$runtime_handle"($$unnamed106 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 13(0x0000000d).i32                                  #13
   [&matrixmul.up32->$$unnamed106 (Aggregate64)+4].integer (i32).a32 = ASSIGN t163.i32                                                                      #13
   i.$$unnamed100 (i32).a32 = ASSIGN 1.integer (i32)                        #15
   tv164-.integer (i32) = ASSIGN i.$$unnamed100 (i32).a32                   #15
                       GOTO $L4                                             #15
$L4: (references=2)                                                         #15
   t165.i32          = COMPARE(GT) tv164-.integer (i32), m.integer (i32).a32 #15
                       CONDITIONALBRANCH(True) t165.i32, $L5, $L6           #15
$L5: (references=1)                                                         #15
   tv168-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #15
                       GOTO $L7                                             #15
$L6: (references=1)                                                         #15
   tv168-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #15
                       GOTO $L7                                             #15
$L7: (references=2)                                                         #15
                       CONDITIONALBRANCH(True) tv168"$$data"(Boolean (Enum32)+0).i32, $L8, $L9                                                              #15
$L9: (references=1)                                                         #15
   i.$$unnamed100 (i32).a32 = ASSIGN tv164-.integer (i32)                   #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 4.i32, i.$$unnamed100 (i32).a32, 0.i32, 20(0x00000014).i32                                                                        #15
   k.$$unnamed102 (i32).a32 = ASSIGN 1.integer (i32)                        #16
   tv169-.integer (i32) = ASSIGN k.$$unnamed102 (i32).a32                   #16
                       GOTO $L10                                            #16
$L10: (references=2)                                                        #16
   t170.i32          = COMPARE(GT) tv169-.integer (i32), p.integer (i32).a32 #16
                       CONDITIONALBRANCH(True) t170.i32, $L11, $L12         #16
$L11: (references=1)                                                        #16
   tv171-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #16
                       GOTO $L13                                            #16
$L12: (references=1)                                                        #16
   tv171-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #16
                       GOTO $L13                                            #16
$L13: (references=2)                                                        #16
                       CONDITIONALBRANCH(True) tv171"$$data"(Boolean (Enum32)+0).i32, $L14, $L15                                                            #16
$L15: (references=1)                                                        #16
   k.$$unnamed102 (i32).a32 = ASSIGN tv169-.integer (i32)                   #16
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 3.i32, k.$$unnamed102 (i32).a32, 0.i32, 18(0x00000012).i32                                                                        #16
   s.integer (i32).a32 = ASSIGN matrixmul"$current_value"($$unnamed106 (Aggregate64)+32).integer (i32).a32                                                  #17
   t172.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), matrixmul"$runtime_handle"($$unnamed106 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 17(0x00000011).i32                                  #17
   [&matrixmul.up32->$$unnamed106 (Aggregate64)+4].integer (i32).a32 = ASSIGN t172.i32                                                                      #17
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN s.integer (i32).a32                                                                #17
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 17(0x00000011).i32                                                    #17
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 9.char (i8) #17
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 17(0x00000011).i32                                                         #17
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 3.i32, k.$$unnamed102 (i32).a32, 0.i32, 17(0x00000011).i32                                                                        #17
   t174.i32          = SUBTRACT k.$$unnamed102 (i32).a32, 1.i32             #17
   t175.i32          = MULTIPLY 1.i32, t174.i32                             #17
   t176.i32          = ADD t175.i32, 0.i32                                  #17
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 4.i32, i.$$unnamed100 (i32).a32, 0.i32, 17(0x00000011).i32                                                                        #17
   t177.i32          = SUBTRACT i.$$unnamed100 (i32).a32, 1.i32             #17
   t178.i32          = MULTIPLY 3.i32, t177.i32                             #17
   t179.i32          = ADD t178.i32, t176.i32                               #17
   tv180-.i32        = MULTIPLY 4.i32, t179.i32                             #17
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 44(0x0000002c).i32, tv180-.i32, 0.i32, 17(0x00000011).i32                                                                         #17
   [&a.up32->$$unnamed103 (UnmgdArr[integer (i32)]384)+tv180-.i32].integer (i32).a32 = ASSIGN s.integer (i32).a32                                           #18
   t181.integer (i32) = ADD k.$$unnamed102 (i32).a32, 1.integer (i32)       #18
   tv169-.integer (i32) = ASSIGN t181.integer (i32)                         #18
                       GOTO $L10                                            #18
$L14: (references=1)                                                        #16
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #20
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 20(0x00000014).i32                                                         #20
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #20
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 20(0x00000014).i32                                                         #20
   t182.integer (i32) = ADD i.$$unnamed100 (i32).a32, 1.integer (i32)       #20
   tv164-.integer (i32) = ASSIGN t182.integer (i32)                         #20
                       GOTO $L4                                             #20
$L8: (references=1)                                                         #15
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #21
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 21(0x00000015).i32                                                         #21
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #21
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 21(0x00000015).i32                                                         #21
   k.$$unnamed102 (i32).a32 = ASSIGN 1.integer (i32)                        #22
   tv183-.integer (i32) = ASSIGN k.$$unnamed102 (i32).a32                   #22
                       GOTO $L16                                            #22
$L16: (references=2)                                                        #22
   t184.i32          = COMPARE(GT) tv183-.integer (i32), p.integer (i32).a32 #22
                       CONDITIONALBRANCH(True) t184.i32, $L17, $L18         #22
$L17: (references=1)                                                        #22
   tv185-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #22
                       GOTO $L19                                            #22
$L18: (references=1)                                                        #22
   tv185-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #22
                       GOTO $L19                                            #22
$L19: (references=2)                                                        #22
                       CONDITIONALBRANCH(True) tv185"$$data"(Boolean (Enum32)+0).i32, $L20, $L21                                                            #22
$L21: (references=1)                                                        #22
   k.$$unnamed102 (i32).a32 = ASSIGN tv183-.integer (i32)                   #22
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 3.i32, k.$$unnamed102 (i32).a32, 0.i32, 27(0x0000001b).i32                                                                        #22
   j.$$unnamed101 (i32).a32 = ASSIGN 1.integer (i32)                        #23
   tv186-.integer (i32) = ASSIGN j.$$unnamed101 (i32).a32                   #23
                       GOTO $L22                                            #23
$L22: (references=2)                                                        #23
   t187.i32          = COMPARE(GT) tv186-.integer (i32), n.integer (i32).a32 #23
                       CONDITIONALBRANCH(True) t187.i32, $L23, $L24         #23
$L23: (references=1)                                                        #23
   tv188-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #23
                       GOTO $L25                                            #23
$L24: (references=1)                                                        #23
   tv188-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #23
                       GOTO $L25                                            #23
$L25: (references=2)                                                        #23
                       CONDITIONALBRANCH(True) tv188"$$data"(Boolean (Enum32)+0).i32, $L26, $L27                                                            #23
$L27: (references=1)                                                        #23
   j.$$unnamed101 (i32).a32 = ASSIGN tv186-.integer (i32)                   #23
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 2.i32, j.$$unnamed101 (i32).a32, 0.i32, 25(0x00000019).i32                                                                        #23
   s.integer (i32).a32 = ASSIGN matrixmul"$current_value"($$unnamed106 (Aggregate64)+32).integer (i32).a32                                                  #24
   t189.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), matrixmul"$runtime_handle"($$unnamed106 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 24(0x00000018).i32                                  #24
   [&matrixmul.up32->$$unnamed106 (Aggregate64)+4].integer (i32).a32 = ASSIGN t189.i32                                                                      #24
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN s.integer (i32).a32                                                                #24
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 24(0x00000018).i32                                                    #24
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 9.char (i8) #24
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 24(0x00000018).i32                                                         #24
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 2.i32, j.$$unnamed101 (i32).a32, 0.i32, 24(0x00000018).i32                                                                        #24
   t190.i32          = SUBTRACT j.$$unnamed101 (i32).a32, 1.i32             #24
   t191.i32          = MULTIPLY 1.i32, t190.i32                             #24
   t192.i32          = ADD t191.i32, 0.i32                                  #24
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 3.i32, k.$$unnamed102 (i32).a32, 0.i32, 24(0x00000018).i32                                                                        #24
   t193.i32          = SUBTRACT k.$$unnamed102 (i32).a32, 1.i32             #24
   t194.i32          = MULTIPLY 2.i32, t193.i32                             #24
   t195.i32          = ADD t194.i32, t192.i32                               #24
   tv196-.i32        = MULTIPLY 4.i32, t195.i32                             #24
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 20(0x00000014).i32, tv196-.i32, 0.i32, 24(0x00000018).i32                                                                         #24
   [&b.up32->$$unnamed104 (UnmgdArr[integer (i32)]192)+tv196-.i32].integer (i32).a32 = ASSIGN s.integer (i32).a32                                           #25
   t197.integer (i32) = ADD j.$$unnamed101 (i32).a32, 1.integer (i32)       #25
   tv186-.integer (i32) = ASSIGN t197.integer (i32)                         #25
                       GOTO $L22                                            #25
$L26: (references=1)                                                        #23
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #27
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 27(0x0000001b).i32                                                         #27
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #27
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 27(0x0000001b).i32                                                         #27
   t198.integer (i32) = ADD k.$$unnamed102 (i32).a32, 1.integer (i32)       #27
   tv183-.integer (i32) = ASSIGN t198.integer (i32)                         #27
                       GOTO $L16                                            #27
$L20: (references=1)                                                        #22
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #28
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 28(0x0000001c).i32                                                         #28
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #28
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 28(0x0000001c).i32                                                         #28
   i.$$unnamed100 (i32).a32 = ASSIGN 1.integer (i32)                        #30
   tv199-.integer (i32) = ASSIGN i.$$unnamed100 (i32).a32                   #30
                       GOTO $L28                                            #30
$L28: (references=2)                                                        #30
   t200.i32          = COMPARE(GT) tv199-.integer (i32), m.integer (i32).a32 #30
                       CONDITIONALBRANCH(True) t200.i32, $L29, $L30         #30
$L29: (references=1)                                                        #30
   tv201-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #30
                       GOTO $L31                                            #30
$L30: (references=1)                                                        #30
   tv201-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #30
                       GOTO $L31                                            #30
$L31: (references=2)                                                        #30
                       CONDITIONALBRANCH(True) tv201"$$data"(Boolean (Enum32)+0).i32, $L32, $L33                                                            #30
$L33: (references=1)                                                        #30
   i.$$unnamed100 (i32).a32 = ASSIGN tv199-.integer (i32)                   #30
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 4.i32, i.$$unnamed100 (i32).a32, 0.i32, 37(0x00000025).i32                                                                        #30
   j.$$unnamed101 (i32).a32 = ASSIGN 1.integer (i32)                        #31
   tv202-.integer (i32) = ASSIGN j.$$unnamed101 (i32).a32                   #31
                       GOTO $L34                                            #31
$L34: (references=2)                                                        #31
   t203.i32          = COMPARE(GT) tv202-.integer (i32), n.integer (i32).a32 #31
                       CONDITIONALBRANCH(True) t203.i32, $L35, $L36         #31
$L35: (references=1)                                                        #31
   tv204-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #31
                       GOTO $L37                                            #31
$L36: (references=1)                                                        #31
   tv204-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #31
                       GOTO $L37                                            #31
$L37: (references=2)                                                        #31
                       CONDITIONALBRANCH(True) tv204"$$data"(Boolean (Enum32)+0).i32, $L38, $L39                                                            #31
$L39: (references=1)                                                        #31
   j.$$unnamed101 (i32).a32 = ASSIGN tv202-.integer (i32)                   #31
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 2.i32, j.$$unnamed101 (i32).a32, 0.i32, 35(0x00000023).i32                                                                        #31
   s.integer (i32).a32 = ASSIGN 0.integer (i32)                             #32
   k.$$unnamed102 (i32).a32 = ASSIGN 1.integer (i32)                        #33
   tv205-.integer (i32) = ASSIGN k.$$unnamed102 (i32).a32                   #33
                       GOTO $L40                                            #33
$L40: (references=2)                                                        #33
   t206.i32          = COMPARE(GT) tv205-.integer (i32), p.integer (i32).a32 #33
                       CONDITIONALBRANCH(True) t206.i32, $L41, $L42         #33
$L41: (references=1)                                                        #33
   tv207-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #33
                       GOTO $L43                                            #33
$L42: (references=1)                                                        #33
   tv207-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #33
                       GOTO $L43                                            #33
$L43: (references=2)                                                        #33
                       CONDITIONALBRANCH(True) tv207"$$data"(Boolean (Enum32)+0).i32, $L44, $L45                                                            #33
$L45: (references=1)                                                        #33
   k.$$unnamed102 (i32).a32 = ASSIGN tv205-.integer (i32)                   #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 3.i32, k.$$unnamed102 (i32).a32, 0.i32, 33(0x00000021).i32                                                                        #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 3.i32, k.$$unnamed102 (i32).a32, 0.i32, 33(0x00000021).i32                                                                        #33
   t208.i32          = SUBTRACT k.$$unnamed102 (i32).a32, 1.i32             #33
   t209.i32          = MULTIPLY 1.i32, t208.i32                             #33
   t210.i32          = ADD t209.i32, 0.i32                                  #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 4.i32, i.$$unnamed100 (i32).a32, 0.i32, 33(0x00000021).i32                                                                        #33
   t211.i32          = SUBTRACT i.$$unnamed100 (i32).a32, 1.i32             #33
   t212.i32          = MULTIPLY 3.i32, t211.i32                             #33
   t213.i32          = ADD t212.i32, t210.i32                               #33
   tv214-.i32        = MULTIPLY 4.i32, t213.i32                             #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 44(0x0000002c).i32, tv214-.i32, 0.i32, 33(0x00000021).i32                                                                         #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 2.i32, j.$$unnamed101 (i32).a32, 0.i32, 33(0x00000021).i32                                                                        #33
   t215.i32          = SUBTRACT j.$$unnamed101 (i32).a32, 1.i32             #33
   t216.i32          = MULTIPLY 1.i32, t215.i32                             #33
   t217.i32          = ADD t216.i32, 0.i32                                  #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 3.i32, k.$$unnamed102 (i32).a32, 0.i32, 33(0x00000021).i32                                                                        #33
   t218.i32          = SUBTRACT k.$$unnamed102 (i32).a32, 1.i32             #33
   t219.i32          = MULTIPLY 2.i32, t218.i32                             #33
   t220.i32          = ADD t219.i32, t217.i32                               #33
   tv221-.i32        = MULTIPLY 4.i32, t220.i32                             #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 20(0x00000014).i32, tv221-.i32, 0.i32, 33(0x00000021).i32                                                                         #33
   t222.integer (i32) = MULTIPLY [&a.up32->$$unnamed103 (UnmgdArr[integer (i32)]384)+tv214-.i32].integer (i32).a32, [&b.up32->$$unnamed104 (UnmgdArr[integer (i32)]192)+tv221-.i32].integer (i32).a32                                       #33
   t223.integer (i32) = ADD s.integer (i32).a32, t222.integer (i32)         #33
   s.integer (i32).a32 = ASSIGN t223.integer (i32)                          #33
   t224.integer (i32) = ADD k.$$unnamed102 (i32).a32, 1.integer (i32)       #33
   tv205-.integer (i32) = ASSIGN t224.integer (i32)                         #33
                       GOTO $L40                                            #33
$L44: (references=1)                                                        #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 2.i32, j.$$unnamed101 (i32).a32, 0.i32, 34(0x00000022).i32                                                                        #34
   t225.i32          = SUBTRACT j.$$unnamed101 (i32).a32, 1.i32             #34
   t226.i32          = MULTIPLY 1.i32, t225.i32                             #34
   t227.i32          = ADD t226.i32, 0.i32                                  #34
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 4.i32, i.$$unnamed100 (i32).a32, 0.i32, 34(0x00000022).i32                                                                        #34
   t228.i32          = SUBTRACT i.$$unnamed100 (i32).a32, 1.i32             #34
   t229.i32          = MULTIPLY 2.i32, t228.i32                             #34
   t230.i32          = ADD t229.i32, t227.i32                               #34
   tv231-.i32        = MULTIPLY 4.i32, t230.i32                             #34
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 28(0x0000001c).i32, tv231-.i32, 0.i32, 34(0x00000022).i32                                                                         #34
   [&c.up32->$$unnamed105 (UnmgdArr[integer (i32)]256)+tv231-.i32].integer (i32).a32 = ASSIGN s.integer (i32).a32                                           #34
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN s.integer (i32).a32                                                                #34
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 34(0x00000022).i32                                                    #34
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 9.char (i8) #34
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 34(0x00000022).i32                                                         #34
   t232.integer (i32) = ADD j.$$unnamed101 (i32).a32, 1.integer (i32)       #34
   tv202-.integer (i32) = ASSIGN t232.integer (i32)                         #34
                       GOTO $L34                                            #34
$L38: (references=1)                                                        #31
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #37
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 37(0x00000025).i32                                                         #37
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #37
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 37(0x00000025).i32                                                         #37
   t233.integer (i32) = ADD i.$$unnamed100 (i32).a32, 1.integer (i32)       #37
   tv199-.integer (i32) = ASSIGN t233.integer (i32)                         #37
                       GOTO $L28                                            #37
$L32: (references=1)                                                        #30
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #39
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 39(0x00000027).i32                                                         #39
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #39
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 39(0x00000027).i32                                                         #39
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #39
                       RETURN $L46(T)                                       #39
$L46: (references=1)                                                        #39
                       EXITFUNCTION                                         #39
$L2: (references=0)                                                         #39
                       END                                                  #39
Writing MatrixMul.obj...

MatrixMul.p - 0 error(s), 0 warning(s).

Linking...

MatrixMul.exe - 0 error(s), 0 warning(s).

1	2	3	
-2	0	2	
1	0	1	
-1	2	-3	

-1	3	
-2	2	
2	1	

1	10	
6	-4	
1	4	
-9	-2	

