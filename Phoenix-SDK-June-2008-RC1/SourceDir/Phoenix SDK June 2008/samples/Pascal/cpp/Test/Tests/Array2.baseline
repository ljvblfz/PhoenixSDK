Compiling...
Array2.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 43(0x0000002b).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 43(0x0000002b).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Array2.CDecl.Function()->(void)                 #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #3
                       START Array2(T)                                       #3
Array2: (references=1)                                                       #3
                       ENTERFUNCTION                                         #3
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG110.up32->char (i8), 0.i32, 2.i32, 8.i32, &m.up32->integer (i32), &n.up32->integer (i32), &u.up32->integer (i32), &v.up32->integer (i32), &a.up32->$$unnamed100 (UnmgdArr[integer (i32)]192), &z.up32->$$unnamed101 (UnmgdArr[integer (i32)]128), &i.up32->integer (i32), &j.up32->integer (i32)          #42
   m.integer (i32).a32 = ASSIGN 3.integer (i32)                              #5
   n.integer (i32).a32 = ASSIGN 8.integer (i32)                              #5
   u.integer (i32).a32 = ASSIGN 4.integer (i32)                              #6
   v.integer (i32).a32 = ASSIGN 7.integer (i32)                              #6
   output($stdfile (Aggregate2080)+32).up32->char (i8).a32 = ASSIGN &$SG105.up32->char (i8)                                                                 #11
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 11(0x0000000b).i32                         #11
   i.integer (i32).a32 = ASSIGN m.integer (i32).a32                         #12
   tv151-.integer (i32) = ASSIGN i.integer (i32).a32                        #12
                       GOTO $L4                                             #12
$L4: (references=2)                                                         #12
   t152.i32          = COMPARE(LT) n.integer (i32).a32, tv151-.integer (i32) #12
                       CONDITIONALBRANCH(True) t152.i32, $L5, $L6           #12
$L5: (references=1)                                                         #12
   tv155-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #12
                       GOTO $L7                                             #12
$L6: (references=1)                                                         #12
   tv155-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #12
                       GOTO $L7                                             #12
$L7: (references=2)                                                         #12
                       CONDITIONALBRANCH(True) tv155"$$data"(Boolean (Enum32)+0).i32, $L8, $L9                                                              #12
$L9: (references=1)                                                         #12
   i.integer (i32).a32 = ASSIGN tv151-.integer (i32)                        #12
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 3.i32, 8.i32, i.integer (i32).a32, 0.i32, 12(0x0000000c).i32 #12
   t157.i32          = SUBTRACT i.integer (i32).a32, 3.i32                  #12
   t158.i32          = ADD t157.i32, 0.i32                                  #12
   tv159-.i32        = MULTIPLY 4.i32, t158.i32                             #12
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 20(0x00000014).i32, tv159-.i32, 0.i32, 12(0x0000000c).i32                                                                         #12
   [&a.up32->$$unnamed100 (UnmgdArr[integer (i32)]192)+tv159-.i32].integer (i32).a32 = ASSIGN i.integer (i32).a32                                           #12
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 2.integer (i32)                                    #12
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN i.integer (i32).a32                                                                #12
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 12(0x0000000c).i32                                                    #12
   t160.integer (i32) = ADD i.integer (i32).a32, 1.integer (i32)            #12
   tv151-.integer (i32) = ASSIGN t160.integer (i32)                         #12
                       GOTO $L4                                             #12
$L8: (references=1)                                                         #12
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #13
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 13(0x0000000d).i32                                                                #13
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #13
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 13(0x0000000d).i32                                                                #13
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG106.up32->char (i8)                                                          #14
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 14(0x0000000e).i32                  #14
   i.integer (i32).a32 = ASSIGN u.integer (i32).a32                         #15
   tv162-.integer (i32) = ASSIGN i.integer (i32).a32                        #15
                       GOTO $L10                                            #15
$L10: (references=2)                                                        #15
   t163.i32          = COMPARE(GT) tv162-.integer (i32), v.integer (i32).a32 #15
                       CONDITIONALBRANCH(True) t163.i32, $L11, $L12         #15
$L11: (references=1)                                                        #15
   tv164-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #15
                       GOTO $L13                                            #15
$L12: (references=1)                                                        #15
   tv164-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #15
                       GOTO $L13                                            #15
$L13: (references=2)                                                        #15
                       CONDITIONALBRANCH(True) tv164"$$data"(Boolean (Enum32)+0).i32, $L14, $L15                                                            #15
$L15: (references=1)                                                        #15
   i.integer (i32).a32 = ASSIGN tv162-.integer (i32)                        #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 4.i32, 7.i32, i.integer (i32).a32, 0.i32, 15(0x0000000f).i32 #15
   t165.i32          = SUBTRACT i.integer (i32).a32, 4.i32                  #15
   t166.i32          = MULTIPLY 1.i32, t165.i32                             #15
   t167.i32          = ADD t166.i32, 0.i32                                  #15
   tv168-.i32        = MULTIPLY 4.i32, t167.i32                             #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 12(0x0000000c).i32, tv168-.i32, 0.i32, 15(0x0000000f).i32                                                                         #15
   [&z.up32->$$unnamed101 (UnmgdArr[integer (i32)]128)+tv168-.i32].integer (i32).a32 = ASSIGN i.integer (i32).a32                                           #15
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 2.integer (i32)                                    #15
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN i.integer (i32).a32                                                                #15
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 15(0x0000000f).i32                                                    #15
   t169.integer (i32) = ADD i.integer (i32).a32, 1.integer (i32)            #15
   tv162-.integer (i32) = ASSIGN t169.integer (i32)                         #15
                       GOTO $L10                                            #15
$L14: (references=1)                                                        #15
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #16
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 16(0x00000010).i32                                                                #16
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #16
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 16(0x00000010).i32                                                                #16
   j.integer (i32).a32 = ASSIGN 0.integer (i32)                             #18
   tv170-.integer (i32) = ASSIGN j.integer (i32).a32                        #18
                       GOTO $L16                                            #18
$L16: (references=2)                                                        #18
   t171.i32          = COMPARE(GT) tv170-.integer (i32), 1.integer (i32)    #18
                       CONDITIONALBRANCH(True) t171.i32, $L17, $L18         #18
$L17: (references=1)                                                        #18
   tv172-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #18
                       GOTO $L19                                            #18
$L18: (references=1)                                                        #18
   tv172-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #18
                       GOTO $L19                                            #18
$L19: (references=2)                                                        #18
                       CONDITIONALBRANCH(True) tv172"$$data"(Boolean (Enum32)+0).i32, $L20, $L21                                                            #18
$L21: (references=1)                                                        #18
   j.integer (i32).a32 = ASSIGN tv170-.integer (i32)                        #18
   t173.up32->void   = CONVERT &a.up32->$$unnamed100 (UnmgdArr[integer (i32)]192)                                                                           #20
   t174.up32->void   = CONVERT &z.up32->$$unnamed101 (UnmgdArr[integer (i32)]128)                                                                           #20
   t175.i32          = MULTIPLY 4.i32, j.integer (i32).a32                  #20
                       CALL &_pack.CDecl.Function(up32->void,up32->void,i32,i32)->(void), t173.up32->void, t174.up32->void, t175.i32, 16(0x00000010).i32    #20
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG107.up32->char (i8)                                                          #21
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 21(0x00000015).i32                  #21
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN j.integer (i32).a32                                                                #21
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 21(0x00000015).i32                                                    #21
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG108.up32->char (i8)                                                          #21
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 21(0x00000015).i32                  #21
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #21
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 21(0x00000015).i32                                                                #21
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #21
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 21(0x00000015).i32                                                                #21
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG105.up32->char (i8)                                                          #23
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 23(0x00000017).i32                  #23
   i.integer (i32).a32 = ASSIGN m.integer (i32).a32                         #24
   tv178-.integer (i32) = ASSIGN i.integer (i32).a32                        #24
                       GOTO $L22                                            #24
$L22: (references=2)                                                        #24
   t179.i32          = COMPARE(GT) tv178-.integer (i32), n.integer (i32).a32 #24
                       CONDITIONALBRANCH(True) t179.i32, $L23, $L24         #24
$L23: (references=1)                                                        #24
   tv180-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #24
                       GOTO $L25                                            #24
$L24: (references=1)                                                        #24
   tv180-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #24
                       GOTO $L25                                            #24
$L25: (references=2)                                                        #24
                       CONDITIONALBRANCH(True) tv180"$$data"(Boolean (Enum32)+0).i32, $L26, $L27                                                            #24
$L27: (references=1)                                                        #24
   i.integer (i32).a32 = ASSIGN tv178-.integer (i32)                        #24
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 3.i32, 8.i32, i.integer (i32).a32, 0.i32, 24(0x00000018).i32 #24
   t181.i32          = SUBTRACT i.integer (i32).a32, 3.i32                  #24
   t182.i32          = MULTIPLY 1.i32, t181.i32                             #24
   t183.i32          = ADD t182.i32, 0.i32                                  #24
   tv184-.i32        = MULTIPLY 4.i32, t183.i32                             #24
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 20(0x00000014).i32, tv184-.i32, 0.i32, 24(0x00000018).i32                                                                         #24
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 2.integer (i32)                                    #24
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [&a.up32->$$unnamed100 (UnmgdArr[integer (i32)]192)+tv184-.i32].integer (i32).a32  #24
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 24(0x00000018).i32                                                    #24
   t185.integer (i32) = ADD i.integer (i32).a32, 1.integer (i32)            #24
   tv178-.integer (i32) = ASSIGN t185.integer (i32)                         #24
                       GOTO $L22                                            #24
$L26: (references=1)                                                        #24
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #25
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 25(0x00000019).i32                                                                #25
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #25
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 25(0x00000019).i32                                                                #25
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG106.up32->char (i8)                                                          #26
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 26(0x0000001a).i32                  #26
   i.integer (i32).a32 = ASSIGN u.integer (i32).a32                         #27
   tv186-.integer (i32) = ASSIGN i.integer (i32).a32                        #27
                       GOTO $L28                                            #27
$L28: (references=2)                                                        #27
   t187.i32          = COMPARE(GT) tv186-.integer (i32), v.integer (i32).a32 #27
                       CONDITIONALBRANCH(True) t187.i32, $L29, $L30         #27
$L29: (references=1)                                                        #27
   tv188-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #27
                       GOTO $L31                                            #27
$L30: (references=1)                                                        #27
   tv188-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #27
                       GOTO $L31                                            #27
$L31: (references=2)                                                        #27
                       CONDITIONALBRANCH(True) tv188"$$data"(Boolean (Enum32)+0).i32, $L32, $L33                                                            #27
$L33: (references=1)                                                        #27
   i.integer (i32).a32 = ASSIGN tv186-.integer (i32)                        #27
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 4.i32, 7.i32, i.integer (i32).a32, 0.i32, 27(0x0000001b).i32 #27
   t189.i32          = SUBTRACT i.integer (i32).a32, 4.i32                  #27
   t190.i32          = MULTIPLY 1.i32, t189.i32                             #27
   t191.i32          = ADD t190.i32, 0.i32                                  #27
   tv192-.i32        = MULTIPLY 4.i32, t191.i32                             #27
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 12(0x0000000c).i32, tv192-.i32, 0.i32, 27(0x0000001b).i32                                                                         #27
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 2.integer (i32)                                    #27
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [&z.up32->$$unnamed101 (UnmgdArr[integer (i32)]128)+tv192-.i32].integer (i32).a32  #27
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 27(0x0000001b).i32                                                    #27
   t193.integer (i32) = ADD i.integer (i32).a32, 1.integer (i32)            #27
   tv186-.integer (i32) = ASSIGN t193.integer (i32)                         #27
                       GOTO $L28                                            #27
$L32: (references=1)                                                        #27
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #29
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 29(0x0000001d).i32                                                                #29
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #29
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 29(0x0000001d).i32                                                                #29
   t194.integer (i32) = ADD j.integer (i32).a32, 1.integer (i32)            #29
   tv170-.integer (i32) = ASSIGN t194.integer (i32)                         #29
                       GOTO $L16                                            #29
$L20: (references=1)                                                        #18
   j.integer (i32).a32 = ASSIGN 0.integer (i32)                             #31
   tv195-.integer (i32) = ASSIGN j.integer (i32).a32                        #31
                       GOTO $L34                                            #31
$L34: (references=2)                                                        #31
   t196.i32          = COMPARE(GT) tv195-.integer (i32), 1.integer (i32)    #31
                       CONDITIONALBRANCH(True) t196.i32, $L35, $L36         #31
$L35: (references=1)                                                        #31
   tv197-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #31
                       GOTO $L37                                            #31
$L36: (references=1)                                                        #31
   tv197-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #31
                       GOTO $L37                                            #31
$L37: (references=2)                                                        #31
                       CONDITIONALBRANCH(True) tv197"$$data"(Boolean (Enum32)+0).i32, $L38, $L39                                                            #31
$L39: (references=1)                                                        #31
   j.integer (i32).a32 = ASSIGN tv195-.integer (i32)                        #31
   t198.up32->void   = CONVERT &a.up32->$$unnamed100 (UnmgdArr[integer (i32)]192)                                                                           #33
   t199.up32->void   = CONVERT &z.up32->$$unnamed101 (UnmgdArr[integer (i32)]128)                                                                           #33
   t200.i32          = MULTIPLY 4.i32, j.integer (i32).a32                  #33
                       CALL &_unpack.CDecl.Function(up32->void,up32->void,i32,i32)->(void), t198.up32->void, t199.up32->void, t200.i32, 16(0x00000010).i32  #33
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG109.up32->char (i8)                                                          #34
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 34(0x00000022).i32                  #34
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN j.integer (i32).a32                                                                #34
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 34(0x00000022).i32                                                    #34
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 41(0x29).char (i8)                                                                      #34
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 34(0x00000022).i32                                                         #34
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #34
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 34(0x00000022).i32                                                         #34
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #34
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 34(0x00000022).i32                                                         #34
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG105.up32->char (i8)                                                          #36
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 36(0x00000024).i32                  #36
   i.integer (i32).a32 = ASSIGN m.integer (i32).a32                         #37
   tv202-.integer (i32) = ASSIGN i.integer (i32).a32                        #37
                       GOTO $L40                                            #37
$L40: (references=2)                                                        #37
   t203.i32          = COMPARE(GT) tv202-.integer (i32), n.integer (i32).a32 #37
                       CONDITIONALBRANCH(True) t203.i32, $L41, $L42         #37
$L41: (references=1)                                                        #37
   tv204-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #37
                       GOTO $L43                                            #37
$L42: (references=1)                                                        #37
   tv204-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #37
                       GOTO $L43                                            #37
$L43: (references=2)                                                        #37
                       CONDITIONALBRANCH(True) tv204"$$data"(Boolean (Enum32)+0).i32, $L44, $L45                                                            #37
$L45: (references=1)                                                        #37
   i.integer (i32).a32 = ASSIGN tv202-.integer (i32)                        #37
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 3.i32, 8.i32, i.integer (i32).a32, 0.i32, 37(0x00000025).i32 #37
   t205.i32          = SUBTRACT i.integer (i32).a32, 3.i32                  #37
   t206.i32          = MULTIPLY 1.i32, t205.i32                             #37
   t207.i32          = ADD t206.i32, 0.i32                                  #37
   tv208-.i32        = MULTIPLY 4.i32, t207.i32                             #37
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 20(0x00000014).i32, tv208-.i32, 0.i32, 37(0x00000025).i32                                                                         #37
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 2.integer (i32)                                    #37
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [&a.up32->$$unnamed100 (UnmgdArr[integer (i32)]192)+tv208-.i32].integer (i32).a32  #37
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 37(0x00000025).i32                                                    #37
   t209.integer (i32) = ADD i.integer (i32).a32, 1.integer (i32)            #37
   tv202-.integer (i32) = ASSIGN t209.integer (i32)                         #37
                       GOTO $L40                                            #37
$L44: (references=1)                                                        #37
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #38
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 38(0x00000026).i32                                                                #38
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #38
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 38(0x00000026).i32                                                                #38
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG106.up32->char (i8)                                                          #39
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 39(0x00000027).i32                  #39
   i.integer (i32).a32 = ASSIGN u.integer (i32).a32                         #40
   tv210-.integer (i32) = ASSIGN i.integer (i32).a32                        #40
                       GOTO $L46                                            #40
$L46: (references=2)                                                        #40
   t211.i32          = COMPARE(GT) tv210-.integer (i32), v.integer (i32).a32 #40
                       CONDITIONALBRANCH(True) t211.i32, $L47, $L48         #40
$L47: (references=1)                                                        #40
   tv212-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #40
                       GOTO $L49                                            #40
$L48: (references=1)                                                        #40
   tv212-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #40
                       GOTO $L49                                            #40
$L49: (references=2)                                                        #40
                       CONDITIONALBRANCH(True) tv212"$$data"(Boolean (Enum32)+0).i32, $L50, $L51                                                            #40
$L51: (references=1)                                                        #40
   i.integer (i32).a32 = ASSIGN tv210-.integer (i32)                        #40
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 4.i32, 7.i32, i.integer (i32).a32, 0.i32, 40(0x00000028).i32 #40
   t213.i32          = SUBTRACT i.integer (i32).a32, 4.i32                  #40
   t214.i32          = MULTIPLY 1.i32, t213.i32                             #40
   t215.i32          = ADD t214.i32, 0.i32                                  #40
   tv216-.i32        = MULTIPLY 4.i32, t215.i32                             #40
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 12(0x0000000c).i32, tv216-.i32, 0.i32, 40(0x00000028).i32                                                                         #40
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 2.integer (i32)                                    #40
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [&z.up32->$$unnamed101 (UnmgdArr[integer (i32)]128)+tv216-.i32].integer (i32).a32  #40
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 40(0x00000028).i32                                                    #40
   t217.integer (i32) = ADD i.integer (i32).a32, 1.integer (i32)            #40
   tv210-.integer (i32) = ASSIGN t217.integer (i32)                         #40
                       GOTO $L46                                            #40
$L50: (references=1)                                                        #40
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #42
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 42(0x0000002a).i32                                                                #42
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #42
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 42(0x0000002a).i32                                                                #42
   t218.integer (i32) = ADD j.integer (i32).a32, 1.integer (i32)            #42
   tv195-.integer (i32) = ASSIGN t218.integer (i32)                         #42
                       GOTO $L34                                            #42
$L38: (references=1)                                                        #31
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #42
                       RETURN $L52(T)                                       #43
$L52: (references=1)                                                        #43
                       EXITFUNCTION                                         #43
$L2: (references=0)                                                         #43
                       END                                                  #43
Writing Array2.obj...

Array2.p - 0 error(s), 0 warning(s).

Linking...

Array2.exe - 0 error(s), 0 warning(s).

a = 3 4 5 6 7 8
z = 4 5 6 7
pack(a,0,z)
a = 3 4 5 6 7 8
z = 3 4 5 6
pack(a,1,z)
a = 3 4 5 6 7 8
z = 4 5 6 7
unpack(z,a,0)
a = 4 5 6 7 7 8
z = 4 5 6 7
unpack(z,a,1)
a = 4 4 5 6 7 8
z = 4 5 6 7
