Compiling...
Ugly.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 38(0x00000026).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 38(0x00000026).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Ugly.CDecl.Function()->(void)                   #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #6
                       START Ugly(T)                                         #6
Ugly: (references=1)                                                         #6
                       ENTERFUNCTION                                         #6
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 2.i32, 13(0x0000000d).i32, &n.up32->integer (i32), &sieve.up32->$$unnamed100 (up32->$$unnamed100`1 (i32)), &primes.up32->$$unnamed100 (up32->$$unnamed100`1 (i32)), &next.up32->integer (i32), &j.up32->integer (i32), &c.up32->integer (i32), &$$temp100.up32->$$unnamed103 (up32->integer (i32)), &$$temp101.up32->epsilon (null32->unk), &$$temp102.up32->$$unnamed104 (up32->integer (i32)), &$$temp103.up32->$$unnamed100 (up32->$$unnamed100`1 (i32)), &$$temp104.up32->$$unnamed105 (up32->integer (i32)), &$$temp105.up32->$$unnamed100 (up32->$$unnamed100`1 (i32)), &$$temp106.up32->epsilon (null32->unk)                                                                          #36
   n.integer (i32).a32 = ASSIGN 256(0x00000100).integer (i32)               #11
   t141.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 2.i32, 256(0x00000100).i32, 0.i32, 12(0x0000000c).i32        #14
   sieve.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32 = CONVERT t141.set (up32->void)                                                                      #14
   t145.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 2.i32, 256(0x00000100).i32, 0.i32, 12(0x0000000c).i32        #14
   t146.$$unnamed100 (up32->$$unnamed100`1 (i32)) = CONVERT t145.set (up32->void)                                                                           #14
   primes.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32 = ASSIGN t146.$$unnamed100 (up32->$$unnamed100`1 (i32))                                             #14
   t152.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 2.i32, 2.integer (i32), n.integer (i32).a32                                   #23
   t153.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 2.i32, 2.integer (i32), n.integer (i32).a32                                   #23
   t154.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t152.i32, t153.i32, 0.i32, 23(0x00000017).i32                #23
   t156.$$unnamed103 (up32->integer (i32)) = CONVERT t154.set (up32->void)  #23
   $$temp100.$$unnamed103 (up32->integer (i32)).a32 = ASSIGN t156.$$unnamed103 (up32->integer (i32))                                                        #23
   t157.set (up32->void) = CONVERT $$temp100.$$unnamed103 (up32->integer (i32)).a32                                                                         #23
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 23(0x00000017).i32, t157.set (up32->void), 4.i32, 1.i32, 2.integer (i32), n.integer (i32).a32                             #23
   t158.set (up32->void) = CONVERT sieve.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                      #23
   t159.set (up32->void) = CONVERT $$temp100.$$unnamed103 (up32->integer (i32)).a32                                                                         #23
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t158.set (up32->void), t159.set (up32->void), 4.i32, 0.i32, 23(0x00000017).i32                                              #23
   t160.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 0.i32, 0.i32, 23(0x00000017).i32                      #23
   t162.epsilon (null32->unk) = CONVERT t160.set (up32->void)               #23
   $$temp101.epsilon (null32->unk).a32 = ASSIGN t162.epsilon (null32->unk)  #23
   t163.set (up32->void) = CONVERT $$temp101.epsilon (null32->unk).a32      #23
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 23(0x00000017).i32, t163.set (up32->void), 0.i32, 0.i32                                                                   #23
   t164.set (up32->void) = CONVERT primes.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                     #23
   t165.set (up32->void) = CONVERT $$temp101.epsilon (null32->unk).a32      #23
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t164.set (up32->void), t165.set (up32->void), 4.i32, 0.i32, 23(0x00000017).i32                                              #23
   next.integer (i32).a32 = ASSIGN 2.integer (i32)                          #23
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN next.integer (i32).a32                                                             #23
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 23(0x00000017).i32                                                    #23
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 23(0x00000017).i32                                                                #23
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 23(0x00000017).i32                                                                #23
                       GOTO $L4                                             #38
$L4: (references=2)                                                         #38
                       GOTO $L5                                             #29
$L5: (references=2)                                                         #29
   t167.set (up32->void) = CONVERT sieve.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                      #26
   t168.i32          = CALL &_set_membership.CDecl.Function(set (up32->void),i32)->(i32), t167.set (up32->void), next.integer (i32).a32                     #26
   t169.i32          = COMPARE(NE) t168.i32, 0.i32                          #26
                       CONDITIONALBRANCH(True) t169.i32, $L6, $L7           #26
$L6: (references=1)                                                         #26
   tv172-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #26
                       GOTO $L8                                             #26
$L7: (references=1)                                                         #26
   tv172-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #26
                       GOTO $L8                                             #26
$L8: (references=2)                                                         #26
   t173.i32          = NOT tv172"$$data"(Boolean (Enum32)+0).i32            #26
                       CONDITIONALBRANCH(True) t173.i32, $L9, $L10          #26
$L9: (references=1)                                                         #26
   tv174-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #26
                       GOTO $L11                                            #26
$L10: (references=1)                                                        #26
   tv174-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #26
                       GOTO $L11                                            #26
$L11: (references=2)                                                        #26
                       CONDITIONALBRANCH(True) tv174"$$data"(Boolean (Enum32)+0).i32, $L12, $L13                                                            #26
$L12: (references=1)                                                        #26
   t175.i32          = CALL &_succ.CDecl.Function(i32)->(i32), next.integer (i32).a32                                                                       #29
   next.integer (i32).a32 = ASSIGN t175.i32                                 #29
                       GOTO $L5                                             #29
$L13: (references=1)                                                        #26
   t177.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 1.i32, next.integer (i32).a32                                                 #29
   t178.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 1.i32, next.integer (i32).a32                                                 #29
   t179.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t177.i32, t178.i32, 0.i32, 29(0x0000001d).i32                #29
   t181.$$unnamed104 (up32->integer (i32)) = CONVERT t179.set (up32->void)  #29
   $$temp102.$$unnamed104 (up32->integer (i32)).a32 = ASSIGN t181.$$unnamed104 (up32->integer (i32))                                                        #29
   t182.set (up32->void) = CONVERT $$temp102.$$unnamed104 (up32->integer (i32)).a32                                                                         #29
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 29(0x0000001d).i32, t182.set (up32->void), 4.i32, 1.i32, next.integer (i32).a32, next.integer (i32).a32                   #29
   t183.set (up32->void) = CONVERT primes.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                     #29
   t184.set (up32->void) = CONVERT $$temp102.$$unnamed104 (up32->integer (i32)).a32                                                                         #29
   t185.set (up32->void) = CALL &_set_union.CDecl.Function(set (up32->void),set (up32->void),i32,i32)->(set (up32->void)), t183.set (up32->void), t184.set (up32->void), 0.i32, 29(0x0000001d).i32                                          #29
   t187.$$unnamed100 (up32->$$unnamed100`1 (i32)) = CONVERT t185.set (up32->void)                                                                           #29
   $$temp103.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32 = ASSIGN t187.$$unnamed100 (up32->$$unnamed100`1 (i32))                                          #29
   t188.set (up32->void) = CONVERT primes.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                     #29
   t189.set (up32->void) = CONVERT $$temp103.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                  #29
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t188.set (up32->void), t189.set (up32->void), 4.i32, 0.i32, 29(0x0000001d).i32                                              #29
   t190.integer (i32) = MULTIPLY 2.integer (i32), next.integer (i32).a32    #30
   t191.integer (i32) = SUBTRACT t190.integer (i32), 1.integer (i32)        #30
   c.integer (i32).a32 = ASSIGN t191.integer (i32)                          #30
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN c.integer (i32).a32                                                                #31
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 31(0x0000001f).i32                                                    #31
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #31
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 31(0x0000001f).i32                                                                #31
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #31
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 31(0x0000001f).i32                                                                #31
   j.integer (i32).a32 = ASSIGN next.integer (i32).a32                      #32
                       GOTO $L14                                            #33
$L14: (references=2)                                                        #33
   t192.i32          = COMPARE(LE) j.integer (i32).a32, n.integer (i32).a32 #33
                       CONDITIONALBRANCH(True) t192.i32, $L15, $L16         #33
$L15: (references=1)                                                        #33
   tv193-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #33
                       GOTO $L17                                            #33
$L16: (references=1)                                                        #33
   tv193-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #33
                       GOTO $L17                                            #33
$L17: (references=2)                                                        #33
                       CONDITIONALBRANCH(True) tv193"$$data"(Boolean (Enum32)+0).i32, $L18, $L19                                                            #33
$L18: (references=1)                                                        #33
   t195.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 1.i32, j.integer (i32).a32                                                    #34
   t196.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 1.i32, j.integer (i32).a32                                                    #34
   t197.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t195.i32, t196.i32, 0.i32, 34(0x00000022).i32                #34
   t199.$$unnamed105 (up32->integer (i32)) = CONVERT t197.set (up32->void)  #34
   $$temp104.$$unnamed105 (up32->integer (i32)).a32 = ASSIGN t199.$$unnamed105 (up32->integer (i32))                                                        #34
   t200.set (up32->void) = CONVERT $$temp104.$$unnamed105 (up32->integer (i32)).a32                                                                         #34
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 34(0x00000022).i32, t200.set (up32->void), 4.i32, 1.i32, j.integer (i32).a32, j.integer (i32).a32                         #34
   t201.set (up32->void) = CONVERT sieve.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                      #34
   t202.set (up32->void) = CONVERT $$temp104.$$unnamed105 (up32->integer (i32)).a32                                                                         #34
   t203.set (up32->void) = CALL &_set_difference.CDecl.Function(set (up32->void),set (up32->void),i32,i32)->(set (up32->void)), t201.set (up32->void), t202.set (up32->void), 0.i32, 34(0x00000022).i32                                     #34
   t205.$$unnamed100 (up32->$$unnamed100`1 (i32)) = CONVERT t203.set (up32->void)                                                                           #34
   $$temp105.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32 = ASSIGN t205.$$unnamed100 (up32->$$unnamed100`1 (i32))                                          #34
   t206.set (up32->void) = CONVERT sieve.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                      #34
   t207.set (up32->void) = CONVERT $$temp105.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                  #34
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t206.set (up32->void), t207.set (up32->void), 4.i32, 0.i32, 34(0x00000022).i32                                              #34
   t208.integer (i32) = ADD j.integer (i32).a32, c.integer (i32).a32        #35
   j.integer (i32).a32 = ASSIGN t208.integer (i32)                          #35
                       GOTO $L14                                            #35
$L19: (references=1)                                                        #33
   t209.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 0.i32, 0.i32, 36(0x00000024).i32                      #36
   t211.epsilon (null32->unk) = CONVERT t209.set (up32->void)               #36
   $$temp106.epsilon (null32->unk).a32 = ASSIGN t211.epsilon (null32->unk)  #36
   t212.set (up32->void) = CONVERT $$temp106.epsilon (null32->unk).a32      #36
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 36(0x00000024).i32, t212.set (up32->void), 0.i32, 0.i32                                                                   #36
   t213.set (up32->void) = CONVERT sieve.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                      #36
   t214.set (up32->void) = CONVERT $$temp106.epsilon (null32->unk).a32      #36
   t215.i32          = CALL &_set_equality.CDecl.Function(set (up32->void),set (up32->void))->(i32), t213.set (up32->void), t214.set (up32->void)           #36
   t216.i32          = COMPARE(EQ) t215.i32, 1.i32                          #36
                       CONDITIONALBRANCH(True) t216.i32, $L20, $L21         #36
$L20: (references=1)                                                        #36
   tv217-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #36
                       GOTO $L22                                            #36
$L21: (references=1)                                                        #36
   tv217-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #36
                       GOTO $L22                                            #36
$L22: (references=2)                                                        #36
                       CONDITIONALBRANCH(True) tv217"$$data"(Boolean (Enum32)+0).i32, $L23, $L4                                                             #36
$L23: (references=1)                                                        #36
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #36
   t219.set (up32->void) = CONVERT sieve.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                      #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t219.set (up32->void)                                                   #36
   t220.set (up32->void) = CONVERT primes.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                     #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t220.set (up32->void)                                                   #36
   t221.set (up32->void) = CONVERT $$temp100.$$unnamed103 (up32->integer (i32)).a32                                                                         #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t221.set (up32->void)                                                   #36
   t222.set (up32->void) = CONVERT sieve.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                      #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t222.set (up32->void)                                                   #36
   t223.set (up32->void) = CONVERT $$temp101.epsilon (null32->unk).a32      #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t223.set (up32->void)                                                   #36
   t224.set (up32->void) = CONVERT primes.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                     #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t224.set (up32->void)                                                   #36
   t225.set (up32->void) = CONVERT $$temp102.$$unnamed104 (up32->integer (i32)).a32                                                                         #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t225.set (up32->void)                                                   #36
   t226.set (up32->void) = CONVERT $$temp103.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                  #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t226.set (up32->void)                                                   #36
   t227.set (up32->void) = CONVERT primes.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                     #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t227.set (up32->void)                                                   #36
   t228.set (up32->void) = CONVERT $$temp104.$$unnamed105 (up32->integer (i32)).a32                                                                         #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t228.set (up32->void)                                                   #36
   t229.set (up32->void) = CONVERT $$temp105.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                  #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t229.set (up32->void)                                                   #36
   t230.set (up32->void) = CONVERT sieve.$$unnamed100 (up32->$$unnamed100`1 (i32)).a32                                                                      #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t230.set (up32->void)                                                   #36
   t231.set (up32->void) = CONVERT $$temp106.epsilon (null32->unk).a32      #36
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t231.set (up32->void)                                                   #36
                       RETURN $L24(T)                                       #38
$L24: (references=1)                                                        #38
                       EXITFUNCTION                                         #38
$L2: (references=0)                                                         #38
                       END                                                  #38
Writing Ugly.obj...

Ugly.p - 0 error(s), 0 warning(s).

Linking...

Ugly.exe - 0 error(s), 0 warning(s).

2
3
5
7
11
13
17
19
23
29
31
37
41
43
47
53
59
61
67
71
73
79
83
89
97
101
103
107
109
113
127
131
137
139
149
151
157
163
167
173
179
181
191
193
197
199
211
223
227
229
233
239
241
251
257
263
269
271
277
281
283
293
307
311
313
317
331
337
347
349
353
359
367
373
379
383
389
397
401
409
419
421
431
433
439
443
449
457
461
463
467
479
487
491
499
503
509
