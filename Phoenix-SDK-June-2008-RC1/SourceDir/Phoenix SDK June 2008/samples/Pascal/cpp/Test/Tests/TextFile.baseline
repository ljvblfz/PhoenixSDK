Compiling...
TextFile.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 14(0x0000000e).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 14(0x0000000e).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &TextFile.CDecl.Function()->(void)               #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #3
                       START TextFile(T)                                     #3
TextFile: (references=1)                                                     #3
                       ENTERFUNCTION                                         #3
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG106.up32->char (i8), 0.i32, 2.i32, 2.i32, &t.up32->text (Aggregate40), &c.up32->char (i8)                                                 #12
   t"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32 = CALL &_file_open.CDecl.Function(up32->i8,i32,i32,i32)->(HANDLE (up32->void)), &$SG105.up32->char (i8), 1.i32, 0.i32, 5.i32                                             #5
   t140.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), t"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 5.i32                                                                #5
   [&t.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t140.i8             #5
                       CALL &_file_rewrite.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), t"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 7.i32                                                               #7
   t"$current_value"(text (Aggregate40)+32).char (i8).a8 = ASSIGN 97(0x61).char (i8)                                                                         #8
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), t"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, [&t.up32->text (Aggregate40)+4].char (i8).a8, 0.i32, 8.i32             #8
   t"$current_value"(text (Aggregate40)+32).char (i8).a8 = ASSIGN 98(0x62).char (i8)                                                                         #8
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), t"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, [&t.up32->text (Aggregate40)+4].char (i8).a8, 0.i32, 8.i32             #8
   t"$current_value"(text (Aggregate40)+32).char (i8).a8 = ASSIGN 99(0x63).char (i8)                                                                         #8
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), t"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, [&t.up32->text (Aggregate40)+4].char (i8).a8, 0.i32, 8.i32             #8
                       CALL &_file_reset.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), t"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 9.i32                                                                 #9
   t142.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), t"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 9.i32                                                                #9
   [&t.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t142.i8             #9
                       GOTO $L4                                             #10
$L4: (references=2)                                                         #10
   t143.i32          = CALL &_file_eof.CDecl.Function(HANDLE (up32->void))->(i32), t"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32         #10
                       CONDITIONALBRANCH(True) t143.i32, $L5, $L6           #10
$L5: (references=1)                                                         #10
   tv146-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #10
                       GOTO $L7                                             #10
$L6: (references=1)                                                         #10
   tv146-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #10
                       GOTO $L7                                             #10
$L7: (references=2)                                                         #10
   tv146-.Boolean (Enum32) = ASSIGN tv146-.Boolean (Enum32)                 #10
   t147.i32          = NOT tv146"$$data"(Boolean (Enum32)+0).i32            #10
                       CONDITIONALBRANCH(True) t147.i32, $L8, $L9           #10
$L8: (references=1)                                                         #10
   tv148-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #10
                       GOTO $L10                                            #10
$L9: (references=1)                                                         #10
   tv148-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #10
                       GOTO $L10                                            #10
$L10: (references=2)                                                        #10
                       CONDITIONALBRANCH(True) tv148"$$data"(Boolean (Enum32)+0).i32, $L11, $L12                                                            #10
$L11: (references=1)                                                        #10
   c.char (i8).a8    = ASSIGN t"$current_value"(text (Aggregate40)+32).char (i8).a8                                                                         #12
   t149.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), t"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 12(0x0000000c).i32                                                  #12
   [&t.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t149.i8            #12
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN c.char (i8).a8                                                                          #12
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 12(0x0000000c).i32                                                         #12
                       GOTO $L4                                             #12
$L12: (references=1)                                                        #10
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #12
                       RETURN $L13(T)                                       #14
$L13: (references=1)                                                        #14
                       EXITFUNCTION                                         #14
$L2: (references=0)                                                         #14
                       END                                                  #14
Writing TextFile.obj...

TextFile.p - 0 error(s), 0 warning(s).

Linking...

TextFile.exe - 0 error(s), 0 warning(s).

abc