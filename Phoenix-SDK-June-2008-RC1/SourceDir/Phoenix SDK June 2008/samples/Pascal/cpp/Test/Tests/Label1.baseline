Compiling...
Label1.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 22(0x00000016).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 22(0x00000016).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Label1.CDecl.Function()->(void)                 #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #3
                       START Label1(T)                                       #3
Label1: (references=1)                                                       #3
                       ENTERFUNCTION                                         #3
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG108.up32->char (i8), 0.i32, 2.i32, 2.i32, &x.up32->integer (i32), &lbl.up32->$$unnamed100 (Aggregate64)                                   #21
   lbl"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32 = CALL &_file_open.CDecl.Function(up32->i8,i32,i32,i32)->(HANDLE (up32->void)), &$SG105.up32->char (i8), 0.i32, 0.i32, 6.i32                                   #6
   t142.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), lbl"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 6.i32                                                      #6
   [&lbl.up32->$$unnamed100 (Aggregate64)+4].integer (i32).a32 = ASSIGN t142.i32                                                                             #6
                       GOTO $L4                                             #22
$L4: (references=2)                                                         #22
                       GOTO 222                                             #21
333: (references=1)                                                         #10
   x.integer (i32).a32 = ASSIGN lbl"$current_value"($$unnamed100 (Aggregate64)+32).integer (i32).a32                                                        #10
   t145.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), lbl"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 10(0x0000000a).i32                                        #10
   [&lbl.up32->$$unnamed100 (Aggregate64)+4].integer (i32).a32 = ASSIGN t145.i32                                                                            #10
   t146.i32          = COMPARE(EQ) x.integer (i32).a32, 888(0x00000378).integer (i32)                                                                       #11
                       CONDITIONALBRANCH(True) t146.i32, $L7, $L8           #11
$L7: (references=1)                                                         #11
   tv149-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #11
                       GOTO $L9                                             #11
$L8: (references=1)                                                         #11
   tv149-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #11
                       GOTO $L9                                             #11
$L9: (references=2)                                                         #11
                       CONDITIONALBRANCH(True) tv149"$$data"(Boolean (Enum32)+0).i32, $L10, $L11                                                            #11
$L10: (references=1)                                                        #11
                       GOTO 888                                             #21
                       GOTO $L12                                            #11
$L11: (references=1)                                                        #11
   t151.i32          = COMPARE(EQ) x.integer (i32).a32, 999(0x000003e7).integer (i32)                                                                       #12
                       CONDITIONALBRANCH(True) t151.i32, $L14, $L15         #12
$L14: (references=1)                                                        #12
   tv152-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #12
                       GOTO $L16                                            #12
$L15: (references=1)                                                        #12
   tv152-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #12
                       GOTO $L16                                            #12
$L16: (references=2)                                                        #12
                       CONDITIONALBRANCH(True) tv152"$$data"(Boolean (Enum32)+0).i32, $L17, $L18                                                            #12
$L17: (references=1)                                                        #12
                       GOTO 999                                             #21
                       GOTO $L19                                            #12
$L18: (references=1)                                                        #12
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN x.integer (i32).a32                                                                #14
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 14(0x0000000e).i32                                                    #14
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG106.up32->char (i8)                                                          #14
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 14(0x0000000e).i32                  #14
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #14
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 14(0x0000000e).i32                                                                #14
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #14
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 14(0x0000000e).i32                                                                #14
                       GOTO 111                                             #21
                       GOTO $L19                                            #14
$L19: (references=2)                                                        #12
                       GOTO $L12                                            #14
$L12: (references=2)                                                        #11
                       GOTO 222                                             #16
222: (references=2)                                                         #16
                       GOTO 333                                             #16
888: (references=1)                                                         #17
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN x.integer (i32).a32                                                                #17
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 17(0x00000011).i32                                                    #17
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #17
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 17(0x00000011).i32                                                                #17
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #17
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 17(0x00000011).i32                                                                #17
                       GOTO 111                                             #21
999: (references=1)                                                         #19
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN x.integer (i32).a32                                                                #19
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 19(0x00000013).i32                                                    #19
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #19
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 19(0x00000013).i32                                                                #19
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #19
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 19(0x00000013).i32                                                                #19
                       GOTO 111                                             #20
111: (references=3)                                                         #20
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG107.up32->char (i8)                                                          #20
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 20(0x00000014).i32                  #20
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #20
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 20(0x00000014).i32                                                                #20
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #20
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 20(0x00000014).i32                                                                #20
   t163.i32          = COMPARE(LT) x.integer (i32).a32, 0.integer (i32)     #21
                       CONDITIONALBRANCH(True) t163.i32, $L27, $L28         #21
$L27: (references=1)                                                        #21
   tv164-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #21
                       GOTO $L29                                            #21
$L28: (references=1)                                                        #21
   tv164-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #21
                       GOTO $L29                                            #21
$L29: (references=2)                                                        #21
                       CONDITIONALBRANCH(True) tv164"$$data"(Boolean (Enum32)+0).i32, $L30, $L4                                                             #21
$L30: (references=1)                                                        #21
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #21
                       RETURN $L31(T)                                       #22
$L31: (references=1)                                                        #22
                       EXITFUNCTION                                         #22
$L2: (references=0)                                                         #22
                       END                                                  #22
Writing Label1.obj...

Label1.p - 0 error(s), 0 warning(s).

Linking...

Label1.exe - 0 error(s), 0 warning(s).

888
111
999
111
111: not 888 nor 999...
111
222: not 888 nor 999...
111
333: not 888 nor 999...
111
-1: not 888 nor 999...
111
