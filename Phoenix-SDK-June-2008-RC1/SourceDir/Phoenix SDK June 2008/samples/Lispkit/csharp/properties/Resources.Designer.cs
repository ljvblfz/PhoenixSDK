//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1432
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lispkit.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Lispkit.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.IO;
        ///using System.Reflection;
        ///
        ////// &lt;summary&gt;
        ////// The main application class. This class parses the command line,
        ////// calls the $Lispkit.$Main method, and prints the result to the console.
        ////// &lt;/summary&gt;
        ///class Program
        ///{
        ///	public static void Main(string[] args)
        ///	{
        ///      // We allow a mix of literal strings and file names as the 
        ///      // command-line arguments. For example, if we assume that the 
        ///      // file that is named &apos;params.txt&apos; contains the 
        ///      // string &quot;a  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseListing {
            get {
                return ResourceManager.GetString("BaseListing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Diagnostics;
        ///
        ///// Note that this source file is shared between the compiler and 
        ///// compiled Lispkit programs. The LISPKIT_COMPILER compilation symbol
        ///// is defined by the compiler but not by individual programs. 
        ///// We use the LISPKIT_COMPILER symbol to add data members, properties,
        ///// and code that are used by the compiler, but are not needed by
        ///// actual Lispkit programs.
        ///
        ///namespace Lispkit.Sexp
        ///{
        ///   /// &lt;summary&gt;
        ///   /// Represents an error that occurs when attempti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SExp {
            get {
                return ResourceManager.GetString("SExp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.IO;
        ///
        ///namespace Lispkit.Sexp
        ///{
        ///   /// &lt;summary&gt;
        ///   /// Utility class to translate a text string into an S-expression.
        ///   /// &lt;/summary&gt;
        ///   class SExpReader
        ///   {
        ///      // The type of a string token.
        ///      private enum Type
        ///      {
        ///         AlphaNumeric,
        ///         Numeric,
        ///         Delimiter,
        ///         EndFile
        ///      }
        ///      
        ///      // The current token in the stream and its type.
        ///      private string token;
        ///      private Type type;
        ///
        ///      // The input stream.
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SExpReader {
            get {
                return ResourceManager.GetString("SExpReader", resourceCulture);
            }
        }
    }
}
