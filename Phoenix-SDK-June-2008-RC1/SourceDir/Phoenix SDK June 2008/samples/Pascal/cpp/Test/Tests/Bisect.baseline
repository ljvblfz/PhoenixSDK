Compiling...
Bisect.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 22(0x00000016).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 22(0x00000016).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Bisect.CDecl.Function()->(void)                 #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #4
                       START Bisect(T)                                       #4
Bisect: (references=1)                                                       #4
                       ENTERFUNCTION                                         #4
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG106.up32->char (i8), 0.i32, 2.i32, 4.i32, &eps.up32->real (f64), &x.up32->real (f64), &y.up32->real (f64), &bisect.up32->$$unnamed100 (Aggregate96)                                                                       #21
   eps.real (f64).a64 = ASSIGN 1E-14.real (f64)                              #6
   bisect"$runtime_handle"($$unnamed100 (Aggregate96)+0).HANDLE (up32->void).a32 = CALL &_file_open.CDecl.Function(up32->i8,i32,i32,i32)->(HANDLE (up32->void)), &$SG105.up32->char (i8), 0.i32, 0.i32, 7.i32                                #7
   t144.f64          = CALL &_file_get_double.CDecl.Function(HANDLE (up32->void),i32,i32)->(f64), bisect"$runtime_handle"($$unnamed100 (Aggregate96)+0).HANDLE (up32->void).a32, 0.i32, 7.i32                                                #7
   [&bisect.up32->$$unnamed100 (Aggregate96)+4].real (f64).a64 = ASSIGN t144.f64                                                                             #7
   x.real (f64).a64  = ASSIGN bisect"$current_value"($$unnamed100 (Aggregate96)+32).real (f64).a64                                                          #20
   t145.f64          = CALL &_file_get_double.CDecl.Function(HANDLE (up32->void),i32,i32)->(f64), bisect"$runtime_handle"($$unnamed100 (Aggregate96)+0).HANDLE (up32->void).a32, 0.i32, 20(0x00000014).i32                                  #20
   [&bisect.up32->$$unnamed100 (Aggregate96)+4].real (f64).a64 = ASSIGN t145.f64                                                                            #20
   y.real (f64).a64  = ASSIGN bisect"$current_value"($$unnamed100 (Aggregate96)+32).real (f64).a64                                                          #20
   t146.f64          = CALL &_file_get_double.CDecl.Function(HANDLE (up32->void),i32,i32)->(f64), bisect"$runtime_handle"($$unnamed100 (Aggregate96)+0).HANDLE (up32->void).a32, 0.i32, 20(0x00000014).i32                                  #20
   [&bisect.up32->$$unnamed100 (Aggregate96)+4].real (f64).a64 = ASSIGN t146.f64                                                                            #20
   t147.real (f64)   = CALL &zero.CDecl.Function(up32->CDecl.Function(real (f64))->(real (f64)),real (f64),real (f64))->(real (f64)), &_sin.up32->CDecl.Function(f64)->(f64), x.real (f64).a64, y.real (f64).a64                            #20
   [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64 = ASSIGN x.real (f64).a64                                                                      #20
                       CALL &_file_put_double.CDecl.Function(HANDLE (up32->void),f64,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64, 0.i32, 20(0x00000014).i32                                                    #20
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 32(0x20).char (i8)                                                                      #20
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 20(0x00000014).i32                                                         #20
   [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64 = ASSIGN y.real (f64).a64                                                                      #20
                       CALL &_file_put_double.CDecl.Function(HANDLE (up32->void),f64,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64, 0.i32, 20(0x00000014).i32                                                    #20
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 32(0x20).char (i8)                                                                      #20
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 20(0x00000014).i32                                                         #20
   [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64 = ASSIGN t147.real (f64)                                                                       #20
                       CALL &_file_put_double.CDecl.Function(HANDLE (up32->void),f64,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64, 0.i32, 20(0x00000014).i32                                                    #20
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #20
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 20(0x00000014).i32                                                                #20
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #20
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 20(0x00000014).i32                                                                #20
   x.real (f64).a64  = ASSIGN bisect"$current_value"($$unnamed100 (Aggregate96)+32).real (f64).a64                                                          #21
   t149.f64          = CALL &_file_get_double.CDecl.Function(HANDLE (up32->void),i32,i32)->(f64), bisect"$runtime_handle"($$unnamed100 (Aggregate96)+0).HANDLE (up32->void).a32, 0.i32, 21(0x00000015).i32                                  #21
   [&bisect.up32->$$unnamed100 (Aggregate96)+4].real (f64).a64 = ASSIGN t149.f64                                                                            #21
   y.real (f64).a64  = ASSIGN bisect"$current_value"($$unnamed100 (Aggregate96)+32).real (f64).a64                                                          #21
   t150.f64          = CALL &_file_get_double.CDecl.Function(HANDLE (up32->void),i32,i32)->(f64), bisect"$runtime_handle"($$unnamed100 (Aggregate96)+0).HANDLE (up32->void).a32, 0.i32, 21(0x00000015).i32                                  #21
   [&bisect.up32->$$unnamed100 (Aggregate96)+4].real (f64).a64 = ASSIGN t150.f64                                                                            #21
   t151.real (f64)   = CALL &zero.CDecl.Function(up32->CDecl.Function(real (f64))->(real (f64)),real (f64),real (f64))->(real (f64)), &_cos.up32->CDecl.Function(f64)->(f64), x.real (f64).a64, y.real (f64).a64                            #21
   [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64 = ASSIGN x.real (f64).a64                                                                      #21
                       CALL &_file_put_double.CDecl.Function(HANDLE (up32->void),f64,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64, 0.i32, 21(0x00000015).i32                                                    #21
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 32(0x20).char (i8)                                                                      #21
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 21(0x00000015).i32                                                         #21
   [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64 = ASSIGN y.real (f64).a64                                                                      #21
                       CALL &_file_put_double.CDecl.Function(HANDLE (up32->void),f64,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64, 0.i32, 21(0x00000015).i32                                                    #21
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 32(0x20).char (i8)                                                                      #21
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 21(0x00000015).i32                                                         #21
   [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64 = ASSIGN t151.real (f64)                                                                       #21
                       CALL &_file_put_double.CDecl.Function(HANDLE (up32->void),f64,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].real (f64).a64, 0.i32, 21(0x00000015).i32                                                    #21
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #21
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 21(0x00000015).i32                                                                #21
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #21
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 21(0x00000015).i32                                                                #21
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #21
                       RETURN $L4(T)                                        #22
$L4: (references=1)                                                         #22
                       EXITFUNCTION                                         #22
$L2: (references=0)                                                         #22
                       END                                                  #22

IR after Type Checker (control chktype)

Function Unit #3
$L1: (references=0)                                                          #9
                       START zero(T)                                         #9
zero: (references=1)                                                         #9
   f.up32->CDecl.Function(real (f64))->(real (f64)).a32, a.real (f64).a64, b.real (f64).a64 = ENTERFUNCTION                                                  #9
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG106.up32->char (i8), 0.i32, 3.i32, 7.i32, &f.up32->up32->CDecl.Function(real (f64))->(real (f64)), &a.up32->real (f64), &b.up32->real (f64), &zero.up32->real (f64), &x.up32->real (f64), &z.up32->real (f64), &s.up32->Boolean (Enum32)                                                                  #17
   t144.real (f64)   = CALL f.up32->CDecl.Function(real (f64))->(real (f64)).a32, a.real (f64).a64                                                          #11
   t146.i32          = COMPARE(FLT) t144.real (f64), 0.real (f64)           #11
                       CONDITIONALBRANCH(True) t146.i32, $L4, $L5           #11
$L4: (references=1)                                                         #11
   tv149-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #11
                       GOTO $L6                                             #11
$L5: (references=1)                                                         #11
   tv149-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #11
                       GOTO $L6                                             #11
$L6: (references=2)                                                         #11
   s.Boolean (Enum32).a32 = ASSIGN tv149-.Boolean (Enum32)                  #11
                       GOTO $L7                                             #15
$L7: (references=2)                                                         #15
   t150.real (f64)   = ADD a.real (f64).a64, b.real (f64).a64               #12
   x.real (f64).a64  = DIVIDE t150.real (f64), 2.real (f64)                 #12
   t152.real (f64)   = CALL f.up32->CDecl.Function(real (f64))->(real (f64)).a32, x.real (f64).a64                                                          #13
   z.real (f64).a64  = ASSIGN t152.real (f64)                               #13
   t153.real (f64)   = CONVERT 0.integer (i32)                              #14
   t154.i32          = COMPARE(FLT) z.real (f64).a64, t153.real (f64)       #14
                       CONDITIONALBRANCH(True) t154.i32, $L8, $L9           #14
$L8: (references=1)                                                         #14
   tv155-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #14
                       GOTO $L10                                            #14
$L9: (references=1)                                                         #14
   tv155-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #14
                       GOTO $L10                                            #14
$L10: (references=2)                                                        #14
   t156.i32          = COMPARE(EQ) tv155"$$data"(Boolean (Enum32)+0).i32, s"$$data"(Boolean (Enum32)+0).i32.a32                                             #14
                       CONDITIONALBRANCH(True) t156.i32, $L11, $L12         #14
$L11: (references=1)                                                        #14
   tv157-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #14
                       GOTO $L13                                            #14
$L12: (references=1)                                                        #14
   tv157-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #14
                       GOTO $L13                                            #14
$L13: (references=2)                                                        #14
                       CONDITIONALBRANCH(True) tv157"$$data"(Boolean (Enum32)+0).i32, $L14, $L15                                                            #14
$L14: (references=1)                                                        #14
   a.real (f64).a64  = ASSIGN x.real (f64).a64                              #14
                       GOTO $L16                                            #14
$L15: (references=1)                                                        #14
   b.real (f64).a64  = ASSIGN x.real (f64).a64                              #15
                       GOTO $L16                                            #15
$L16: (references=2)                                                        #14
   tv158.real (f64)  = SUBTRACT a.real (f64).a64, b.real (f64).a64          #15
   t159.real (f64)   = SUBTRACT a.real (f64).a64, b.real (f64).a64          #15
   t160.f64          = CALL &_fabs.CDecl.Function(f64)->(f64), t159.real (f64) #15
   t161.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #15
   t162.i32          = COMPARE(FLE) t160.f64, [t161.up32->void].real (f64).a64 #15
                       CONDITIONALBRANCH(True) t162.i32, $L17, $L18         #15
$L17: (references=1)                                                        #15
   tv163-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #15
                       GOTO $L19                                            #15
$L18: (references=1)                                                        #15
   tv163-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #15
                       GOTO $L19                                            #15
$L19: (references=2)                                                        #15
                       CONDITIONALBRANCH(True) tv163"$$data"(Boolean (Enum32)+0).i32, $L20, $L7                                                             #15
$L20: (references=1)                                                        #15
   zero.real (f64).a64 = ASSIGN x.real (f64).a64                            #17
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 3.i32                                                                   #17
                       RETURN zero.real (f64).a64, $L21(T)                  #17
$L21: (references=1)                                                        #17
                       EXITFUNCTION                                         #17
$L2: (references=0)                                                         #17
                       END                                                  #17
Writing Bisect.obj...

Bisect.p - 0 error(s), 0 warning(s).

Linking...

Bisect.exe - 0 error(s), 0 warning(s).

-1.000000 1.000000 -0.000000
1.000000 2.000000 1.570796
