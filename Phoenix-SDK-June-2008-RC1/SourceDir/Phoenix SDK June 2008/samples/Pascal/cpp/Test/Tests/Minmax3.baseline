Compiling...
Minmax3.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 48(0x00000030).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 48(0x00000030).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Minmax3.CDecl.Function()->(void)                #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #4
                       START Minmax3(T)                                      #4
Minmax3: (references=1)                                                      #4
                       ENTERFUNCTION                                         #4
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG106.up32->char (i8), 0.i32, 2.i32, 9.i32, &n.up32->integer (i32), &a.up32->list (UnmgdArr[integer (i32)]640), &b.up32->list (UnmgdArr[integer (i32)]640), &i.up32->integer (i32), &min1.up32->integer (i32), &min2.up32->integer (i32), &max1.up32->integer (i32), &max2.up32->integer (i32), &minmax3.up32->$$unnamed100 (Aggregate64)                                                   #47
   n.integer (i32).a32 = ASSIGN 20(0x00000014).integer (i32)                 #6
   minmax3"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32 = CALL &_file_open.CDecl.Function(up32->i8,i32,i32,i32)->(HANDLE (up32->void)), &$SG105.up32->char (i8), 0.i32, 0.i32, 10(0x0000000a).i32                 #10
   t151.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), minmax3"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 10(0x0000000a).i32                                    #10
   [&minmax3.up32->$$unnamed100 (Aggregate64)+4].integer (i32).a32 = ASSIGN t151.i32                                                                        #10
   i.integer (i32).a32 = ASSIGN 1.integer (i32)                             #32
   tv152-.integer (i32) = ASSIGN i.integer (i32).a32                        #32
                       GOTO $L4                                             #32
$L4: (references=2)                                                         #32
   t153.i32          = COMPARE(GT) tv152-.integer (i32), n.integer (i32).a32 #32
                       CONDITIONALBRANCH(True) t153.i32, $L5, $L6           #32
$L5: (references=1)                                                         #32
   tv156-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #32
                       GOTO $L7                                             #32
$L6: (references=1)                                                         #32
   tv156-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #32
                       GOTO $L7                                             #32
$L7: (references=2)                                                         #32
                       CONDITIONALBRANCH(True) tv156"$$data"(Boolean (Enum32)+0).i32, $L8, $L9                                                              #32
$L9: (references=1)                                                         #32
   i.integer (i32).a32 = ASSIGN tv152-.integer (i32)                        #32
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, i.integer (i32).a32, 0.i32, 33(0x00000021).i32                                                                #33
   t157.i32          = SUBTRACT i.integer (i32).a32, 1.i32                  #33
   t158.i32          = MULTIPLY 1.i32, t157.i32                             #33
   t159.i32          = ADD t158.i32, 0.i32                                  #33
   tv160-.i32        = MULTIPLY 4.i32, t159.i32                             #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv160-.i32, 0.i32, 33(0x00000021).i32                                                                         #33
   [&a.up32->list (UnmgdArr[integer (i32)]640)+tv160-.i32].integer (i32).a32 = ASSIGN minmax3"$current_value"($$unnamed100 (Aggregate64)+32).integer (i32).a32 #33
   t161.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), minmax3"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 33(0x00000021).i32                                    #33
   [&minmax3.up32->$$unnamed100 (Aggregate64)+4].integer (i32).a32 = ASSIGN t161.i32                                                                        #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, i.integer (i32).a32, 0.i32, 33(0x00000021).i32                                                                #33
   t162.i32          = SUBTRACT i.integer (i32).a32, 1.i32                  #33
   t163.i32          = MULTIPLY 1.i32, t162.i32                             #33
   t164.i32          = ADD t163.i32, 0.i32                                  #33
   tv165-.i32        = MULTIPLY 4.i32, t164.i32                             #33
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv165-.i32, 0.i32, 33(0x00000021).i32                                                                         #33
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #33
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [&a.up32->list (UnmgdArr[integer (i32)]640)+tv165-.i32].integer (i32).a32          #33
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 33(0x00000021).i32                                                    #33
   t167.integer (i32) = ADD i.integer (i32).a32, 1.integer (i32)            #33
   tv152-.integer (i32) = ASSIGN t167.integer (i32)                         #33
                       GOTO $L4                                             #33
$L8: (references=1)                                                         #32
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #34
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 34(0x00000022).i32                                                                #34
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #34
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 34(0x00000022).i32                                                                #34
                       CALL &minmax.CDecl.Function(up32->list (UnmgdArr[integer (i32)]640),up32->integer (i32),up32->integer (i32))->(void), &a.up32->list (UnmgdArr[integer (i32)]640), &min1.up32->integer (i32), &max1.up32->integer (i32) #35
   t168.integer (i32) = SUBTRACT max1.integer (i32).a32, min1.integer (i32).a32 #36
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #36
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN min1.integer (i32).a32                                                             #36
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 36(0x00000024).i32                                                    #36
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #36
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN max1.integer (i32).a32                                                             #36
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 36(0x00000024).i32                                                    #36
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #36
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN t168.integer (i32)                                                                 #36
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 36(0x00000024).i32                                                    #36
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #36
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 36(0x00000024).i32                                                                #36
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #36
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 36(0x00000024).i32                                                                #36
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #36
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 36(0x00000024).i32                                                                #36
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #36
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 36(0x00000024).i32                                                                #36
   i.integer (i32).a32 = ASSIGN 1.integer (i32)                             #37
   tv169-.integer (i32) = ASSIGN i.integer (i32).a32                        #37
                       GOTO $L10                                            #37
$L10: (references=2)                                                        #37
   t170.i32          = COMPARE(GT) tv169-.integer (i32), n.integer (i32).a32 #37
                       CONDITIONALBRANCH(True) t170.i32, $L11, $L12         #37
$L11: (references=1)                                                        #37
   tv171-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #37
                       GOTO $L13                                            #37
$L12: (references=1)                                                        #37
   tv171-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #37
                       GOTO $L13                                            #37
$L13: (references=2)                                                        #37
                       CONDITIONALBRANCH(True) tv171"$$data"(Boolean (Enum32)+0).i32, $L14, $L15                                                            #37
$L15: (references=1)                                                        #37
   i.integer (i32).a32 = ASSIGN tv169-.integer (i32)                        #37
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, i.integer (i32).a32, 0.i32, 38(0x00000026).i32                                                                #38
   t172.i32          = SUBTRACT i.integer (i32).a32, 1.i32                  #38
   t173.i32          = MULTIPLY 1.i32, t172.i32                             #38
   t174.i32          = ADD t173.i32, 0.i32                                  #38
   tv175-.i32        = MULTIPLY 4.i32, t174.i32                             #38
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv175-.i32, 0.i32, 38(0x00000026).i32                                                                         #38
   [&b.up32->list (UnmgdArr[integer (i32)]640)+tv175-.i32].integer (i32).a32 = ASSIGN minmax3"$current_value"($$unnamed100 (Aggregate64)+32).integer (i32).a32 #38
   t176.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), minmax3"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 38(0x00000026).i32                                    #38
   [&minmax3.up32->$$unnamed100 (Aggregate64)+4].integer (i32).a32 = ASSIGN t176.i32                                                                        #38
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, i.integer (i32).a32, 0.i32, 38(0x00000026).i32                                                                #38
   t177.i32          = SUBTRACT i.integer (i32).a32, 1.i32                  #38
   t178.i32          = MULTIPLY 1.i32, t177.i32                             #38
   t179.i32          = ADD t178.i32, 0.i32                                  #38
   tv180-.i32        = MULTIPLY 4.i32, t179.i32                             #38
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv180-.i32, 0.i32, 38(0x00000026).i32                                                                         #38
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #38
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [&b.up32->list (UnmgdArr[integer (i32)]640)+tv180-.i32].integer (i32).a32          #38
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 38(0x00000026).i32                                                    #38
   t181.integer (i32) = ADD i.integer (i32).a32, 1.integer (i32)            #38
   tv169-.integer (i32) = ASSIGN t181.integer (i32)                         #38
                       GOTO $L10                                            #38
$L14: (references=1)                                                        #37
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #39
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 39(0x00000027).i32                                                                #39
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #39
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 39(0x00000027).i32                                                                #39
                       CALL &minmax.CDecl.Function(up32->list (UnmgdArr[integer (i32)]640),up32->integer (i32),up32->integer (i32))->(void), &b.up32->list (UnmgdArr[integer (i32)]640), &min2.up32->integer (i32), &max2.up32->integer (i32) #40
   t182.integer (i32) = SUBTRACT max2.integer (i32).a32, min2.integer (i32).a32 #41
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #41
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN min2.integer (i32).a32                                                             #41
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 41(0x00000029).i32                                                    #41
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #41
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN max2.integer (i32).a32                                                             #41
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 41(0x00000029).i32                                                    #41
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #41
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN t182.integer (i32)                                                                 #41
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 41(0x00000029).i32                                                    #41
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #41
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 41(0x00000029).i32                                                                #41
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #41
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 41(0x00000029).i32                                                                #41
   t183.integer (i32) = SUBTRACT min1.integer (i32).a32, min2.integer (i32).a32 #42
   t184.i32          = CALL &_abs.CDecl.Function(i32)->(i32), t183.integer (i32)                                                                            #42
   t185.integer (i32) = SUBTRACT max1.integer (i32).a32, max2.integer (i32).a32 #42
   t186.i32          = CALL &_abs.CDecl.Function(i32)->(i32), t185.integer (i32)                                                                            #42
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #42
   [&output.up32->$stdfile (Aggregate2080)+4].i32.a32 = ASSIGN t184.i32     #42
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i32.a32, 0.i32, 42(0x0000002a).i32                                                              #42
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #42
   [&output.up32->$stdfile (Aggregate2080)+4].i32.a32 = ASSIGN t186.i32     #42
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i32.a32, 0.i32, 42(0x0000002a).i32                                                              #42
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #42
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 42(0x0000002a).i32                                                                #42
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #42
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 42(0x0000002a).i32                                                                #42
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #42
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 42(0x0000002a).i32                                                                #42
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #42
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 42(0x0000002a).i32                                                                #42
   i.integer (i32).a32 = ASSIGN 1.integer (i32)                             #43
   tv187-.integer (i32) = ASSIGN i.integer (i32).a32                        #43
                       GOTO $L16                                            #43
$L16: (references=2)                                                        #43
   t188.i32          = COMPARE(GT) tv187-.integer (i32), n.integer (i32).a32 #43
                       CONDITIONALBRANCH(True) t188.i32, $L17, $L18         #43
$L17: (references=1)                                                        #43
   tv189-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #43
                       GOTO $L19                                            #43
$L18: (references=1)                                                        #43
   tv189-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #43
                       GOTO $L19                                            #43
$L19: (references=2)                                                        #43
                       CONDITIONALBRANCH(True) tv189"$$data"(Boolean (Enum32)+0).i32, $L20, $L21                                                            #43
$L21: (references=1)                                                        #43
   i.integer (i32).a32 = ASSIGN tv187-.integer (i32)                        #43
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, i.integer (i32).a32, 0.i32, 44(0x0000002c).i32                                                                #44
   t190.i32          = SUBTRACT i.integer (i32).a32, 1.i32                  #44
   t191.i32          = MULTIPLY 1.i32, t190.i32                             #44
   t192.i32          = ADD t191.i32, 0.i32                                  #44
   tv193-.i32        = MULTIPLY 4.i32, t192.i32                             #44
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv193-.i32, 0.i32, 44(0x0000002c).i32                                                                         #44
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, i.integer (i32).a32, 0.i32, 44(0x0000002c).i32                                                                #44
   t194.i32          = SUBTRACT i.integer (i32).a32, 1.i32                  #44
   t195.i32          = MULTIPLY 1.i32, t194.i32                             #44
   t196.i32          = ADD t195.i32, 0.i32                                  #44
   tv197-.i32        = MULTIPLY 4.i32, t196.i32                             #44
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv197-.i32, 0.i32, 44(0x0000002c).i32                                                                         #44
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, i.integer (i32).a32, 0.i32, 44(0x0000002c).i32                                                                #44
   t198.i32          = SUBTRACT i.integer (i32).a32, 1.i32                  #44
   t199.i32          = MULTIPLY 1.i32, t198.i32                             #44
   t200.i32          = ADD t199.i32, 0.i32                                  #44
   tv201-.i32        = MULTIPLY 4.i32, t200.i32                             #44
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv201-.i32, 0.i32, 44(0x0000002c).i32                                                                         #44
   t202.integer (i32) = ADD [&a.up32->list (UnmgdArr[integer (i32)]640)+tv197-.i32].integer (i32).a32, [&b.up32->list (UnmgdArr[integer (i32)]640)+tv201-.i32].integer (i32).a32                                                            #44
   [&a.up32->list (UnmgdArr[integer (i32)]640)+tv193-.i32].integer (i32).a32 = ASSIGN t202.integer (i32)                                                    #44
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, i.integer (i32).a32, 0.i32, 44(0x0000002c).i32                                                                #44
   t203.i32          = SUBTRACT i.integer (i32).a32, 1.i32                  #44
   t204.i32          = MULTIPLY 1.i32, t203.i32                             #44
   t205.i32          = ADD t204.i32, 0.i32                                  #44
   tv206-.i32        = MULTIPLY 4.i32, t205.i32                             #44
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv206-.i32, 0.i32, 44(0x0000002c).i32                                                                         #44
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #44
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [&a.up32->list (UnmgdArr[integer (i32)]640)+tv206-.i32].integer (i32).a32          #44
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 44(0x0000002c).i32                                                    #44
   t207.integer (i32) = ADD i.integer (i32).a32, 1.integer (i32)            #44
   tv187-.integer (i32) = ASSIGN t207.integer (i32)                         #44
                       GOTO $L16                                            #44
$L20: (references=1)                                                        #43
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #45
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 45(0x0000002d).i32                                                                #45
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #45
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 45(0x0000002d).i32                                                                #45
                       CALL &minmax.CDecl.Function(up32->list (UnmgdArr[integer (i32)]640),up32->integer (i32),up32->integer (i32))->(void), &a.up32->list (UnmgdArr[integer (i32)]640), &min1.up32->integer (i32), &max1.up32->integer (i32) #46
   t208.integer (i32) = SUBTRACT max1.integer (i32).a32, min1.integer (i32).a32 #47
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #47
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN min1.integer (i32).a32                                                             #47
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 47(0x0000002f).i32                                                    #47
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #47
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN max1.integer (i32).a32                                                             #47
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 47(0x0000002f).i32                                                    #47
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #47
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN t208.integer (i32)                                                                 #47
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 47(0x0000002f).i32                                                    #47
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #47
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 47(0x0000002f).i32                                                                #47
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #47
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 47(0x0000002f).i32                                                                #47
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #47
                       RETURN $L22(T)                                       #48
$L22: (references=1)                                                        #48
                       EXITFUNCTION                                         #48
$L2: (references=0)                                                         #48
                       END                                                  #48

IR after Type Checker (control chktype)

Function Unit #3
$L1: (references=0)                                                         #12
                       START minmax(T)                                      #12
minmax: (references=1)                                                      #12
   g.up32->list (UnmgdArr[integer (i32)]640).a32, j.up32->integer (i32).a32, k.up32->integer (i32).a32 = ENTERFUNCTION                                      #12
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG106.up32->char (i8), 0.i32, 3.i32, 6.i32, &g.up32->up32->list (UnmgdArr[integer (i32)]640), &j.up32->up32->integer (i32), &k.up32->up32->integer (i32), &i.up32->$$unnamed101 (i32), &u.up32->integer (i32), &v.up32->integer (i32)                                                                       #29
   tv147-.i32        = ASSIGN 0.i32                                         #14
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv147-.i32, 0.i32, 14(0x0000000e).i32                                                                         #14
   [j.up32->integer (i32).a32].integer (i32).a32 = ASSIGN [g.up32->list (UnmgdArr[integer (i32)]640).a32+tv147-.i32](list (UnmgdArr[integer (i32)]640)+0).integer (i32).a1024                                                               #14
   [k.up32->integer (i32).a32].integer (i32).a32 = ASSIGN [j.up32->integer (i32).a32].integer (i32).a32                                                     #14
   i.$$unnamed101 (i32).a32 = ASSIGN 2.integer (i32)                        #14
                       GOTO $L4                                             #15
$L4: (references=2)                                                         #15
   t148.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #15
   t149.i32          = COMPARE(GT) [t148.up32->void].integer (i32).a32, i.$$unnamed101 (i32).a32                                                            #15
                       CONDITIONALBRANCH(True) t149.i32, $L5, $L6           #15
$L5: (references=1)                                                         #15
   tv152-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #15
                       GOTO $L7                                             #15
$L6: (references=1)                                                         #15
   tv152-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #15
                       GOTO $L7                                             #15
$L7: (references=2)                                                         #15
                       CONDITIONALBRANCH(True) tv152"$$data"(Boolean (Enum32)+0).i32, $L8, $L9                                                              #15
$L8: (references=1)                                                         #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, i.$$unnamed101 (i32).a32, 0.i32, 16(0x00000010).i32                                                           #16
   t154.i32          = SUBTRACT i.$$unnamed101 (i32).a32, 1.i32             #16
   t155.i32          = ADD t154.i32, 0.i32                                  #16
   tv156-.i32        = MULTIPLY 4.i32, t155.i32                             #16
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv156-.i32, 0.i32, 16(0x00000010).i32                                                                         #16
   u.integer (i32).a32 = ASSIGN [g.up32->list (UnmgdArr[integer (i32)]640).a32+tv156-.i32](list (UnmgdArr[integer (i32)]640)+0).integer (i32).a1024         #16
   tv157-.integer (i32) = ADD i.$$unnamed101 (i32).a32, 1.integer (i32)     #16
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, tv157-.integer (i32), 0.i32, 16(0x00000010).i32                                                               #16
   t158.i32          = SUBTRACT tv157-.integer (i32), 1.i32                 #16
   t159.i32          = MULTIPLY 1.i32, t158.i32                             #16
   t160.i32          = ADD t159.i32, 0.i32                                  #16
   tv161-.i32        = MULTIPLY 4.i32, t160.i32                             #16
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv161-.i32, 0.i32, 16(0x00000010).i32                                                                         #16
   v.integer (i32).a32 = ASSIGN [g.up32->list (UnmgdArr[integer (i32)]640).a32+tv161-.i32](list (UnmgdArr[integer (i32)]640)+0).integer (i32).a1024         #16
   t162.i32          = COMPARE(GT) u.integer (i32).a32, v.integer (i32).a32 #17
                       CONDITIONALBRANCH(True) t162.i32, $L10, $L11         #17
$L10: (references=1)                                                        #17
   tv163-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #17
                       GOTO $L12                                            #17
$L11: (references=1)                                                        #17
   tv163-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #17
                       GOTO $L12                                            #17
$L12: (references=2)                                                        #17
                       CONDITIONALBRANCH(True) tv163"$$data"(Boolean (Enum32)+0).i32, $L13, $L14                                                            #17
$L13: (references=1)                                                        #17
   t164.i32          = COMPARE(GT) u.integer (i32).a32, [k.up32->integer (i32).a32].integer (i32).a32                                                       #18
                       CONDITIONALBRANCH(True) t164.i32, $L16, $L17         #18
$L16: (references=1)                                                        #18
   tv165-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #18
                       GOTO $L18                                            #18
$L17: (references=1)                                                        #18
   tv165-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #18
                       GOTO $L18                                            #18
$L18: (references=2)                                                        #18
                       CONDITIONALBRANCH(True) tv165"$$data"(Boolean (Enum32)+0).i32, $L19, $L20                                                            #18
$L19: (references=1)                                                        #18
   [k.up32->integer (i32).a32].integer (i32).a32 = ASSIGN u.integer (i32).a32 #18
                       GOTO $L20                                            #18
$L20: (references=2)                                                        #18
   t166.i32          = COMPARE(LT) v.integer (i32).a32, [j.up32->integer (i32).a32].integer (i32).a32                                                       #19
                       CONDITIONALBRANCH(True) t166.i32, $L21, $L22         #19
$L21: (references=1)                                                        #19
   tv167-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #19
                       GOTO $L23                                            #19
$L22: (references=1)                                                        #19
   tv167-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #19
                       GOTO $L23                                            #19
$L23: (references=2)                                                        #19
                       CONDITIONALBRANCH(True) tv167"$$data"(Boolean (Enum32)+0).i32, $L24, $L25                                                            #19
$L24: (references=1)                                                        #19
   [j.up32->integer (i32).a32].integer (i32).a32 = ASSIGN v.integer (i32).a32 #20
                       GOTO $L25                                            #20
$L25: (references=2)                                                        #19
                       GOTO $L15                                            #20
$L14: (references=1)                                                        #17
   t168.i32          = COMPARE(GT) v.integer (i32).a32, [k.up32->integer (i32).a32].integer (i32).a32                                                       #21
                       CONDITIONALBRANCH(True) t168.i32, $L26, $L27         #21
$L26: (references=1)                                                        #21
   tv169-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #21
                       GOTO $L28                                            #21
$L27: (references=1)                                                        #21
   tv169-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #21
                       GOTO $L28                                            #21
$L28: (references=2)                                                        #21
                       CONDITIONALBRANCH(True) tv169"$$data"(Boolean (Enum32)+0).i32, $L29, $L30                                                            #21
$L29: (references=1)                                                        #21
   [k.up32->integer (i32).a32].integer (i32).a32 = ASSIGN v.integer (i32).a32 #21
                       GOTO $L30                                            #21
$L30: (references=2)                                                        #21
   t170.i32          = COMPARE(LT) u.integer (i32).a32, [j.up32->integer (i32).a32].integer (i32).a32                                                       #22
                       CONDITIONALBRANCH(True) t170.i32, $L31, $L32         #22
$L31: (references=1)                                                        #22
   tv171-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #22
                       GOTO $L33                                            #22
$L32: (references=1)                                                        #22
   tv171-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #22
                       GOTO $L33                                            #22
$L33: (references=2)                                                        #22
                       CONDITIONALBRANCH(True) tv171"$$data"(Boolean (Enum32)+0).i32, $L34, $L35                                                            #22
$L34: (references=1)                                                        #22
   [j.up32->integer (i32).a32].integer (i32).a32 = ASSIGN u.integer (i32).a32 #23
                       GOTO $L35                                            #23
$L35: (references=2)                                                        #22
                       GOTO $L15                                            #23
$L15: (references=2)                                                        #17
   t172.integer (i32) = ADD i.$$unnamed101 (i32).a32, 2.integer (i32)       #24
   i.$$unnamed101 (i32).a32 = ASSIGN t172.integer (i32)                     #24
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, i.$$unnamed101 (i32).a32, 0.i32, 25(0x00000019).i32                                                           #24
                       GOTO $L4                                             #24
$L9: (references=1)                                                         #15
   t173.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #26
   t174.i32          = COMPARE(EQ) i.$$unnamed101 (i32).a32, [t173.up32->void].integer (i32).a32                                                            #26
                       CONDITIONALBRANCH(True) t174.i32, $L36, $L37         #26
$L36: (references=1)                                                        #26
   tv175-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #26
                       GOTO $L38                                            #26
$L37: (references=1)                                                        #26
   tv175-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #26
                       GOTO $L38                                            #26
$L38: (references=2)                                                        #26
                       CONDITIONALBRANCH(True) tv175"$$data"(Boolean (Enum32)+0).i32, $L39, $L40                                                            #26
$L39: (references=1)                                                        #26
   tv176-.up32->void = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #27
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, [tv176-.up32->void].integer (i32).a32, 0.i32, 27(0x0000001b).i32                                              #27
   t177.i32          = SUBTRACT [tv176-.up32->void].integer (i32).a32, 1.i32 #27
   t178.i32          = MULTIPLY 1.i32, t177.i32                             #27
   t179.i32          = ADD t178.i32, 0.i32                                  #27
   tv180-.i32        = MULTIPLY 4.i32, t179.i32                             #27
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv180-.i32, 0.i32, 27(0x0000001b).i32                                                                         #27
   t181.i32          = COMPARE(GT) [g.up32->list (UnmgdArr[integer (i32)]640).a32+tv180-.i32](list (UnmgdArr[integer (i32)]640)+0).integer (i32).a1024, [k.up32->integer (i32).a32].integer (i32).a32                                       #27
                       CONDITIONALBRANCH(True) t181.i32, $L41, $L42         #27
$L41: (references=1)                                                        #27
   tv182-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #27
                       GOTO $L43                                            #27
$L42: (references=1)                                                        #27
   tv182-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #27
                       GOTO $L43                                            #27
$L43: (references=2)                                                        #27
                       CONDITIONALBRANCH(True) tv182"$$data"(Boolean (Enum32)+0).i32, $L44, $L45                                                            #27
$L44: (references=1)                                                        #27
   tv183-.up32->void = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #27
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, [tv183-.up32->void].integer (i32).a32, 0.i32, 27(0x0000001b).i32                                              #27
   t184.i32          = SUBTRACT [tv183-.up32->void].integer (i32).a32, 1.i32 #27
   t185.i32          = MULTIPLY 1.i32, t184.i32                             #27
   t186.i32          = ADD t185.i32, 0.i32                                  #27
   tv187-.i32        = MULTIPLY 4.i32, t186.i32                             #27
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv187-.i32, 0.i32, 27(0x0000001b).i32                                                                         #27
   [k.up32->integer (i32).a32].integer (i32).a32 = ASSIGN [g.up32->list (UnmgdArr[integer (i32)]640).a32+tv187-.i32](list (UnmgdArr[integer (i32)]640)+0).integer (i32).a1024                                                               #27
                       GOTO $L46                                            #27
$L45: (references=1)                                                        #27
   tv188-.up32->void = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #28
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, [tv188-.up32->void].integer (i32).a32, 0.i32, 28(0x0000001c).i32                                              #28
   t189.i32          = SUBTRACT [tv188-.up32->void].integer (i32).a32, 1.i32 #28
   t190.i32          = MULTIPLY 1.i32, t189.i32                             #28
   t191.i32          = ADD t190.i32, 0.i32                                  #28
   tv192-.i32        = MULTIPLY 4.i32, t191.i32                             #28
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv192-.i32, 0.i32, 28(0x0000001c).i32                                                                         #28
   t193.i32          = COMPARE(LT) [g.up32->list (UnmgdArr[integer (i32)]640).a32+tv192-.i32](list (UnmgdArr[integer (i32)]640)+0).integer (i32).a1024, [j.up32->integer (i32).a32].integer (i32).a32                                       #28
                       CONDITIONALBRANCH(True) t193.i32, $L47, $L48         #28
$L47: (references=1)                                                        #28
   tv194-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #28
                       GOTO $L49                                            #28
$L48: (references=1)                                                        #28
   tv194-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #28
                       GOTO $L49                                            #28
$L49: (references=2)                                                        #28
                       CONDITIONALBRANCH(True) tv194"$$data"(Boolean (Enum32)+0).i32, $L50, $L51                                                            #28
$L50: (references=1)                                                        #28
   tv195-.up32->void = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #28
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 20(0x00000014).i32, [tv195-.up32->void].integer (i32).a32, 0.i32, 28(0x0000001c).i32                                              #28
   t196.i32          = SUBTRACT [tv195-.up32->void].integer (i32).a32, 1.i32 #28
   t197.i32          = MULTIPLY 1.i32, t196.i32                             #28
   t198.i32          = ADD t197.i32, 0.i32                                  #28
   tv199-.i32        = MULTIPLY 4.i32, t198.i32                             #28
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 76(0x0000004c).i32, tv199-.i32, 0.i32, 28(0x0000001c).i32                                                                         #28
   [j.up32->integer (i32).a32].integer (i32).a32 = ASSIGN [g.up32->list (UnmgdArr[integer (i32)]640).a32+tv199-.i32](list (UnmgdArr[integer (i32)]640)+0).integer (i32).a1024                                                               #28
                       GOTO $L51                                            #28
$L51: (references=2)                                                        #28
                       GOTO $L46                                            #28
$L46: (references=2)                                                        #27
                       GOTO $L40                                            #28
$L40: (references=2)                                                        #26
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 3.i32                                                                   #29
                       RETURN $L52(T)                                       #29
$L52: (references=1)                                                        #29
                       EXITFUNCTION                                         #29
$L2: (references=0)                                                         #29
                       END                                                  #29
Writing Minmax3.obj...

Minmax3.p - 0 error(s), 0 warning(s).

Linking...

Minmax3.exe - 0 error(s), 0 warning(s).

 -1 -3  4  7  8 54 23 -5  3  9  9  9 -6 45 79 79  3  1  1  5
 -6 79 85

 45 43  3  8  1 34 -8  1  4 34  3  8 -1  3 -2 -4  6  6  6  7
 -8 45 53
  2 34

 44 40  7 15  9 88 15 -4  7 43 12 17 -7 48 77 75  9  7  7 12
 -7 88 95
