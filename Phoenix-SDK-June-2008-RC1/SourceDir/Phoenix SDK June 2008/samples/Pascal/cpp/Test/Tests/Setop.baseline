Compiling...
Setop.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 29(0x0000001d).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 29(0x0000001d).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Setop.CDecl.Function()->(void)                  #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #4
                       START Setop(T)                                        #4
Setop: (references=1)                                                        #4
                       ENTERFUNCTION                                         #4
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 2.i32, 20(0x00000014).i32, &m.up32->days (Enum32), &t.up32->days (Enum32), &w.up32->days (Enum32), &th.up32->days (Enum32), &fr.up32->days (Enum32), &sa.up32->days (Enum32), &su.up32->days (Enum32), &wk.up32->week (up32->days (Enum32)), &work.up32->week (up32->days (Enum32)), &free.up32->week (up32->days (Enum32)), &d.up32->days (Enum32), &$$temp100.up32->epsilon (null32->unk), &$$temp101.up32->epsilon (null32->unk), &$$temp102.up32->$$unnamed103 (up32->days (Enum32)), &$$temp103.up32->$$unnamed104 (up32->days (Enum32)), &$$temp104.up32->$$unnamed104 (up32->days (Enum32)), &$$temp105.up32->$$unnamed105 (up32->days (Enum32)), &$$temp106.up32->$$unnamed104 (up32->days (Enum32)), &$$temp107.up32->week (up32->days (Enum32)), &$$temp108.up32->$$unnamed106 (up32->days (Enum32))                                                #29
   m"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 0.integer (i32)     #6
   t"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 1.integer (i32)     #6
   w"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 2.integer (i32)     #6
   th"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 3.integer (i32)    #6
   fr"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 4.integer (i32)    #6
   sa"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 5.integer (i32)    #6
   su"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 6.integer (i32)    #6
   t148.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 6.i32, 0.i32, 8.i32                                    #8
   wk.week (up32->days (Enum32)).a32 = CONVERT t148.set (up32->void)         #8
   t152.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 6.i32, 0.i32, 8.i32                                    #8
   t153.week (up32->days (Enum32)) = CONVERT t152.set (up32->void)           #8
   work.week (up32->days (Enum32)).a32 = ASSIGN t153.week (up32->days (Enum32)) #8
   t156.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 6.i32, 0.i32, 8.i32                                    #8
   t157.week (up32->days (Enum32)) = CONVERT t156.set (up32->void)           #8
   free.week (up32->days (Enum32)).a32 = ASSIGN t157.week (up32->days (Enum32)) #8
   t160.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 0.i32, 0.i32, 19(0x00000013).i32                      #19
   t162.epsilon (null32->unk) = CONVERT t160.set (up32->void)               #19
   $$temp100.epsilon (null32->unk).a32 = ASSIGN t162.epsilon (null32->unk)  #19
   t163.set (up32->void) = CONVERT $$temp100.epsilon (null32->unk).a32      #19
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 19(0x00000013).i32, t163.set (up32->void), 0.i32, 0.i32                                                                   #19
   t164.set (up32->void) = CONVERT work.week (up32->days (Enum32)).a32      #19
   t165.set (up32->void) = CONVERT $$temp100.epsilon (null32->unk).a32      #19
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t164.set (up32->void), t165.set (up32->void), 4.i32, 0.i32, 19(0x00000013).i32                                              #19
   t166.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 0.i32, 0.i32, 19(0x00000013).i32                      #19
   t168.epsilon (null32->unk) = CONVERT t166.set (up32->void)               #19
   $$temp101.epsilon (null32->unk).a32 = ASSIGN t168.epsilon (null32->unk)  #19
   t169.set (up32->void) = CONVERT $$temp101.epsilon (null32->unk).a32      #19
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 19(0x00000013).i32, t169.set (up32->void), 0.i32, 0.i32                                                                   #19
   t170.set (up32->void) = CONVERT free.week (up32->days (Enum32)).a32      #19
   t171.set (up32->void) = CONVERT $$temp101.epsilon (null32->unk).a32      #19
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t170.set (up32->void), t171.set (up32->void), 4.i32, 0.i32, 19(0x00000013).i32                                              #19
   t173.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 2.i32, m.days (Enum32).a32, su.days (Enum32).a32                              #20
   t174.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 2.i32, m.days (Enum32).a32, su.days (Enum32).a32                              #20
   t175.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t173.i32, t174.i32, 0.i32, 20(0x00000014).i32                #20
   t177.$$unnamed103 (up32->days (Enum32)) = CONVERT t175.set (up32->void)  #20
   $$temp102.$$unnamed103 (up32->days (Enum32)).a32 = ASSIGN t177.$$unnamed103 (up32->days (Enum32))                                                        #20
   t178.set (up32->void) = CONVERT $$temp102.$$unnamed103 (up32->days (Enum32)).a32                                                                         #20
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 20(0x00000014).i32, t178.set (up32->void), 4.i32, 1.i32, m.days (Enum32).a32, su.days (Enum32).a32                        #20
   t179.set (up32->void) = CONVERT wk.week (up32->days (Enum32)).a32        #20
   t180.set (up32->void) = CONVERT $$temp102.$$unnamed103 (up32->days (Enum32)).a32                                                                         #20
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t179.set (up32->void), t180.set (up32->void), 4.i32, 0.i32, 20(0x00000014).i32                                              #20
   d.days (Enum32).a32 = ASSIGN sa.days (Enum32).a32                        #21
   t182.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 1.i32, d.days (Enum32).a32                                                    #21
   t183.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 1.i32, d.days (Enum32).a32                                                    #21
   t184.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t182.i32, t183.i32, 0.i32, 21(0x00000015).i32                #21
   t186.$$unnamed104 (up32->days (Enum32)) = CONVERT t184.set (up32->void)  #21
   $$temp103.$$unnamed104 (up32->days (Enum32)).a32 = ASSIGN t186.$$unnamed104 (up32->days (Enum32))                                                        #21
   t187.set (up32->void) = CONVERT $$temp103.$$unnamed104 (up32->days (Enum32)).a32                                                                         #21
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 21(0x00000015).i32, t187.set (up32->void), 4.i32, 1.i32, d.days (Enum32).a32, d.days (Enum32).a32                         #21
   t188.set (up32->void) = CONVERT $$temp103.$$unnamed104 (up32->days (Enum32)).a32                                                                         #21
   t189.set (up32->void) = CONVERT free.week (up32->days (Enum32)).a32      #21
   t190.set (up32->void) = CALL &_set_union.CDecl.Function(set (up32->void),set (up32->void),i32,i32)->(set (up32->void)), t188.set (up32->void), t189.set (up32->void), 0.i32, 21(0x00000015).i32                                          #21
   t192.$$unnamed104 (up32->days (Enum32)) = CONVERT t190.set (up32->void)  #21
   $$temp104.$$unnamed104 (up32->days (Enum32)).a32 = ASSIGN t192.$$unnamed104 (up32->days (Enum32))                                                        #21
   t194.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 1.i32, su.days (Enum32).a32                                                   #21
   t195.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 1.i32, su.days (Enum32).a32                                                   #21
   t196.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t194.i32, t195.i32, 0.i32, 21(0x00000015).i32                #21
   t198.$$unnamed105 (up32->days (Enum32)) = CONVERT t196.set (up32->void)  #21
   $$temp105.$$unnamed105 (up32->days (Enum32)).a32 = ASSIGN t198.$$unnamed105 (up32->days (Enum32))                                                        #21
   t199.set (up32->void) = CONVERT $$temp105.$$unnamed105 (up32->days (Enum32)).a32                                                                         #21
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 21(0x00000015).i32, t199.set (up32->void), 4.i32, 1.i32, su.days (Enum32).a32, su.days (Enum32).a32                       #21
   t200.set (up32->void) = CONVERT $$temp104.$$unnamed104 (up32->days (Enum32)).a32                                                                         #21
   t201.set (up32->void) = CONVERT $$temp105.$$unnamed105 (up32->days (Enum32)).a32                                                                         #21
   t202.set (up32->void) = CALL &_set_union.CDecl.Function(set (up32->void),set (up32->void),i32,i32)->(set (up32->void)), t200.set (up32->void), t201.set (up32->void), 0.i32, 21(0x00000015).i32                                          #21
   t204.$$unnamed104 (up32->days (Enum32)) = CONVERT t202.set (up32->void)  #21
   $$temp106.$$unnamed104 (up32->days (Enum32)).a32 = ASSIGN t204.$$unnamed104 (up32->days (Enum32))                                                        #21
   t205.set (up32->void) = CONVERT free.week (up32->days (Enum32)).a32      #21
   t206.set (up32->void) = CONVERT $$temp106.$$unnamed104 (up32->days (Enum32)).a32                                                                         #21
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t205.set (up32->void), t206.set (up32->void), 4.i32, 0.i32, 21(0x00000015).i32                                              #21
                       CALL &check.CDecl.Function(week (up32->days (Enum32)))->(void), free.week (up32->days (Enum32)).a32                                  #22
   t207.set (up32->void) = CONVERT wk.week (up32->days (Enum32)).a32        #23
   t208.set (up32->void) = CONVERT free.week (up32->days (Enum32)).a32      #23
   t209.set (up32->void) = CALL &_set_difference.CDecl.Function(set (up32->void),set (up32->void),i32,i32)->(set (up32->void)), t207.set (up32->void), t208.set (up32->void), 0.i32, 23(0x00000017).i32                                     #23
   t211.week (up32->days (Enum32)) = CONVERT t209.set (up32->void)          #23
   $$temp107.week (up32->days (Enum32)).a32 = ASSIGN t211.week (up32->days (Enum32))                                                                        #23
   t212.set (up32->void) = CONVERT work.week (up32->days (Enum32)).a32      #23
   t213.set (up32->void) = CONVERT $$temp107.week (up32->days (Enum32)).a32 #23
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t212.set (up32->void), t213.set (up32->void), 4.i32, 0.i32, 23(0x00000017).i32                                              #23
                       CALL &check.CDecl.Function(week (up32->days (Enum32)))->(void), work.week (up32->days (Enum32)).a32                                  #23
   t214.set (up32->void) = CONVERT free.week (up32->days (Enum32)).a32      #24
   t215.set (up32->void) = CONVERT wk.week (up32->days (Enum32)).a32        #24
   t216.i32          = CALL &_is_subset_of.CDecl.Function(set (up32->void),set (up32->void))->(i32), t214.set (up32->void), t215.set (up32->void)           #24
   t217.i32          = COMPARE(EQ) t216.i32, 1.i32                          #24
                       CONDITIONALBRANCH(True) t217.i32, $L4, $L5           #24
$L4: (references=1)                                                         #24
   tv220-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #24
                       GOTO $L6                                             #24
$L5: (references=1)                                                         #24
   tv220-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #24
                       GOTO $L6                                             #24
$L6: (references=2)                                                         #24
                       CONDITIONALBRANCH(True) tv220"$$data"(Boolean (Enum32)+0).i32, $L7, $L8                                                              #24
$L7: (references=1)                                                         #24
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG106.up32->char (i8)                                                          #24
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 24(0x00000018).i32                  #24
                       GOTO $L8                                             #24
$L8: (references=2)                                                         #24
   t223.set (up32->void) = CONVERT wk.week (up32->days (Enum32)).a32        #25
   t224.set (up32->void) = CONVERT work.week (up32->days (Enum32)).a32      #25
   t225.i32          = CALL &_is_superset_of.CDecl.Function(set (up32->void),set (up32->void))->(i32), t223.set (up32->void), t224.set (up32->void)         #25
   t226.i32          = COMPARE(EQ) t225.i32, 1.i32                          #25
                       CONDITIONALBRANCH(True) t226.i32, $L9, $L10          #25
$L9: (references=1)                                                         #25
   tv227-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #25
                       GOTO $L11                                            #25
$L10: (references=1)                                                        #25
   tv227-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #25
                       GOTO $L11                                            #25
$L11: (references=2)                                                        #25
                       CONDITIONALBRANCH(True) tv227"$$data"(Boolean (Enum32)+0).i32, $L12, $L13                                                            #25
$L12: (references=1)                                                        #25
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 107(0x6b).char (i8)                                                                     #25
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 25(0x00000019).i32                                                         #25
                       GOTO $L13                                            #25
$L13: (references=2)                                                        #25
   t228.set (up32->void) = CONVERT work.week (up32->days (Enum32)).a32      #26
   t229.set (up32->void) = CONVERT free.week (up32->days (Enum32)).a32      #26
   t230.i32          = CALL &_is_superset_of.CDecl.Function(set (up32->void),set (up32->void))->(i32), t228.set (up32->void), t229.set (up32->void)         #26
   t231.i32          = COMPARE(EQ) t230.i32, 1.i32                          #26
                       CONDITIONALBRANCH(True) t231.i32, $L14, $L15         #26
$L14: (references=1)                                                        #26
   tv232-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #26
                       GOTO $L16                                            #26
$L15: (references=1)                                                        #26
   tv232-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #26
                       GOTO $L16                                            #26
$L16: (references=2)                                                        #26
   t233.i32          = NOT tv232"$$data"(Boolean (Enum32)+0).i32            #26
                       CONDITIONALBRANCH(True) t233.i32, $L17, $L18         #26
$L17: (references=1)                                                        #26
   tv234-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #26
                       GOTO $L19                                            #26
$L18: (references=1)                                                        #26
   tv234-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #26
                       GOTO $L19                                            #26
$L19: (references=2)                                                        #26
                       CONDITIONALBRANCH(True) tv234"$$data"(Boolean (Enum32)+0).i32, $L20, $L21                                                            #26
$L20: (references=1)                                                        #26
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG107.up32->char (i8)                                                          #26
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 26(0x0000001a).i32                  #26
                       GOTO $L21                                            #26
$L21: (references=2)                                                        #26
   t237.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 1.i32, sa.days (Enum32).a32                                                   #27
   t238.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 1.i32, sa.days (Enum32).a32                                                   #27
   t239.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t237.i32, t238.i32, 0.i32, 27(0x0000001b).i32                #27
   t241.$$unnamed106 (up32->days (Enum32)) = CONVERT t239.set (up32->void)  #27
   $$temp108.$$unnamed106 (up32->days (Enum32)).a32 = ASSIGN t241.$$unnamed106 (up32->days (Enum32))                                                        #27
   t242.set (up32->void) = CONVERT $$temp108.$$unnamed106 (up32->days (Enum32)).a32                                                                         #27
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 27(0x0000001b).i32, t242.set (up32->void), 4.i32, 1.i32, sa.days (Enum32).a32, sa.days (Enum32).a32                       #27
   t243.set (up32->void) = CONVERT $$temp108.$$unnamed106 (up32->days (Enum32)).a32                                                                         #27
   t244.set (up32->void) = CONVERT work.week (up32->days (Enum32)).a32      #27
   t245.i32          = CALL &_is_subset_of.CDecl.Function(set (up32->void),set (up32->void))->(i32), t243.set (up32->void), t244.set (up32->void)           #27
   t246.i32          = COMPARE(EQ) t245.i32, 1.i32                          #27
                       CONDITIONALBRANCH(True) t246.i32, $L22, $L23         #27
$L22: (references=1)                                                        #27
   tv247-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #27
                       GOTO $L24                                            #27
$L23: (references=1)                                                        #27
   tv247-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #27
                       GOTO $L24                                            #27
$L24: (references=2)                                                        #27
                       CONDITIONALBRANCH(True) tv247"$$data"(Boolean (Enum32)+0).i32, $L25, $L26                                                            #27
$L25: (references=1)                                                        #27
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG108.up32->char (i8)                                                          #27
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 27(0x0000001b).i32                  #27
                       GOTO $L26                                            #27
$L26: (references=2)                                                        #27
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #29
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 29(0x0000001d).i32                                                                #29
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #29
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 29(0x0000001d).i32                                                                #29
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #29
   t250.set (up32->void) = CONVERT wk.week (up32->days (Enum32)).a32        #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t250.set (up32->void)                                                   #29
   t251.set (up32->void) = CONVERT work.week (up32->days (Enum32)).a32      #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t251.set (up32->void)                                                   #29
   t252.set (up32->void) = CONVERT free.week (up32->days (Enum32)).a32      #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t252.set (up32->void)                                                   #29
   t253.set (up32->void) = CONVERT $$temp100.epsilon (null32->unk).a32      #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t253.set (up32->void)                                                   #29
   t254.set (up32->void) = CONVERT work.week (up32->days (Enum32)).a32      #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t254.set (up32->void)                                                   #29
   t255.set (up32->void) = CONVERT $$temp101.epsilon (null32->unk).a32      #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t255.set (up32->void)                                                   #29
   t256.set (up32->void) = CONVERT free.week (up32->days (Enum32)).a32      #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t256.set (up32->void)                                                   #29
   t257.set (up32->void) = CONVERT $$temp102.$$unnamed103 (up32->days (Enum32)).a32                                                                         #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t257.set (up32->void)                                                   #29
   t258.set (up32->void) = CONVERT wk.week (up32->days (Enum32)).a32        #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t258.set (up32->void)                                                   #29
   t259.set (up32->void) = CONVERT $$temp103.$$unnamed104 (up32->days (Enum32)).a32                                                                         #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t259.set (up32->void)                                                   #29
   t260.set (up32->void) = CONVERT $$temp104.$$unnamed104 (up32->days (Enum32)).a32                                                                         #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t260.set (up32->void)                                                   #29
   t261.set (up32->void) = CONVERT $$temp105.$$unnamed105 (up32->days (Enum32)).a32                                                                         #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t261.set (up32->void)                                                   #29
   t262.set (up32->void) = CONVERT $$temp106.$$unnamed104 (up32->days (Enum32)).a32                                                                         #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t262.set (up32->void)                                                   #29
   t263.set (up32->void) = CONVERT free.week (up32->days (Enum32)).a32      #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t263.set (up32->void)                                                   #29
   t264.set (up32->void) = CONVERT $$temp107.week (up32->days (Enum32)).a32 #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t264.set (up32->void)                                                   #29
   t265.set (up32->void) = CONVERT work.week (up32->days (Enum32)).a32      #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t265.set (up32->void)                                                   #29
   t266.set (up32->void) = CONVERT $$temp108.$$unnamed106 (up32->days (Enum32)).a32                                                                         #29
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t266.set (up32->void)                                                   #29
                       RETURN $L27(T)                                       #29
$L27: (references=1)                                                        #29
                       EXITFUNCTION                                         #29
$L2: (references=0)                                                         #29
                       END                                                  #29

IR after Type Checker (control chktype)

Function Unit #3
$L1: (references=0)                                                         #11
                       START check(T)                                       #11
check: (references=1)                                                       #11
   s.week (up32->days (Enum32)).a32 = ENTERFUNCTION                         #11
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 3.i32, 2.i32, &s.up32->week (up32->days (Enum32)), &d.up32->days (Enum32)                                     #17
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 32(0x20).char (i8) #13
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 13(0x0000000d).i32                                                                #13
   t140.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #14
   d.days (Enum32).a32 = ASSIGN [t140.up32->void].days (Enum32).a32         #14
   tv141-.days (Enum32) = ASSIGN d.days (Enum32).a32                        #14
   tv142-.up32->void = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 6.i32                                            #14
                       GOTO $L4                                             #14
$L4: (references=2)                                                         #14
   t143.i32          = COMPARE(LT) [tv142-.up32->void]"$$data"(days (Enum32)+0).integer (i32).a32, tv141"$$data"(days (Enum32)+0).integer (i32)             #14
                       CONDITIONALBRANCH(True) t143.i32, $L5, $L6           #14
$L5: (references=1)                                                         #14
   tv146-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #14
                       GOTO $L7                                             #14
$L6: (references=1)                                                         #14
   tv146-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #14
                       GOTO $L7                                             #14
$L7: (references=2)                                                         #14
                       CONDITIONALBRANCH(True) tv146"$$data"(Boolean (Enum32)+0).i32, $L8, $L9                                                              #14
$L9: (references=1)                                                         #14
   d.days (Enum32).a32 = ASSIGN tv141-.days (Enum32)                        #14
   t147.set (up32->void) = CONVERT s.week (up32->days (Enum32)).a32         #15
   t148.i32          = CALL &_set_membership.CDecl.Function(set (up32->void),i32)->(i32), t147.set (up32->void), d"$$data"(days (Enum32)+0).integer (i32).a32 #15
   t149.i32          = COMPARE(NE) 0.i32, t148.i32                          #15
                       CONDITIONALBRANCH(True) t149.i32, $L10, $L11         #15
$L10: (references=1)                                                        #15
   tv150-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #15
                       GOTO $L12                                            #15
$L11: (references=1)                                                        #15
   tv150-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #15
                       GOTO $L12                                            #15
$L12: (references=2)                                                        #15
                       CONDITIONALBRANCH(True) tv150"$$data"(Boolean (Enum32)+0).i32, $L13, $L14                                                            #15
$L13: (references=1)                                                        #15
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 120(0x78).char (i8)                                                                            #15
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 15(0x0000000f).i32                                                                #15
                       GOTO $L15                                            #15
$L14: (references=1)                                                        #15
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 111(0x6f).char (i8)                                                                            #15
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 15(0x0000000f).i32                                                                #15
                       GOTO $L15                                            #15
$L15: (references=2)                                                        #15
   tv152"$$data"(days (Enum32)+0).i32 = ADD 1.i32, d"$$data"(days (Enum32)+0).integer (i32).a32                                                             #15
   tv141-.days (Enum32) = ASSIGN tv152.days (Enum32)                        #15
                       GOTO $L4                                             #15
$L8: (references=1)                                                         #14
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #17
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 17(0x00000011).i32                                                         #17
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #17
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 17(0x00000011).i32                                                         #17
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 3.i32                                                                   #17
                       RETURN $L16(T)                                       #17
$L16: (references=1)                                                        #17
                       EXITFUNCTION                                         #17
$L2: (references=0)                                                         #17
                       END                                                  #17
Writing Setop.obj...

Setop.p - 0 error(s), 0 warning(s).

Linking...

Setop.exe - 0 error(s), 0 warning(s).

 oooooxx
 xxxxxoo
 ok jack
