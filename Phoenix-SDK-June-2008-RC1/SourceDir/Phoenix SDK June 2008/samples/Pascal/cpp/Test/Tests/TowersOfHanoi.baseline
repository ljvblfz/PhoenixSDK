Compiling...
TowersOfHanoi.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 68(0x00000044).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 68(0x00000044).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &TowersOfHanoi.CDecl.Function()->(void)          #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #4
                       START TowersOfHanoi(T)                                #4
TowersOfHanoi: (references=1)                                                #4
                       ENTERFUNCTION                                         #4
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG111.up32->char (i8), 0.i32, 2.i32, 14(0x0000000e).i32, &left.up32->char (i8), &middle.up32->char (i8), &right.up32->char (i8), &minheight.up32->integer (i32), &maxheight.up32->integer (i32), &height.up32->integer (i32), &moves.up32->integer (i32), &format.up32->integer (i32), &towers.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96), &hanoi.up32->$$unnamed103 (Aggregate64), &$$temp100.up32->epsilon (null32->unk), &$$temp101.up32->epsilon (null32->unk), &$$temp102.up32->epsilon (null32->unk), &$$temp103.up32->$$unnamed106 (up32->integer (i32))                                             #67
   left.char (i8).a8 = ASSIGN 65(0x41).char (i8)                             #6
   middle.char (i8).a8 = ASSIGN 66(0x42).char (i8)                           #6
   right.char (i8).a8 = ASSIGN 67(0x43).char (i8)                            #6
   minheight.integer (i32).a32 = ASSIGN 1.integer (i32)                      #7
   maxheight.integer (i32).a32 = ASSIGN 31(0x0000001f).integer (i32)         #7
   t150.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 1.i32, 31(0x0000001f).i32, 0.i32, 9.i32                       #9
   towers($$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+0).$$unnamed101 (up32->$$unnamed101`1 (i32)).a32 = CONVERT t150.set (up32->void) #9
   t153.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 1.i32, 31(0x0000001f).i32, 0.i32, 9.i32                       #9
   t154.$$unnamed101 (up32->$$unnamed101`1 (i32)) = CONVERT t153.set (up32->void)                                                                            #9
   [&towers.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+4].$$unnamed101 (up32->$$unnamed101`1 (i32)).a32 = ASSIGN t154.$$unnamed101 (up32->$$unnamed101`1 (i32))                                              #9
   t155.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 1.i32, 31(0x0000001f).i32, 0.i32, 9.i32                       #9
   t156.$$unnamed101 (up32->$$unnamed101`1 (i32)) = CONVERT t155.set (up32->void)                                                                            #9
   [&towers.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+8].$$unnamed101 (up32->$$unnamed101`1 (i32)).a32 = ASSIGN t156.$$unnamed101 (up32->$$unnamed101`1 (i32))                                              #9
   t160.HANDLE (up32->void) = CALL &_file_open.CDecl.Function(up32->i8,i32,i32,i32)->(HANDLE (up32->void)), &$SG105.up32->char (i8), 0.i32, 0.i32, 10(0x0000000a).i32                                                                       #10
   hanoi"$runtime_handle"($$unnamed103 (Aggregate64)+0).HANDLE (up32->void).a32 = ASSIGN t160.HANDLE (up32->void)                                           #10
   t161.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), hanoi"$runtime_handle"($$unnamed103 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 10(0x0000000a).i32                                      #10
   [&hanoi.up32->$$unnamed103 (Aggregate64)+4].integer (i32).a32 = ASSIGN t161.i32                                                                          #10
   moves.integer (i32).a32 = ASSIGN 0.integer (i32)                         #54
   t162.i32          = SUBTRACT 65(0x00000041).integer (i32), 65(0x00000041).i32                                                                            #55
   t163.i32          = MULTIPLY 1.i32, t162.i32                             #55
   t164.i32          = ADD t163.i32, 0.i32                                  #55
   tv165-.i32        = MULTIPLY 4.i32, t164.i32                             #55
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv165-.i32, 0.i32, 55(0x00000037).i32      #55
   t166.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 0.i32, 0.i32, 55(0x00000037).i32                      #55
   t168.epsilon (null32->unk) = CONVERT t166.set (up32->void)               #55
   $$temp100.epsilon (null32->unk).a32 = ASSIGN t168.epsilon (null32->unk)  #55
   t169.set (up32->void) = CONVERT $$temp100.epsilon (null32->unk).a32      #55
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 55(0x00000037).i32, t169.set (up32->void), 0.i32, 0.i32                                                                   #55
   t170.set (up32->void) = CONVERT [&towers.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+tv165-.i32].$$unnamed101 (up32->$$unnamed101`1 (i32)).a32                                                            #55
   t171.set (up32->void) = CONVERT $$temp100.epsilon (null32->unk).a32      #55
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t170.set (up32->void), t171.set (up32->void), 4.i32, 0.i32, 55(0x00000037).i32                                              #55
   t172.i32          = SUBTRACT 66(0x00000042).integer (i32), 65(0x00000041).i32                                                                            #56
   t173.i32          = MULTIPLY 1.i32, t172.i32                             #56
   t174.i32          = ADD t173.i32, 0.i32                                  #56
   tv175-.i32        = MULTIPLY 4.i32, t174.i32                             #56
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv175-.i32, 0.i32, 56(0x00000038).i32      #56
   t176.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 0.i32, 0.i32, 56(0x00000038).i32                      #56
   t178.epsilon (null32->unk) = CONVERT t176.set (up32->void)               #56
   $$temp101.epsilon (null32->unk).a32 = ASSIGN t178.epsilon (null32->unk)  #56
   t179.set (up32->void) = CONVERT $$temp101.epsilon (null32->unk).a32      #56
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 56(0x00000038).i32, t179.set (up32->void), 0.i32, 0.i32                                                                   #56
   t180.set (up32->void) = CONVERT [&towers.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+tv175-.i32].$$unnamed101 (up32->$$unnamed101`1 (i32)).a32                                                            #56
   t181.set (up32->void) = CONVERT $$temp101.epsilon (null32->unk).a32      #56
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t180.set (up32->void), t181.set (up32->void), 4.i32, 0.i32, 56(0x00000038).i32                                              #56
   t182.i32          = SUBTRACT 67(0x00000043).integer (i32), 65(0x00000041).i32                                                                            #57
   t183.i32          = MULTIPLY 1.i32, t182.i32                             #57
   t184.i32          = ADD t183.i32, 0.i32                                  #57
   tv185-.i32        = MULTIPLY 4.i32, t184.i32                             #57
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv185-.i32, 0.i32, 57(0x00000039).i32      #57
   t186.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 0.i32, 0.i32, 57(0x00000039).i32                      #57
   t188.epsilon (null32->unk) = CONVERT t186.set (up32->void)               #57
   $$temp102.epsilon (null32->unk).a32 = ASSIGN t188.epsilon (null32->unk)  #57
   t189.set (up32->void) = CONVERT $$temp102.epsilon (null32->unk).a32      #57
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 57(0x00000039).i32, t189.set (up32->void), 0.i32, 0.i32                                                                   #57
   t190.set (up32->void) = CONVERT [&towers.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+tv185-.i32].$$unnamed101 (up32->$$unnamed101`1 (i32)).a32                                                            #57
   t191.set (up32->void) = CONVERT $$temp102.epsilon (null32->unk).a32      #57
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t190.set (up32->void), t191.set (up32->void), 4.i32, 0.i32, 57(0x00000039).i32                                              #57
   height.integer (i32).a32 = ASSIGN hanoi"$current_value"($$unnamed103 (Aggregate64)+32).integer (i32).a32                                                 #58
   t192.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), hanoi"$runtime_handle"($$unnamed103 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 58(0x0000003a).i32                                      #58
   [&hanoi.up32->$$unnamed103 (Aggregate64)+4].integer (i32).a32 = ASSIGN t192.i32                                                                          #58
   t193.i32          = COMPARE(GT) height.integer (i32).a32, maxheight.integer (i32).a32                                                                    #59
                       CONDITIONALBRANCH(True) t193.i32, $L4, $L5           #59
$L4: (references=1)                                                         #59
   tv196-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #59
                       GOTO $L6                                             #59
$L5: (references=1)                                                         #59
   tv196-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #59
                       GOTO $L6                                             #59
$L6: (references=2)                                                         #59
   t197.i32          = COMPARE(LT) height.integer (i32).a32, minheight.integer (i32).a32                                                                    #59
                       CONDITIONALBRANCH(True) t197.i32, $L7, $L8           #59
$L7: (references=1)                                                         #59
   tv198-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #59
                       GOTO $L9                                             #59
$L8: (references=1)                                                         #59
   tv198-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #59
                       GOTO $L9                                             #59
$L9: (references=2)                                                         #59
   t199.i32          = BITOR tv196"$$data"(Boolean (Enum32)+0).i32, tv198"$$data"(Boolean (Enum32)+0).i32                                                   #59
                       CONDITIONALBRANCH(True) t199.i32, $L10, $L11         #59
$L10: (references=1)                                                        #59
   tv200-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #59
                       GOTO $L12                                            #59
$L11: (references=1)                                                        #59
   tv200-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #59
                       GOTO $L12                                            #59
$L12: (references=2)                                                        #59
                       CONDITIONALBRANCH(True) tv200"$$data"(Boolean (Enum32)+0).i32, $L13, $L14                                                            #59
$L13: (references=1)                                                        #59
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN height.integer (i32).a32                                                           #60
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 60(0x0000003c).i32                                                    #60
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG113.up32->char (i8)                                                          #60
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 60(0x0000003c).i32                  #60
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #60
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 60(0x0000003c).i32                                                                #60
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #60
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 60(0x0000003c).i32                                                                #60
                       GOTO $L15                                            #60
$L14: (references=1)                                                        #59
   t203.i32          = SUBTRACT 65(0x00000041).integer (i32), 65(0x00000041).i32                                                                            #62
   t204.i32          = MULTIPLY 1.i32, t203.i32                             #62
   t205.i32          = ADD t204.i32, 0.i32                                  #62
   tv206-.i32        = MULTIPLY 4.i32, t205.i32                             #62
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv206-.i32, 0.i32, 62(0x0000003e).i32      #62
   t208.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 2.i32, 1.integer (i32), height.integer (i32).a32                              #62
   t209.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 2.i32, 1.integer (i32), height.integer (i32).a32                              #62
   t210.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t208.i32, t209.i32, 0.i32, 62(0x0000003e).i32                #62
   t212.$$unnamed106 (up32->integer (i32)) = CONVERT t210.set (up32->void)  #62
   $$temp103.$$unnamed106 (up32->integer (i32)).a32 = ASSIGN t212.$$unnamed106 (up32->integer (i32))                                                        #62
   t213.set (up32->void) = CONVERT $$temp103.$$unnamed106 (up32->integer (i32)).a32                                                                         #62
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 62(0x0000003e).i32, t213.set (up32->void), 4.i32, 1.i32, 1.integer (i32), height.integer (i32).a32                        #62
   t214.set (up32->void) = CONVERT [&towers.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+tv206-.i32].$$unnamed101 (up32->$$unnamed101`1 (i32)).a32                                                            #62
   t215.set (up32->void) = CONVERT $$temp103.$$unnamed106 (up32->integer (i32)).a32                                                                         #62
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t214.set (up32->void), t215.set (up32->void), 4.i32, 0.i32, 62(0x0000003e).i32                                              #62
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG114.up32->char (i8)                                                          #63
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 63(0x0000003f).i32                  #63
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #63
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 63(0x0000003f).i32                                                                #63
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #63
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 63(0x0000003f).i32                                                                #63
                       CALL &PrintTowers.CDecl.Function()->(void)           #63
                       CALL &Hanoi.CDecl.Function(integer (i32),char (i8),char (i8),char (i8))->(void), height.integer (i32).a32, left.char (i8).a8, middle.char (i8).a8, right.char (i8).a8                                                #64
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #65
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 65(0x00000041).i32                                                                #65
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #65
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 65(0x00000041).i32                                                                #65
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG115.up32->char (i8)                                                          #65
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 65(0x00000041).i32                  #65
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN moves.integer (i32).a32                                                            #65
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 65(0x00000041).i32                                                    #65
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG116.up32->char (i8)                                                          #65
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 65(0x00000041).i32                  #65
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #65
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 65(0x00000041).i32                                                                #65
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #65
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 65(0x00000041).i32                                                                #65
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG117.up32->char (i8)                                                          #66
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 66(0x00000042).i32                  #66
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #66
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 66(0x00000042).i32                                                                #66
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #66
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 66(0x00000042).i32                                                                #66
                       CALL &PrintTowers.CDecl.Function()->(void)           #67
                       GOTO $L15                                            #67
$L15: (references=2)                                                        #59
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #67
   t221.set (up32->void) = CONVERT $$temp100.epsilon (null32->unk).a32      #67
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t221.set (up32->void)                                                   #67
   t222.set (up32->void) = CONVERT $$temp101.epsilon (null32->unk).a32      #67
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t222.set (up32->void)                                                   #67
   t223.set (up32->void) = CONVERT $$temp102.epsilon (null32->unk).a32      #67
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t223.set (up32->void)                                                   #67
   t224.set (up32->void) = CONVERT $$temp103.$$unnamed106 (up32->integer (i32)).a32                                                                         #67
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t224.set (up32->void)                                                   #67
                       RETURN $L16(T)                                       #68
$L16: (references=1)                                                        #68
                       EXITFUNCTION                                         #68
$L2: (references=0)                                                         #68
                       END                                                  #68

IR after Type Checker (control chktype)

Function Unit #5
$L1: (references=0)                                                         #38
                       START Hanoi(T)                                       #38
Hanoi: (references=1)                                                       #38
   height.integer (i32).a32, source.char (i8).a8, dest.char (i8).a8, using.char (i8).a8 = ENTERFUNCTION                                                     #38
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG111.up32->char (i8), 0.i32, 5.i32, 4.i32, &height.up32->integer (i32), &source.up32->char (i8), &dest.up32->char (i8), &using.up32->char (i8) #51
   t141.i32          = COMPARE(LT) 0.integer (i32), height.integer (i32).a32 #46
                       CONDITIONALBRANCH(True) t141.i32, $L4, $L5           #46
$L4: (references=1)                                                         #46
   tv144-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #46
                       GOTO $L6                                             #46
$L5: (references=1)                                                         #46
   tv144-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #46
                       GOTO $L6                                             #46
$L6: (references=2)                                                         #46
                       CONDITIONALBRANCH(True) tv144"$$data"(Boolean (Enum32)+0).i32, $L7, $L8                                                              #46
$L7: (references=1)                                                         #46
   t145.integer (i32) = SUBTRACT height.integer (i32).a32, 1.integer (i32)  #48
                       CALL &Hanoi.CDecl.Function(integer (i32),char (i8),char (i8),char (i8))->(void), t145.integer (i32), source.char (i8).a8, using.char (i8).a8, dest.char (i8).a8                                                      #48
                       CALL &MoveDisk.CDecl.Function(integer (i32),char (i8),char (i8))->(void), height.integer (i32).a32, source.char (i8).a8, dest.char (i8).a8                                                                           #49
   t146.integer (i32) = SUBTRACT height.integer (i32).a32, 1.integer (i32)  #50
                       CALL &Hanoi.CDecl.Function(integer (i32),char (i8),char (i8),char (i8))->(void), t146.integer (i32), using.char (i8).a8, dest.char (i8).a8, source.char (i8).a8                                                      #50
                       GOTO $L8                                             #51
$L8: (references=2)                                                         #46
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 5.i32                                                                   #51
                       RETURN $L9(T)                                        #52
$L9: (references=1)                                                         #52
                       EXITFUNCTION                                         #52
$L2: (references=0)                                                         #52
                       END                                                  #52

IR after Type Checker (control chktype)

Function Unit #6
$L1: (references=0)                                                         #39
                       START MoveDisk(T)                                    #39
MoveDisk: (references=1)                                                    #39
   disk.integer (i32).a32, source.char (i8).a8, destination.char (i8).a8 = ENTERFUNCTION                                                                    #39
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG111.up32->char (i8), 0.i32, 6.i32, 7.i32, &disk.up32->integer (i32), &source.up32->char (i8), &destination.up32->char (i8), &$$temp100.up32->$$unnamed104 (up32->integer (i32)), &$$temp101.up32->$$unnamed101 (up32->$$unnamed101`1 (i32)), &$$temp102.up32->$$unnamed105 (up32->integer (i32)), &$$temp103.up32->$$unnamed101 (up32->$$unnamed101`1 (i32))                              #43
   t140.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 6.i32                                            #41
   t141.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 6.i32                                            #41
   [t140.up32->void].integer (i32).a32 = ADD 1.integer (i32), [t141.up32->void].integer (i32).a32                                                           #41
   t143.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 8.i32                                            #42
   t144.i32          = CONVERT source.char (i8).a8                          #42
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 65(0x00000041).i32, 67(0x00000043).i32, t144.i32, 0.i32, 42(0x0000002a).i32                                                              #42
   t145.integer (i32) = CONVERT source.char (i8).a8                         #42
   t146.i32          = SUBTRACT t145.integer (i32), 65(0x00000041).i32      #42
   t147.i32          = MULTIPLY 1.i32, t146.i32                             #42
   t148.i32          = ADD t147.i32, 0.i32                                  #42
   tv149-.i32        = MULTIPLY 4.i32, t148.i32                             #42
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv149-.i32, 0.i32, 42(0x0000002a).i32      #42
   t150.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 8.i32                                            #42
   t151.i32          = CONVERT source.char (i8).a8                          #42
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 65(0x00000041).i32, 67(0x00000043).i32, t151.i32, 0.i32, 42(0x0000002a).i32                                                              #42
   t152.integer (i32) = CONVERT source.char (i8).a8                         #42
   t153.i32          = SUBTRACT t152.integer (i32), 65(0x00000041).i32      #42
   t154.i32          = MULTIPLY 1.i32, t153.i32                             #42
   t155.i32          = ADD t154.i32, 0.i32                                  #42
   tv156-.i32        = MULTIPLY 4.i32, t155.i32                             #42
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv156-.i32, 0.i32, 42(0x0000002a).i32      #42
   t158.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 1.i32, disk.integer (i32).a32                                                 #42
   t159.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 1.i32, disk.integer (i32).a32                                                 #42
   t160.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t158.i32, t159.i32, 0.i32, 42(0x0000002a).i32                #42
   t162.$$unnamed104 (up32->integer (i32)) = CONVERT t160.set (up32->void)  #42
   $$temp100.$$unnamed104 (up32->integer (i32)).a32 = ASSIGN t162.$$unnamed104 (up32->integer (i32))                                                        #42
   t163.set (up32->void) = CONVERT $$temp100.$$unnamed104 (up32->integer (i32)).a32                                                                         #42
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 42(0x0000002a).i32, t163.set (up32->void), 4.i32, 1.i32, disk.integer (i32).a32, disk.integer (i32).a32                   #42
   t164.set (up32->void) = CONVERT [t150.up32->void+tv156-.i32]($$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+0).$$unnamed101 (up32->$$unnamed101`1 (i32)).a128                                                      #42
   t165.set (up32->void) = CONVERT $$temp100.$$unnamed104 (up32->integer (i32)).a32                                                                         #42
   t166.set (up32->void) = CALL &_set_difference.CDecl.Function(set (up32->void),set (up32->void),i32,i32)->(set (up32->void)), t164.set (up32->void), t165.set (up32->void), 0.i32, 42(0x0000002a).i32                                     #42
   t168.$$unnamed101 (up32->$$unnamed101`1 (i32)) = CONVERT t166.set (up32->void)                                                                           #42
   $$temp101.$$unnamed101 (up32->$$unnamed101`1 (i32)).a32 = ASSIGN t168.$$unnamed101 (up32->$$unnamed101`1 (i32))                                          #42
   t169.set (up32->void) = CONVERT [t143.up32->void+tv149-.i32]($$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+0).$$unnamed101 (up32->$$unnamed101`1 (i32)).a128                                                      #42
   t170.set (up32->void) = CONVERT $$temp101.$$unnamed101 (up32->$$unnamed101`1 (i32)).a32                                                                  #42
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t169.set (up32->void), t170.set (up32->void), 4.i32, 0.i32, 42(0x0000002a).i32                                              #42
   t171.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 8.i32                                            #43
   t172.i32          = CONVERT destination.char (i8).a8                     #43
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 65(0x00000041).i32, 67(0x00000043).i32, t172.i32, 0.i32, 43(0x0000002b).i32                                                              #43
   t173.integer (i32) = CONVERT destination.char (i8).a8                    #43
   t174.i32          = SUBTRACT t173.integer (i32), 65(0x00000041).i32      #43
   t175.i32          = MULTIPLY 1.i32, t174.i32                             #43
   t176.i32          = ADD t175.i32, 0.i32                                  #43
   tv177-.i32        = MULTIPLY 4.i32, t176.i32                             #43
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv177-.i32, 0.i32, 43(0x0000002b).i32      #43
   t178.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 8.i32                                            #43
   t179.i32          = CONVERT destination.char (i8).a8                     #43
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 65(0x00000041).i32, 67(0x00000043).i32, t179.i32, 0.i32, 43(0x0000002b).i32                                                              #43
   t180.integer (i32) = CONVERT destination.char (i8).a8                    #43
   t181.i32          = SUBTRACT t180.integer (i32), 65(0x00000041).i32      #43
   t182.i32          = MULTIPLY 1.i32, t181.i32                             #43
   t183.i32          = ADD t182.i32, 0.i32                                  #43
   tv184-.i32        = MULTIPLY 4.i32, t183.i32                             #43
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv184-.i32, 0.i32, 43(0x0000002b).i32      #43
   t186.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 1.i32, disk.integer (i32).a32                                                 #43
   t187.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 1.i32, disk.integer (i32).a32                                                 #43
   t188.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t186.i32, t187.i32, 0.i32, 43(0x0000002b).i32                #43
   t190.$$unnamed105 (up32->integer (i32)) = CONVERT t188.set (up32->void)  #43
   $$temp102.$$unnamed105 (up32->integer (i32)).a32 = ASSIGN t190.$$unnamed105 (up32->integer (i32))                                                        #43
   t191.set (up32->void) = CONVERT $$temp102.$$unnamed105 (up32->integer (i32)).a32                                                                         #43
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 43(0x0000002b).i32, t191.set (up32->void), 4.i32, 1.i32, disk.integer (i32).a32, disk.integer (i32).a32                   #43
   t192.set (up32->void) = CONVERT [t178.up32->void+tv184-.i32]($$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+0).$$unnamed101 (up32->$$unnamed101`1 (i32)).a128                                                      #43
   t193.set (up32->void) = CONVERT $$temp102.$$unnamed105 (up32->integer (i32)).a32                                                                         #43
   t194.set (up32->void) = CALL &_set_union.CDecl.Function(set (up32->void),set (up32->void),i32,i32)->(set (up32->void)), t192.set (up32->void), t193.set (up32->void), 0.i32, 44(0x0000002c).i32                                          #43
   t196.$$unnamed101 (up32->$$unnamed101`1 (i32)) = CONVERT t194.set (up32->void)                                                                           #43
   $$temp103.$$unnamed101 (up32->$$unnamed101`1 (i32)).a32 = ASSIGN t196.$$unnamed101 (up32->$$unnamed101`1 (i32))                                          #43
   t197.set (up32->void) = CONVERT [t171.up32->void+tv177-.i32]($$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+0).$$unnamed101 (up32->$$unnamed101`1 (i32)).a128                                                      #43
   t198.set (up32->void) = CONVERT $$temp103.$$unnamed101 (up32->$$unnamed101`1 (i32)).a32                                                                  #43
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t197.set (up32->void), t198.set (up32->void), 4.i32, 0.i32, 44(0x0000002c).i32                                              #43
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 6.i32                                                                   #43
   t200.set (up32->void) = CONVERT $$temp100.$$unnamed104 (up32->integer (i32)).a32                                                                         #43
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t200.set (up32->void)                                                   #43
   t201.set (up32->void) = CONVERT $$temp101.$$unnamed101 (up32->$$unnamed101`1 (i32)).a32                                                                  #43
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t201.set (up32->void)                                                   #43
   t202.set (up32->void) = CONVERT $$temp102.$$unnamed105 (up32->integer (i32)).a32                                                                         #43
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t202.set (up32->void)                                                   #43
   t203.set (up32->void) = CONVERT $$temp103.$$unnamed101 (up32->$$unnamed101`1 (i32)).a32                                                                  #43
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t203.set (up32->void)                                                   #43
                       RETURN $L4(T)                                        #44
$L4: (references=1)                                                         #44
                       EXITFUNCTION                                         #44
$L2: (references=0)                                                         #44
                       END                                                  #44

IR after Type Checker (control chktype)

Function Unit #3
$L1: (references=0)                                                         #12
                       START PrintTowers(T)                                 #12
PrintTowers: (references=1)                                                 #12
                       ENTERFUNCTION                                        #12
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG111.up32->char (i8), 0.i32, 3.i32, 2.i32, &c.up32->char (i8), &i.up32->integer (i32)                                                      #35
   t139.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 5.i32                                            #26
   i.integer (i32).a32 = ASSIGN [t139.up32->void].integer (i32).a32         #26
   tv140-.integer (i32) = ASSIGN i.integer (i32).a32                        #26
   t141.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 3.i32                                            #26
                       GOTO $L4                                             #26
$L4: (references=2)                                                         #26
   t142.i32          = COMPARE(GT) [t141.up32->void].integer (i32).a32, tv140-.integer (i32)                                                                #26
                       CONDITIONALBRANCH(True) t142.i32, $L5, $L6           #26
$L5: (references=1)                                                         #26
   tv145-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #26
                       GOTO $L7                                             #26
$L6: (references=1)                                                         #26
   tv145-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #26
                       GOTO $L7                                             #26
$L7: (references=2)                                                         #26
                       CONDITIONALBRANCH(True) tv145"$$data"(Boolean (Enum32)+0).i32, $L8, $L9                                                              #26
$L9: (references=1)                                                         #26
   i.integer (i32).a32 = ASSIGN tv140-.integer (i32)                        #26
   t146.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #28
   c.char (i8).a8    = ASSIGN [t146.up32->void].char (i8).a8                #28
   tv147-.char (i8)  = ASSIGN c.char (i8).a8                                #28
   t148.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 2.i32                                            #28
                       GOTO $L10                                            #28
$L10: (references=2)                                                        #28
   t149.i32          = COMPARE(LT) [t148.up32->void].char (i8).a8, tv147-.char (i8)                                                                         #28
                       CONDITIONALBRANCH(True) t149.i32, $L11, $L12         #28
$L11: (references=1)                                                        #28
   tv150-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #28
                       GOTO $L13                                            #28
$L12: (references=1)                                                        #28
   tv150-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #28
                       GOTO $L13                                            #28
$L13: (references=2)                                                        #28
                       CONDITIONALBRANCH(True) tv150"$$data"(Boolean (Enum32)+0).i32, $L14, $L15                                                            #28
$L15: (references=1)                                                        #28
   c.char (i8).a8    = ASSIGN tv147-.char (i8)                              #28
   t151.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 8.i32                                            #30
   t152.i32          = CONVERT c.char (i8).a8                               #30
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 65(0x00000041).i32, 67(0x00000043).i32, t152.i32, 0.i32, 30(0x0000001e).i32                                                              #30
   t153.integer (i32) = CONVERT c.char (i8).a8                              #30
   t155.i32          = SUBTRACT t153.integer (i32), 65(0x00000041).i32      #30
   t156.i32          = ADD t155.i32, 0.i32                                  #30
   tv157-.i32        = MULTIPLY 4.i32, t156.i32                             #30
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv157-.i32, 0.i32, 30(0x0000001e).i32      #30
   t158.set (up32->void) = CONVERT [t151.up32->void+tv157-.i32]($$unnamed100 (UnmgdArr[$$unnamed101 (up32->$$unnamed101`1 (i32))]96)+0).$$unnamed101 (up32->$$unnamed101`1 (i32)).a128                                                      #30
   t159.i32          = CALL &_set_membership.CDecl.Function(set (up32->void),i32)->(i32), t158.set (up32->void), i.integer (i32).a32                        #30
   t160.i32          = COMPARE(NE) t159.i32, 0.i32                          #30
                       CONDITIONALBRANCH(True) t160.i32, $L16, $L17         #30
$L16: (references=1)                                                        #30
   tv161-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #30
                       GOTO $L18                                            #30
$L17: (references=1)                                                        #30
   tv161-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #30
                       GOTO $L18                                            #30
$L18: (references=2)                                                        #30
                       CONDITIONALBRANCH(True) tv161"$$data"(Boolean (Enum32)+0).i32, $L19, $L20                                                            #30
$L19: (references=1)                                                        #30
   t162.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 5.i32                                            #30
   t163.integer (i32) = SUBTRACT [t162.up32->void].integer (i32).a32, i.integer (i32).a32                                                                   #30
   t164.integer (i32) = ADD t163.integer (i32), 1.integer (i32)             #30
                       CALL &PrintDisk.CDecl.Function(integer (i32),Boolean (Enum32))->(void), t164.integer (i32), false.Boolean (Enum32).a32               #30
                       GOTO $L21                                            #30
$L20: (references=1)                                                        #30
   t165.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 5.i32                                            #31
   t166.integer (i32) = SUBTRACT [t165.up32->void].integer (i32).a32, i.integer (i32).a32                                                                   #31
   t167.integer (i32) = ADD t166.integer (i32), 1.integer (i32)             #31
                       CALL &PrintDisk.CDecl.Function(integer (i32),Boolean (Enum32))->(void), t167.integer (i32), true.Boolean (Enum32).a32                #31
                       GOTO $L21                                            #31
$L21: (references=2)                                                        #30
   t168.char (i8)    = ADD c.char (i8).a8, 1.char (i8)                      #31
   tv147-.char (i8)  = ASSIGN t168.char (i8)                                #31
                       GOTO $L10                                            #31
$L14: (references=1)                                                        #28
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #33
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 33(0x00000021).i32                                                                #33
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #33
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 33(0x00000021).i32                                                                #33
   t170.integer (i32) = SUBTRACT i.integer (i32).a32, 1.integer (i32)       #34
   tv140-.integer (i32) = ASSIGN t170.integer (i32)                         #34
                       GOTO $L4                                             #34
$L8: (references=1)                                                         #26
   t171.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #35
   c.char (i8).a8    = ASSIGN [t171.up32->void].char (i8).a8                #35
   tv172-.char (i8)  = ASSIGN c.char (i8).a8                                #35
   t173.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 2.i32                                            #35
                       GOTO $L22                                            #35
$L22: (references=2)                                                        #35
   t174.i32          = COMPARE(GT) tv172-.char (i8), [t173.up32->void].char (i8).a8                                                                         #35
                       CONDITIONALBRANCH(True) t174.i32, $L23, $L24         #35
$L23: (references=1)                                                        #35
   tv175-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #35
                       GOTO $L25                                            #35
$L24: (references=1)                                                        #35
   tv175-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #35
                       GOTO $L25                                            #35
$L25: (references=2)                                                        #35
                       CONDITIONALBRANCH(True) tv175"$$data"(Boolean (Enum32)+0).i32, $L26, $L27                                                            #35
$L27: (references=1)                                                        #35
   c.char (i8).a8    = ASSIGN tv172-.char (i8)                              #35
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG112.up32->char (i8)                                                          #35
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 35(0x00000023).i32                  #35
   t177.char (i8)    = ADD c.char (i8).a8, 1.char (i8)                      #35
   tv172-.char (i8)  = ASSIGN t177.char (i8)                                #35
                       GOTO $L22                                            #35
$L26: (references=1)                                                        #35
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 3.i32                                                                   #35
                       RETURN $L28(T)                                       #36
$L28: (references=1)                                                        #36
                       EXITFUNCTION                                         #36
$L2: (references=0)                                                         #36
                       END                                                  #36

IR after Type Checker (control chktype)

Function Unit #4
$L1: (references=0)                                                         #14
                       START PrintDisk(T)                                   #14
PrintDisk: (references=1)                                                   #14
   disk.integer (i32).a32, empty.Boolean (Enum32).a32 = ENTERFUNCTION       #14
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG111.up32->char (i8), 0.i32, 4.i32, 2.i32, &disk.up32->integer (i32), &empty.up32->Boolean (Enum32)                                        #23
   t152.i32          = COMPARE(EQ) 0.i32, empty"$$data"(Boolean (Enum32)+0).i32.a32                                                                         #23
   t139.i32          = QUESTION t152.i32, 1.i32, 0.i32                      #16
                       CONDITIONALBRANCH(True) t139.i32, $L4, $L5           #16
$L4: (references=1)                                                         #16
   tv142-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #16
                       GOTO $L6                                             #16
$L5: (references=1)                                                         #16
   tv142-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #16
                       GOTO $L6                                             #16
$L6: (references=2)                                                         #16
                       CONDITIONALBRANCH(True) tv142"$$data"(Boolean (Enum32)+0).i32, $L7, $L8                                                              #16
$L7: (references=1)                                                         #16
   t143.i32          = COMPARE(GT) 10(0x0000000a).integer (i32), disk.integer (i32).a32                                                                     #18
                       CONDITIONALBRANCH(True) t143.i32, $L10, $L11         #18
$L10: (references=1)                                                        #18
   tv144-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #18
                       GOTO $L12                                            #18
$L11: (references=1)                                                        #18
   tv144-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #18
                       GOTO $L12                                            #18
$L12: (references=2)                                                        #18
                       CONDITIONALBRANCH(True) tv144"$$data"(Boolean (Enum32)+0).i32, $L13, $L14                                                            #18
$L13: (references=1)                                                        #18
   output($stdfile (Aggregate2080)+32).up32->char (i8).a32 = ASSIGN &$SG106.up32->char (i8)                                                                 #19
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 19(0x00000013).i32                         #19
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN disk.integer (i32).a32                                                                    #19
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 19(0x00000013).i32                                                           #19
   output($stdfile (Aggregate2080)+32).up32->char (i8).a32 = ASSIGN &$SG107.up32->char (i8)                                                                 #19
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 19(0x00000013).i32                         #19
                       GOTO $L15                                            #19
$L14: (references=1)                                                        #18
   output($stdfile (Aggregate2080)+32).up32->char (i8).a32 = ASSIGN &$SG108.up32->char (i8)                                                                 #21
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 21(0x00000015).i32                         #21
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN disk.integer (i32).a32                                                                    #21
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 21(0x00000015).i32                                                           #21
   output($stdfile (Aggregate2080)+32).up32->char (i8).a32 = ASSIGN &$SG109.up32->char (i8)                                                                 #21
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 21(0x00000015).i32                         #21
                       GOTO $L15                                            #21
$L15: (references=2)                                                        #18
                       GOTO $L9                                             #21
$L8: (references=1)                                                         #16
   output($stdfile (Aggregate2080)+32).up32->char (i8).a32 = ASSIGN &$SG110.up32->char (i8)                                                                 #23
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 23(0x00000017).i32                         #23
                       GOTO $L9                                             #23
$L9: (references=2)                                                         #16
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 4.i32                                                                   #23
                       RETURN $L16(T)                                       #24
$L16: (references=1)                                                        #24
                       EXITFUNCTION                                         #24
$L2: (references=0)                                                         #24
                       END                                                  #24
Writing TowersOfHanoi.obj...

TowersOfHanoi.p - 0 error(s), 0 warning(s).

Linking...

TowersOfHanoi.exe - 0 error(s), 0 warning(s).

Before:
  *1*                     
  *2*                     
  *3*                     
  *4*                     
  *5*                     
  *6*                     
  *7*                     
  *8*                     
  *9*                     
 **10**                    
======== ======== ======== 
Solved in 1023 moves.
After:
           *1*            
           *2*            
           *3*            
           *4*            
           *5*            
           *6*            
           *7*            
           *8*            
           *9*            
          **10**           
======== ======== ======== 