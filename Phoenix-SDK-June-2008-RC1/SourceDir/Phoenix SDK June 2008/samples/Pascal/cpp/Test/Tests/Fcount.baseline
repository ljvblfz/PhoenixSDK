Compiling...
Fcount.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 25(0x00000019).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 25(0x00000019).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Fcount.CDecl.Function()->(void)                 #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #3
                       START Fcount(T)                                       #3
Fcount: (references=1)                                                       #3
                       ENTERFUNCTION                                         #3
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG107.up32->char (i8), 0.i32, 2.i32, 5.i32, &ch.up32->char (i8), &count.up32->$$unnamed100 (UnmgdArr[integer (i32)]832), &letter.up32->$$unnamed101 (up32->$$unnamed101`1 (i8)), &charfile.up32->text (Aggregate40), &$$temp100.up32->$$unnamed103 (up32->char (i8))                                        #24
   t144.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 97(0x00000061).i32, 122(0x0000007a).i32, 0.i32, 7.i32         #7
   letter.$$unnamed101 (up32->$$unnamed101`1 (i8)).a32 = CONVERT t144.set (up32->void)                                                                       #7
   t149.HANDLE (up32->void) = CALL &_file_open.CDecl.Function(up32->i8,i32,i32,i32)->(HANDLE (up32->void)), &$SG105.up32->char (i8), 0.i32, 0.i32, 8.i32     #8
   charfile"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32 = ASSIGN t149.HANDLE (up32->void)                                                 #8
   t150.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), charfile"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 8.i32                                                         #8
   [&charfile.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t150.i8      #8
   t152.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 2.i32, 97(0x00000061).i32, 122(0x0000007a).i32                                 #9
   t153.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 2.i32, 97(0x00000061).i32, 122(0x0000007a).i32                                 #9
   t154.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t152.i32, t153.i32, 0.i32, 9.i32                              #9
   t156.$$unnamed103 (up32->char (i8)) = CONVERT t154.set (up32->void)       #9
   $$temp100.$$unnamed103 (up32->char (i8)).a32 = ASSIGN t156.$$unnamed103 (up32->char (i8))                                                                 #9
   t157.set (up32->void) = CONVERT $$temp100.$$unnamed103 (up32->char (i8)).a32 #9
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 9.i32, t157.set (up32->void), 1.i32, 1.i32, 97(0x00000061).i32, 122(0x0000007a).i32                                        #9
   t158.set (up32->void) = CONVERT letter.$$unnamed101 (up32->$$unnamed101`1 (i8)).a32                                                                       #9
   t159.set (up32->void) = CONVERT $$temp100.$$unnamed103 (up32->char (i8)).a32 #9
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t158.set (up32->void), t159.set (up32->void), 1.i32, 0.i32, 9.i32                                                            #9
   ch.char (i8).a8   = ASSIGN 97(0x61).char (i8)                            #10
   tv160-.char (i8)  = ASSIGN ch.char (i8).a8                               #10
                       GOTO $L4                                             #10
$L4: (references=2)                                                         #10
   t161.i32          = COMPARE(GT) tv160-.char (i8), 122(0x7a).char (i8)    #10
                       CONDITIONALBRANCH(True) t161.i32, $L5, $L6           #10
$L5: (references=1)                                                         #10
   tv164-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #10
                       GOTO $L7                                             #10
$L6: (references=1)                                                         #10
   tv164-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #10
                       GOTO $L7                                             #10
$L7: (references=2)                                                         #10
                       CONDITIONALBRANCH(True) tv164"$$data"(Boolean (Enum32)+0).i32, $L8, $L9                                                              #10
$L9: (references=1)                                                         #10
   ch.char (i8).a8   = ASSIGN tv160-.char (i8)                              #10
   t165.i32          = CONVERT ch.char (i8).a8                              #10
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 97(0x00000061).i32, 122(0x0000007a).i32, t165.i32, 0.i32, 10(0x0000000a).i32                                                             #10
   t166.integer (i32) = CONVERT ch.char (i8).a8                             #10
   t167.i32          = SUBTRACT t166.integer (i32), 97(0x00000061).i32      #10
   t168.i32          = MULTIPLY 1.i32, t167.i32                             #10
   t169.i32          = ADD t168.i32, 0.i32                                  #10
   tv170-.i32        = MULTIPLY 4.i32, t169.i32                             #10
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 100(0x00000064).i32, tv170-.i32, 0.i32, 10(0x0000000a).i32                                                                        #10
   [&count.up32->$$unnamed100 (UnmgdArr[integer (i32)]832)+tv170-.i32].integer (i32).a32 = ASSIGN 0.integer (i32)                                           #10
   t171.char (i8)    = ADD ch.char (i8).a8, 1.char (i8)                     #10
   tv160-.char (i8)  = ASSIGN t171.char (i8)                                #10
                       GOTO $L4                                             #10
$L8: (references=1)                                                         #10
                       GOTO $L10                                            #11
$L10: (references=2)                                                        #11
   t172.i32          = CALL &_file_eof.CDecl.Function(HANDLE (up32->void))->(i32), charfile"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32  #11
                       CONDITIONALBRANCH(True) t172.i32, $L11, $L12         #11
$L11: (references=1)                                                        #11
   tv173-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #11
                       GOTO $L13                                            #11
$L12: (references=1)                                                        #11
   tv173-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #11
                       GOTO $L13                                            #11
$L13: (references=2)                                                        #11
   tv173-.Boolean (Enum32) = ASSIGN tv173-.Boolean (Enum32)                 #11
   t174.i32          = NOT tv173"$$data"(Boolean (Enum32)+0).i32            #11
                       CONDITIONALBRANCH(True) t174.i32, $L14, $L15         #11
$L14: (references=1)                                                        #11
   tv175-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #11
                       GOTO $L16                                            #11
$L15: (references=1)                                                        #11
   tv175-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #11
                       GOTO $L16                                            #11
$L16: (references=2)                                                        #11
                       CONDITIONALBRANCH(True) tv175"$$data"(Boolean (Enum32)+0).i32, $L17, $L18                                                            #11
$L17: (references=1)                                                        #11
                       GOTO $L19                                            #13
$L19: (references=2)                                                        #13
   t176.i32          = CALL &_file_eoln.CDecl.Function(HANDLE (up32->void),i8)->(i32), charfile"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, [&charfile.up32->text (Aggregate40)+4].char (i8).a8                         #13
                       CONDITIONALBRANCH(True) t176.i32, $L20, $L21         #13
$L20: (references=1)                                                        #13
   tv177-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #13
                       GOTO $L22                                            #13
$L21: (references=1)                                                        #13
   tv177-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #13
                       GOTO $L22                                            #13
$L22: (references=2)                                                        #13
   tv177-.Boolean (Enum32) = ASSIGN tv177-.Boolean (Enum32)                 #13
   t178.i32          = NOT tv177"$$data"(Boolean (Enum32)+0).i32            #13
                       CONDITIONALBRANCH(True) t178.i32, $L23, $L24         #13
$L23: (references=1)                                                        #13
   tv179-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #13
                       GOTO $L25                                            #13
$L24: (references=1)                                                        #13
   tv179-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #13
                       GOTO $L25                                            #13
$L25: (references=2)                                                        #13
                       CONDITIONALBRANCH(True) tv179"$$data"(Boolean (Enum32)+0).i32, $L26, $L27                                                            #13
$L26: (references=1)                                                        #13
   ch.char (i8).a8   = ASSIGN charfile"$current_value"(text (Aggregate40)+32).char (i8).a8                                                                  #14
   t180.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), charfile"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 14(0x0000000e).i32                                           #14
   [&charfile.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t180.i8     #14
   t181.i32          = CONVERT ch.char (i8).a8                              #15
   t182.set (up32->void) = CONVERT letter.$$unnamed101 (up32->$$unnamed101`1 (i8)).a32                                                                      #15
   t183.i32          = CALL &_set_membership.CDecl.Function(set (up32->void),i32)->(i32), t182.set (up32->void), t181.i32                                   #15
   t184.i32          = COMPARE(NE) t183.i32, 0.i32                          #15
                       CONDITIONALBRANCH(True) t184.i32, $L28, $L29         #15
$L28: (references=1)                                                        #15
   tv185-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #15
                       GOTO $L30                                            #15
$L29: (references=1)                                                        #15
   tv185-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #15
                       GOTO $L30                                            #15
$L30: (references=2)                                                        #15
                       CONDITIONALBRANCH(True) tv185"$$data"(Boolean (Enum32)+0).i32, $L31, $L32                                                            #15
$L31: (references=1)                                                        #15
   t186.i32          = CONVERT ch.char (i8).a8                              #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 97(0x00000061).i32, 122(0x0000007a).i32, t186.i32, 0.i32, 15(0x0000000f).i32                                                             #15
   t187.integer (i32) = CONVERT ch.char (i8).a8                             #15
   t188.i32          = SUBTRACT t187.integer (i32), 97(0x00000061).i32      #15
   t189.i32          = MULTIPLY 1.i32, t188.i32                             #15
   t190.i32          = ADD t189.i32, 0.i32                                  #15
   tv191-.i32        = MULTIPLY 4.i32, t190.i32                             #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 100(0x00000064).i32, tv191-.i32, 0.i32, 15(0x0000000f).i32                                                                        #15
   t192.i32          = CONVERT ch.char (i8).a8                              #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 97(0x00000061).i32, 122(0x0000007a).i32, t192.i32, 0.i32, 15(0x0000000f).i32                                                             #15
   t193.integer (i32) = CONVERT ch.char (i8).a8                             #15
   t194.i32          = SUBTRACT t193.integer (i32), 97(0x00000061).i32      #15
   t195.i32          = MULTIPLY 1.i32, t194.i32                             #15
   t196.i32          = ADD t195.i32, 0.i32                                  #15
   tv197-.i32        = MULTIPLY 4.i32, t196.i32                             #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 100(0x00000064).i32, tv197-.i32, 0.i32, 15(0x0000000f).i32                                                                        #15
   t198.integer (i32) = ADD [&count.up32->$$unnamed100 (UnmgdArr[integer (i32)]832)+tv197-.i32].integer (i32).a32, 1.integer (i32)                          #15
   [&count.up32->$$unnamed100 (UnmgdArr[integer (i32)]832)+tv191-.i32].integer (i32).a32 = ASSIGN t198.integer (i32)                                        #15
                       GOTO $L32                                            #15
$L32: (references=2)                                                        #15
                       GOTO $L19                                            #16
$L27: (references=1)                                                        #13
   ch.char (i8).a8   = ASSIGN charfile"$current_value"(text (Aggregate40)+32).char (i8).a8                                                                  #17
   t199.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), charfile"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 17(0x00000011).i32                                           #17
   [&charfile.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t199.i8     #17
                       GOTO $L10                                            #17
$L18: (references=1)                                                        #11
   ch.char (i8).a8   = ASSIGN 97(0x61).char (i8)                            #20
   tv200-.char (i8)  = ASSIGN ch.char (i8).a8                               #20
                       GOTO $L33                                            #20
$L33: (references=2)                                                        #20
   t201.i32          = COMPARE(GT) tv200-.char (i8), 122(0x7a).char (i8)    #20
                       CONDITIONALBRANCH(True) t201.i32, $L34, $L35         #20
$L34: (references=1)                                                        #20
   tv202-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #20
                       GOTO $L36                                            #20
$L35: (references=1)                                                        #20
   tv202-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #20
                       GOTO $L36                                            #20
$L36: (references=2)                                                        #20
                       CONDITIONALBRANCH(True) tv202"$$data"(Boolean (Enum32)+0).i32, $L37, $L38                                                            #20
$L38: (references=1)                                                        #20
   ch.char (i8).a8   = ASSIGN tv200-.char (i8)                              #20
   t203.i32          = CONVERT ch.char (i8).a8                              #22
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 97(0x00000061).i32, 122(0x0000007a).i32, t203.i32, 0.i32, 22(0x00000016).i32                                                             #22
   t204.integer (i32) = CONVERT ch.char (i8).a8                             #22
   t205.i32          = SUBTRACT t204.integer (i32), 97(0x00000061).i32      #22
   t206.i32          = MULTIPLY 1.i32, t205.i32                             #22
   t207.i32          = ADD t206.i32, 0.i32                                  #22
   tv208-.i32        = MULTIPLY 4.i32, t207.i32                             #22
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 100(0x00000064).i32, tv208-.i32, 0.i32, 22(0x00000016).i32                                                                        #22
   t209.i32          = COMPARE(GT) [&count.up32->$$unnamed100 (UnmgdArr[integer (i32)]832)+tv208-.i32].integer (i32).a32, 0.integer (i32)                   #22
                       CONDITIONALBRANCH(True) t209.i32, $L39, $L40         #22
$L39: (references=1)                                                        #22
   tv210-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #22
                       GOTO $L41                                            #22
$L40: (references=1)                                                        #22
   tv210-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #22
                       GOTO $L41                                            #22
$L41: (references=2)                                                        #22
                       CONDITIONALBRANCH(True) tv210"$$data"(Boolean (Enum32)+0).i32, $L42, $L43                                                            #22
$L42: (references=1)                                                        #22
   t213.i32          = CONVERT ch.char (i8).a8                              #23
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 97(0x00000061).i32, 122(0x0000007a).i32, t213.i32, 0.i32, 23(0x00000017).i32                                                             #23
   t214.integer (i32) = CONVERT ch.char (i8).a8                             #23
   t215.i32          = SUBTRACT t214.integer (i32), 97(0x00000061).i32      #23
   t216.i32          = MULTIPLY 1.i32, t215.i32                             #23
   t217.i32          = ADD t216.i32, 0.i32                                  #23
   tv218-.i32        = MULTIPLY 4.i32, t217.i32                             #23
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 100(0x00000064).i32, tv218-.i32, 0.i32, 23(0x00000017).i32                                                                        #23
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN ch.char (i8).a8                                                                         #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 23(0x00000017).i32                                                         #23
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG106.up32->char (i8)                                                          #23
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 23(0x00000017).i32                  #23
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [&count.up32->$$unnamed100 (UnmgdArr[integer (i32)]832)+tv218-.i32].integer (i32).a32 #23
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 23(0x00000017).i32                                                    #23
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 23(0x00000017).i32                                                                #23
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 23(0x00000017).i32                                                                #23
                       GOTO $L43                                            #23
$L43: (references=2)                                                        #22
   t219.char (i8)    = ADD ch.char (i8).a8, 1.char (i8)                     #24
   tv200-.char (i8)  = ASSIGN t219.char (i8)                                #24
                       GOTO $L33                                            #24
$L37: (references=1)                                                        #20
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #24
   t221.set (up32->void) = CONVERT letter.$$unnamed101 (up32->$$unnamed101`1 (i8)).a32                                                                      #24
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t221.set (up32->void)                                                   #24
   t222.set (up32->void) = CONVERT $$temp100.$$unnamed103 (up32->char (i8)).a32 #24
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t222.set (up32->void)                                                   #24
   t223.set (up32->void) = CONVERT letter.$$unnamed101 (up32->$$unnamed101`1 (i8)).a32                                                                      #24
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t223.set (up32->void)                                                   #24
                       RETURN $L44(T)                                       #25
$L44: (references=1)                                                        #25
                       EXITFUNCTION                                         #25
$L2: (references=0)                                                         #25
                       END                                                  #25
Writing Fcount.obj...

Fcount.p - 0 error(s), 0 warning(s).

Linking...

Fcount.exe - 0 error(s), 0 warning(s).

a: 12
c: 1
d: 9
e: 5
f: 13
g: 2
h: 1
i: 4
j: 18
k: 10
l: 6
m: 1
o: 5
p: 1
q: 2
r: 4
s: 5
u: 5
v: 1
w: 3
x: 1
z: 5
