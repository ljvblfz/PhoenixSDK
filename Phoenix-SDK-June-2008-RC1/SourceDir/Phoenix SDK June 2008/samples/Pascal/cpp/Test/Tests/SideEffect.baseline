Compiling...
SideEffect.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 15(0x0000000f).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 15(0x0000000f).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &SideEffect.CDecl.Function()->(void)             #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #4
                       START SideEffect(T)                                   #4
SideEffect: (references=1)                                                   #4
                       ENTERFUNCTION                                         #4
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 2.i32, 2.i32, &a.up32->integer (i32), &z.up32->integer (i32)                                                  #14
   z.integer (i32).a32 = ASSIGN 10(0x0000000a).integer (i32)                #12
   a.integer (i32).a32 = CALL &sneaky.CDecl.Function(integer (i32))->(integer (i32)), z.integer (i32).a32                                                   #12
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN a.integer (i32).a32                                                                #12
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 12(0x0000000c).i32                                                    #12
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 32(0x20).char (i8)                                                                      #12
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 12(0x0000000c).i32                                                         #12
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN z.integer (i32).a32                                                                #12
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 12(0x0000000c).i32                                                    #12
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #12
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 12(0x0000000c).i32                                                                #12
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #12
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 12(0x0000000c).i32                                                                #12
   z.integer (i32).a32 = ASSIGN 10(0x0000000a).integer (i32)                #13
   t141.integer (i32) = CALL &sneaky.CDecl.Function(integer (i32))->(integer (i32)), 10(0x0000000a).integer (i32)                                           #13
   t142.integer (i32) = CALL &sneaky.CDecl.Function(integer (i32))->(integer (i32)), z.integer (i32).a32                                                    #13
   t143.integer (i32) = MULTIPLY t141.integer (i32), t142.integer (i32)     #13
   a.integer (i32).a32 = ASSIGN t143.integer (i32)                          #13
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN a.integer (i32).a32                                                                #13
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 13(0x0000000d).i32                                                    #13
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 32(0x20).char (i8)                                                                      #13
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 13(0x0000000d).i32                                                         #13
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN z.integer (i32).a32                                                                #13
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 13(0x0000000d).i32                                                    #13
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #13
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 13(0x0000000d).i32                                                                #13
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #13
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 13(0x0000000d).i32                                                                #13
   z.integer (i32).a32 = ASSIGN 10(0x0000000a).integer (i32)                #14
   t144.integer (i32) = CALL &sneaky.CDecl.Function(integer (i32))->(integer (i32)), z.integer (i32).a32                                                    #14
   t145.integer (i32) = CALL &sneaky.CDecl.Function(integer (i32))->(integer (i32)), 10(0x0000000a).integer (i32)                                           #14
   t146.integer (i32) = MULTIPLY t144.integer (i32), t145.integer (i32)     #14
   a.integer (i32).a32 = ASSIGN t146.integer (i32)                          #14
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN a.integer (i32).a32                                                                #14
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 14(0x0000000e).i32                                                    #14
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 32(0x20).char (i8)                                                                      #14
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 14(0x0000000e).i32                                                         #14
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN z.integer (i32).a32                                                                #14
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 14(0x0000000e).i32                                                    #14
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #14
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 14(0x0000000e).i32                                                                #14
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #14
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 14(0x0000000e).i32                                                                #14
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #14
                       RETURN $L4(T)                                        #15
$L4: (references=1)                                                         #15
                       EXITFUNCTION                                         #15
$L2: (references=0)                                                         #15
                       END                                                  #15

IR after Type Checker (control chktype)

Function Unit #3
$L1: (references=0)                                                          #7
                       START sneaky(T)                                       #7
sneaky: (references=1)                                                       #7
   x.integer (i32).a32 = ENTERFUNCTION                                       #7
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 3.i32, 2.i32, &x.up32->integer (i32), &sneaky.up32->integer (i32)                                              #9
   t139.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 1.i32                                             #8
   t140.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 1.i32                                             #8
   [t139.up32->void].integer (i32).a32 = SUBTRACT [t140.up32->void].integer (i32).a32, x.integer (i32).a32                                                   #8
   t142.i32          = CALL &_sqr.CDecl.Function(i32)->(i32), x.integer (i32).a32                                                                            #9
   sneaky.integer (i32).a32 = ASSIGN t142.i32                                #9
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 3.i32                                                                    #9
                       RETURN sneaky.integer (i32).a32, $L4(T)              #10
$L4: (references=1)                                                         #10
                       EXITFUNCTION                                         #10
$L2: (references=0)                                                         #10
                       END                                                  #10
Writing SideEffect.obj...

SideEffect.p - 0 error(s), 0 warning(s).

Linking...

SideEffect.exe - 0 error(s), 0 warning(s).

100 0
0 0
10000 -10
