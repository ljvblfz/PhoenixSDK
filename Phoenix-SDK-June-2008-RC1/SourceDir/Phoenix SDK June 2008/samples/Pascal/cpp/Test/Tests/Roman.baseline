Compiling...
Roman.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 25(0x00000019).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 25(0x00000019).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Roman.CDecl.Function()->(void)                  #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #4
                       START Roman(T)                                        #4
Roman: (references=1)                                                        #4
                       ENTERFUNCTION                                         #4
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 2.i32, 2.i32, &x.up32->integer (i32), &y.up32->integer (i32)                                                  #24
   y.integer (i32).a32 = ASSIGN 1.integer (i32)                              #7
                       GOTO $L4                                             #25
$L4: (references=2)                                                         #25
   x.integer (i32).a32 = ASSIGN y.integer (i32).a32                          #8
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN x.integer (i32).a32                                                                        #8
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 8.i32                                                                         #8
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 9.char (i8)     #8
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 8.i32 #8
                       GOTO $L5                                              #9
$L5: (references=2)                                                          #9
   t140.i32          = COMPARE(LT) 999(0x000003e7).integer (i32), x.integer (i32).a32                                                                        #9
                       CONDITIONALBRANCH(True) t140.i32, $L6, $L7            #9
$L6: (references=1)                                                          #9
   tv143-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32                #9
                       GOTO $L8                                              #9
$L7: (references=1)                                                          #9
   tv143-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32               #9
                       GOTO $L8                                              #9
$L8: (references=2)                                                          #9
                       CONDITIONALBRANCH(True) tv143"$$data"(Boolean (Enum32)+0).i32, $L9, $L10                                                              #9
$L9: (references=1)                                                          #9
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 109(0x6d).char (i8)                                                                            #10
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 10(0x0000000a).i32                                                                #10
   x.integer (i32).a32 = SUBTRACT x.integer (i32).a32, 1000(0x000003e8).integer (i32)                                                                       #10
                       GOTO $L5                                             #10
$L10: (references=1)                                                         #9
   t145.i32          = COMPARE(GE) x.integer (i32).a32, 500(0x000001f4).integer (i32)                                                                       #11
                       CONDITIONALBRANCH(True) t145.i32, $L11, $L12         #11
$L11: (references=1)                                                        #11
   tv146-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #11
                       GOTO $L13                                            #11
$L12: (references=1)                                                        #11
   tv146-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #11
                       GOTO $L13                                            #11
$L13: (references=2)                                                        #11
                       CONDITIONALBRANCH(True) tv146"$$data"(Boolean (Enum32)+0).i32, $L14, $L15                                                            #11
$L14: (references=1)                                                        #11
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 100(0x64).char (i8)                                                                     #12
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 12(0x0000000c).i32                                                         #12
   t147.integer (i32) = SUBTRACT x.integer (i32).a32, 500(0x000001f4).integer (i32)                                                                         #12
   x.integer (i32).a32 = ASSIGN t147.integer (i32)                          #12
                       GOTO $L15                                            #12
$L15: (references=2)                                                        #11
                       GOTO $L16                                            #13
$L16: (references=2)                                                        #13
   t148.i32          = COMPARE(GE) x.integer (i32).a32, 100(0x00000064).integer (i32)                                                                       #13
                       CONDITIONALBRANCH(True) t148.i32, $L17, $L18         #13
$L17: (references=1)                                                        #13
   tv149-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #13
                       GOTO $L19                                            #13
$L18: (references=1)                                                        #13
   tv149-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #13
                       GOTO $L19                                            #13
$L19: (references=2)                                                        #13
                       CONDITIONALBRANCH(True) tv149"$$data"(Boolean (Enum32)+0).i32, $L20, $L21                                                            #13
$L20: (references=1)                                                        #13
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 99(0x63).char (i8)                                                                      #14
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 14(0x0000000e).i32                                                         #14
   t150.integer (i32) = SUBTRACT x.integer (i32).a32, 100(0x00000064).integer (i32)                                                                         #14
   x.integer (i32).a32 = ASSIGN t150.integer (i32)                          #14
                       GOTO $L16                                            #14
$L21: (references=1)                                                        #13
   t151.i32          = COMPARE(GE) x.integer (i32).a32, 50(0x00000032).integer (i32)                                                                        #15
                       CONDITIONALBRANCH(True) t151.i32, $L22, $L23         #15
$L22: (references=1)                                                        #15
   tv152-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #15
                       GOTO $L24                                            #15
$L23: (references=1)                                                        #15
   tv152-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #15
                       GOTO $L24                                            #15
$L24: (references=2)                                                        #15
                       CONDITIONALBRANCH(True) tv152"$$data"(Boolean (Enum32)+0).i32, $L25, $L26                                                            #15
$L25: (references=1)                                                        #15
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 108(0x6c).char (i8)                                                                     #16
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 16(0x00000010).i32                                                         #16
   t153.integer (i32) = SUBTRACT x.integer (i32).a32, 50(0x00000032).integer (i32)                                                                          #16
   x.integer (i32).a32 = ASSIGN t153.integer (i32)                          #16
                       GOTO $L26                                            #16
$L26: (references=2)                                                        #15
                       GOTO $L27                                            #17
$L27: (references=2)                                                        #17
   t154.i32          = COMPARE(GE) x.integer (i32).a32, 10(0x0000000a).integer (i32)                                                                        #17
                       CONDITIONALBRANCH(True) t154.i32, $L28, $L29         #17
$L28: (references=1)                                                        #17
   tv155-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #17
                       GOTO $L30                                            #17
$L29: (references=1)                                                        #17
   tv155-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #17
                       GOTO $L30                                            #17
$L30: (references=2)                                                        #17
                       CONDITIONALBRANCH(True) tv155"$$data"(Boolean (Enum32)+0).i32, $L31, $L32                                                            #17
$L31: (references=1)                                                        #17
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 120(0x78).char (i8)                                                                     #18
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 18(0x00000012).i32                                                         #18
   t156.integer (i32) = SUBTRACT x.integer (i32).a32, 10(0x0000000a).integer (i32)                                                                          #18
   x.integer (i32).a32 = ASSIGN t156.integer (i32)                          #18
                       GOTO $L27                                            #18
$L32: (references=1)                                                        #17
   t157.i32          = COMPARE(GE) x.integer (i32).a32, 5.integer (i32)     #19
                       CONDITIONALBRANCH(True) t157.i32, $L33, $L34         #19
$L33: (references=1)                                                        #19
   tv158-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #19
                       GOTO $L35                                            #19
$L34: (references=1)                                                        #19
   tv158-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #19
                       GOTO $L35                                            #19
$L35: (references=2)                                                        #19
                       CONDITIONALBRANCH(True) tv158"$$data"(Boolean (Enum32)+0).i32, $L36, $L37                                                            #19
$L36: (references=1)                                                        #19
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 118(0x76).char (i8)                                                                     #20
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 20(0x00000014).i32                                                         #20
   t159.integer (i32) = SUBTRACT x.integer (i32).a32, 5.integer (i32)       #20
   x.integer (i32).a32 = ASSIGN t159.integer (i32)                          #20
                       GOTO $L37                                            #20
$L37: (references=2)                                                        #19
                       GOTO $L38                                            #21
$L38: (references=2)                                                        #21
   t160.i32          = COMPARE(GE) x.integer (i32).a32, 1.integer (i32)     #21
                       CONDITIONALBRANCH(True) t160.i32, $L39, $L40         #21
$L39: (references=1)                                                        #21
   tv161-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #21
                       GOTO $L41                                            #21
$L40: (references=1)                                                        #21
   tv161-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #21
                       GOTO $L41                                            #21
$L41: (references=2)                                                        #21
                       CONDITIONALBRANCH(True) tv161"$$data"(Boolean (Enum32)+0).i32, $L42, $L43                                                            #21
$L42: (references=1)                                                        #21
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 105(0x69).char (i8)                                                                     #22
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 22(0x00000016).i32                                                         #22
   t162.integer (i32) = SUBTRACT x.integer (i32).a32, 1.integer (i32)       #22
   x.integer (i32).a32 = ASSIGN t162.integer (i32)                          #22
                       GOTO $L38                                            #22
$L43: (references=1)                                                        #21
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 23(0x00000017).i32                                                         #23
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 23(0x00000017).i32                                                         #23
   t163.integer (i32) = MULTIPLY 2.integer (i32), y.integer (i32).a32       #23
   y.integer (i32).a32 = ASSIGN t163.integer (i32)                          #23
   t164.i32          = COMPARE(GT) y.integer (i32).a32, 5000(0x00001388).integer (i32)                                                                      #24
                       CONDITIONALBRANCH(True) t164.i32, $L44, $L45         #24
$L44: (references=1)                                                        #24
   tv165-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #24
                       GOTO $L46                                            #24
$L45: (references=1)                                                        #24
   tv165-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #24
                       GOTO $L46                                            #24
$L46: (references=2)                                                        #24
                       CONDITIONALBRANCH(True) tv165"$$data"(Boolean (Enum32)+0).i32, $L47, $L4                                                             #24
$L47: (references=1)                                                        #24
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #24
                       RETURN $L48(T)                                       #25
$L48: (references=1)                                                        #25
                       EXITFUNCTION                                         #25
$L2: (references=0)                                                         #25
                       END                                                  #25
Writing Roman.obj...

Roman.p - 0 error(s), 0 warning(s).

Linking...

Roman.exe - 0 error(s), 0 warning(s).

1	i
2	ii
4	iiii
8	viii
16	xvi
32	xxxii
64	lxiiii
128	cxxviii
256	cclvi
512	dxii
1024	mxxiiii
2048	mmxxxxviii
4096	mmmmlxxxxvi
