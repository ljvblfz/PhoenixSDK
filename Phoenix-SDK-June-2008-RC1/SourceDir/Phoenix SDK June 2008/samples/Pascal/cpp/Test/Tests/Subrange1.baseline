Compiling...
Subrange1.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 25(0x00000019).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 25(0x00000019).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Subrange1.CDecl.Function()->(void)              #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #3
                       START Subrange1(T)                                    #3
Subrange1: (references=1)                                                    #3
                       ENTERFUNCTION                                         #3
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 2.i32, 14(0x0000000e).i32, &mon.up32->days (Enum32), &tues.up32->days (Enum32), &wed.up32->days (Enum32), &thur.up32->days (Enum32), &fri.up32->days (Enum32), &sat.up32->days (Enum32), &sun.up32->days (Enum32), &workday.up32->$$unnamed100 (up32->days (Enum32)), &weekend.up32->$$unnamed100 (up32->days (Enum32)), &a.up32->$$unnamed103 (i32), &b.up32->$$unnamed104 (i32), &c.up32->$$unnamed105 (i32), &$$temp100.up32->$$unnamed106 (up32->days (Enum32)), &$$temp101.up32->$$unnamed107 (up32->days (Enum32))      #23
   mon"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 0.integer (i32)   #5
   tues"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 1.integer (i32)  #5
   wed"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 2.integer (i32)   #5
   thur"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 3.integer (i32)  #5
   fri"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 4.integer (i32)   #5
   sat"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 5.integer (i32)   #5
   sun"$$data"(days (Enum32)+0).integer (i32).a32 = ASSIGN 6.integer (i32)   #5
   t150.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 6.i32, 0.i32, 9.i32                                    #9
   workday.$$unnamed100 (up32->days (Enum32)).a32 = CONVERT t150.set (up32->void)                                                                            #9
   t154.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), 0.i32, 6.i32, 0.i32, 9.i32                                    #9
   t155.$$unnamed100 (up32->days (Enum32)) = CONVERT t154.set (up32->void)   #9
   weekend.$$unnamed100 (up32->days (Enum32)).a32 = ASSIGN t155.$$unnamed100 (up32->days (Enum32))                                                           #9
   t164.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 2.i32, mon.days (Enum32).a32, fri.days (Enum32).a32                           #13
   t165.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 2.i32, mon.days (Enum32).a32, fri.days (Enum32).a32                           #13
   t166.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t164.i32, t165.i32, 0.i32, 13(0x0000000d).i32                #13
   t168.$$unnamed106 (up32->days (Enum32)) = CONVERT t166.set (up32->void)  #13
   $$temp100.$$unnamed106 (up32->days (Enum32)).a32 = ASSIGN t168.$$unnamed106 (up32->days (Enum32))                                                        #13
   t169.set (up32->void) = CONVERT $$temp100.$$unnamed106 (up32->days (Enum32)).a32                                                                         #13
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 13(0x0000000d).i32, t169.set (up32->void), 4.i32, 1.i32, mon.days (Enum32).a32, fri.days (Enum32).a32                     #13
   t170.set (up32->void) = CONVERT workday.$$unnamed100 (up32->days (Enum32)).a32                                                                           #13
   t171.set (up32->void) = CONVERT $$temp100.$$unnamed106 (up32->days (Enum32)).a32                                                                         #13
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t170.set (up32->void), t171.set (up32->void), 4.i32, 0.i32, 13(0x0000000d).i32                                              #13
   t173.i32          = CALL &_get_lower_bound.CDecl.Function(i32,...)->(i32), 2.i32, sat.days (Enum32).a32, sun.days (Enum32).a32                           #14
   t174.i32          = CALL &_get_upper_bound.CDecl.Function(i32,...)->(i32), 2.i32, sat.days (Enum32).a32, sun.days (Enum32).a32                           #14
   t175.set (up32->void) = CALL &_new_set.CDecl.Function(i32,i32,i32,i32)->(set (up32->void)), t173.i32, t174.i32, 0.i32, 14(0x0000000e).i32                #14
   t177.$$unnamed107 (up32->days (Enum32)) = CONVERT t175.set (up32->void)  #14
   $$temp101.$$unnamed107 (up32->days (Enum32)).a32 = ASSIGN t177.$$unnamed107 (up32->days (Enum32))                                                        #14
   t178.set (up32->void) = CONVERT $$temp101.$$unnamed107 (up32->days (Enum32)).a32                                                                         #14
                       CALL &_set_set_values.CDecl.Function(i32,i32,set (up32->void),i32,i32,...)->(void), 0.i32, 14(0x0000000e).i32, t178.set (up32->void), 4.i32, 1.i32, sat.days (Enum32).a32, sun.days (Enum32).a32                     #14
   t179.set (up32->void) = CONVERT weekend.$$unnamed100 (up32->days (Enum32)).a32                                                                           #14
   t180.set (up32->void) = CONVERT $$temp101.$$unnamed107 (up32->days (Enum32)).a32                                                                         #14
                       CALL &_set_assign.CDecl.Function(set (up32->void),set (up32->void),i32,i32,i32)->(void), t179.set (up32->void), t180.set (up32->void), 4.i32, 0.i32, 14(0x0000000e).i32                                              #14
   a.$$unnamed103 (i32).a32 = ASSIGN 6.integer (i32)                        #16
   c.$$unnamed105 (i32).a32 = ASSIGN 25(0x00000019).integer (i32)           #17
   b.$$unnamed104 (i32).a32 = ASSIGN 10(0x0000000a).integer (i32)           #18
   a.$$unnamed103 (i32).a32 = ASSIGN b.$$unnamed104 (i32).a32               #20
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 10(0x0000000a).i32, a.$$unnamed103 (i32).a32, 0.i32, 20(0x00000014).i32                                                           #20
   b.$$unnamed104 (i32).a32 = ASSIGN c.$$unnamed105 (i32).a32               #21
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 30(0x0000001e).i32, b.$$unnamed104 (i32).a32, 0.i32, 21(0x00000015).i32                                                           #21
   [&output.up32->$stdfile (Aggregate2080)+4].$$unnamed103 (i32).a32 = ASSIGN a.$$unnamed103 (i32).a32                                                      #23
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 10(0x0000000a).i32, [&output.up32->$stdfile (Aggregate2080)+4].$$unnamed103 (i32).a32, 0.i32, 23(0x00000017).i32                  #23
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].$$unnamed103 (i32).a32, 0.i32, 23(0x00000017).i32                                               #23
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 44(0x2c).char (i8)                                                                      #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 23(0x00000017).i32                                                         #23
   [&output.up32->$stdfile (Aggregate2080)+4].$$unnamed104 (i32).a32 = ASSIGN b.$$unnamed104 (i32).a32                                                      #23
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 30(0x0000001e).i32, [&output.up32->$stdfile (Aggregate2080)+4].$$unnamed104 (i32).a32, 0.i32, 23(0x00000017).i32                  #23
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].$$unnamed104 (i32).a32, 0.i32, 23(0x00000017).i32                                               #23
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 44(0x2c).char (i8)                                                                      #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 23(0x00000017).i32                                                         #23
   [&output.up32->$stdfile (Aggregate2080)+4].$$unnamed105 (i32).a32 = ASSIGN c.$$unnamed105 (i32).a32                                                      #23
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 20(0x00000014).i32, 30(0x0000001e).i32, [&output.up32->$stdfile (Aggregate2080)+4].$$unnamed105 (i32).a32, 0.i32, 23(0x00000017).i32     #23
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].$$unnamed105 (i32).a32, 0.i32, 23(0x00000017).i32                                               #23
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 23(0x00000017).i32                                                                #23
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #23
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 23(0x00000017).i32                                                                #23
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #23
   t183.set (up32->void) = CONVERT workday.$$unnamed100 (up32->days (Enum32)).a32                                                                           #23
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t183.set (up32->void)                                                   #23
   t184.set (up32->void) = CONVERT weekend.$$unnamed100 (up32->days (Enum32)).a32                                                                           #23
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t184.set (up32->void)                                                   #23
   t185.set (up32->void) = CONVERT $$temp100.$$unnamed106 (up32->days (Enum32)).a32                                                                         #23
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t185.set (up32->void)                                                   #23
   t186.set (up32->void) = CONVERT workday.$$unnamed100 (up32->days (Enum32)).a32                                                                           #23
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t186.set (up32->void)                                                   #23
   t187.set (up32->void) = CONVERT $$temp101.$$unnamed107 (up32->days (Enum32)).a32                                                                         #23
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t187.set (up32->void)                                                   #23
   t188.set (up32->void) = CONVERT weekend.$$unnamed100 (up32->days (Enum32)).a32                                                                           #23
                       CALL &_release_set.CDecl.Function(set (up32->void))->(void), t188.set (up32->void)                                                   #23
                       RETURN $L4(T)                                        #25
$L4: (references=1)                                                         #25
                       EXITFUNCTION                                         #25
$L2: (references=0)                                                         #25
                       END                                                  #25
Writing Subrange1.obj...

Subrange1.p - 0 error(s), 0 warning(s).

Linking...

Subrange1.exe - 0 error(s), 0 warning(s).

10,25,25
