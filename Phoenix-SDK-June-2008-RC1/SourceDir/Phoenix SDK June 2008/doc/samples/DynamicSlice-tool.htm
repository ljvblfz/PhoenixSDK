<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=Generator content="Microsoft Word 12 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:minorEastAsia;
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:minorBidi;
	panose-1:0 0 0 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-builtin:yes;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
h1
	{mso-style-builtin:yes;
	mso-style-link:"Heading 1 Char";
	margin-top:24.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:14.0pt;
	font-family:"Cambria","serif";}
h1.CxSpFirst
	{mso-style-builtin:yes;
	mso-style-link:"Heading 1 Char";
	margin-top:24.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:14.0pt;
	font-family:"Cambria","serif";}
h1.CxSpMiddle
	{mso-style-builtin:yes;
	mso-style-link:"Heading 1 Char";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:14.0pt;
	font-family:"Cambria","serif";}
h1.CxSpLast
	{mso-style-builtin:yes;
	mso-style-link:"Heading 1 Char";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:14.0pt;
	font-family:"Cambria","serif";}
h2
	{mso-style-builtin:yes;
	mso-style-link:"Heading 2 Char";
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:13.0pt;
	font-family:"Cambria","serif";}
h3
	{mso-style-builtin:yes;
	mso-style-link:"Heading 3 Char";
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:110%;
	font-size:11.0pt;
	font-family:"Cambria","serif";}
h4
	{mso-style-builtin:yes;
	mso-style-link:"Heading 4 Char";
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Cambria","serif";
	font-style:italic;}
h5
	{mso-style-builtin:yes;
	mso-style-link:"Heading 5 Char";
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Cambria","serif";
	color:#7F7F7F;}
h6
	{mso-style-builtin:yes;
	mso-style-link:"Heading 6 Char";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:110%;
	font-size:11.0pt;
	font-family:"Cambria","serif";
	color:#7F7F7F;
	font-style:italic;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-builtin:yes;
	mso-style-link:"Heading 7 Char";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Cambria","serif";
	font-style:italic;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-builtin:yes;
	mso-style-link:"Heading 8 Char";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:10.0pt;
	font-family:"Cambria","serif";}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-builtin:yes;
	mso-style-link:"Heading 9 Char";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:10.0pt;
	font-family:"Cambria","serif";
	letter-spacing:.25pt;
	font-style:italic;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-builtin:yes;
	mso-style-link:"Header Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-builtin:yes;
	mso-style-link:"Footer Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-builtin:yes;
	mso-style-link:"Title Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	letter-spacing:.25pt;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-builtin:yes;
	mso-style-link:"Title Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	letter-spacing:.25pt;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-builtin:yes;
	mso-style-link:"Title Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	letter-spacing:.25pt;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-builtin:yes;
	mso-style-link:"Title Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	letter-spacing:.25pt;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-builtin:yes;
	mso-style-link:"Subtitle Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:30.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:12.0pt;
	font-family:"Cambria","serif";
	letter-spacing:.65pt;
	font-style:italic;}
p.MsoBlockText, li.MsoBlockText, div.MsoBlockText
	{mso-style-builtin:yes;
	margin-top:0in;
	margin-right:1.0in;
	margin-bottom:6.0pt;
	margin-left:1.0in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
a:link, span.MsoHyperlink
	{mso-style-builtin:yes;
	color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-builtin:yes;
	color:purple;
	text-decoration:underline;}
em
	{mso-style-builtin:yes;
	letter-spacing:.5pt;
	border:none windowtext 1.0pt;
	padding:0in;
	font-weight:bold;}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
	{mso-style-name:"No Spacing";
	mso-style-builtin:yes;
	margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-name:"List Paragraph";
	mso-style-builtin:yes;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{mso-style-name:"List ParagraphCxSpFirst";
	mso-style-builtin:yes;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{mso-style-name:"List ParagraphCxSpMiddle";
	mso-style-builtin:yes;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{mso-style-name:"List ParagraphCxSpLast";
	mso-style-builtin:yes;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoQuote, li.MsoQuote, div.MsoQuote
	{mso-style-name:Quote;
	mso-style-builtin:yes;
	mso-style-link:"Quote Char";
	margin-top:10.0pt;
	margin-right:.25in;
	margin-bottom:0in;
	margin-left:.25in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	font-style:italic;}
p.MsoIntenseQuote, li.MsoIntenseQuote, div.MsoIntenseQuote
	{mso-style-name:"Intense Quote";
	mso-style-builtin:yes;
	mso-style-link:"Intense Quote Char";
	margin-top:10.0pt;
	margin-right:.8in;
	margin-bottom:14.0pt;
	margin-left:.7in;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:115%;
	border:none;
	padding:0in;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	font-weight:bold;
	font-style:italic;}
span.MsoSubtleEmphasis
	{mso-style-name:"Subtle Emphasis";
	mso-style-builtin:yes;
	font-style:italic;}
span.MsoIntenseEmphasis
	{mso-style-name:"Intense Emphasis";
	mso-style-builtin:yes;
	font-weight:bold;}
span.MsoSubtleReference
	{mso-style-name:"Subtle Reference";
	mso-style-builtin:yes;
	font-variant:small-caps;}
span.MsoIntenseReference
	{mso-style-name:"Intense Reference";
	mso-style-builtin:yes;
	font-variant:small-caps;
	letter-spacing:.25pt;
	text-decoration:underline;}
span.MsoBookTitle
	{mso-style-name:"Book Title";
	mso-style-builtin:yes;
	font-variant:small-caps;
	letter-spacing:.25pt;
	font-style:italic;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Cambria","serif";
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Cambria","serif";
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Cambria","serif";
	font-weight:bold;}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-link:"Heading 4";
	font-family:"Cambria","serif";
	font-weight:bold;
	font-style:italic;}
span.Heading5Char
	{mso-style-name:"Heading 5 Char";
	mso-style-link:"Heading 5";
	font-family:"Cambria","serif";
	color:#7F7F7F;
	font-weight:bold;}
span.Heading6Char
	{mso-style-name:"Heading 6 Char";
	mso-style-link:"Heading 6";
	font-family:"Cambria","serif";
	color:#7F7F7F;
	font-weight:bold;
	font-style:italic;}
span.Heading7Char
	{mso-style-name:"Heading 7 Char";
	mso-style-link:"Heading 7";
	font-family:"Cambria","serif";
	font-style:italic;}
span.Heading8Char
	{mso-style-name:"Heading 8 Char";
	mso-style-link:"Heading 8";
	font-family:"Cambria","serif";}
span.Heading9Char
	{mso-style-name:"Heading 9 Char";
	mso-style-link:"Heading 9";
	font-family:"Cambria","serif";
	letter-spacing:.25pt;
	font-style:italic;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:"Cambria","serif";
	letter-spacing:.25pt;}
span.SubtitleChar
	{mso-style-name:"Subtitle Char";
	mso-style-link:Subtitle;
	font-family:"Cambria","serif";
	letter-spacing:.65pt;
	font-style:italic;}
span.QuoteChar
	{mso-style-name:"Quote Char";
	mso-style-link:Quote;
	font-style:italic;}
span.IntenseQuoteChar
	{mso-style-name:"Intense Quote Char";
	mso-style-link:"Intense Quote";
	font-weight:bold;
	font-style:italic;}
span.CodeChar
	{mso-style-name:"Code Char";
	mso-style-link:Code;
	font-family:"Courier New";}
p.Code, li.Code, div.Code
	{mso-style-name:Code;
	mso-style-link:"Code Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:10.0pt;
	font-family:"Courier New";}
span.HeaderChar
	{mso-style-name:"Header Char";
	mso-style-link:Header;}
span.FooterChar
	{mso-style-name:"Footer Char";
	mso-style-link:Footer;}
.MsoChpDefault
	{font-size:10.0pt;}
 /* Page Definitions */
 @page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink=purple>

<div class=Section1>

<p class=MsoTitle><span style='font-size:18.0pt'>DynamicSlice-tool Sample</span></p>

<p class=MsoNormal><span class=Heading1Char><span style='font-size:14.0pt;
line-height:115%'>Sample Name</span></span>: DynamicSlice-tool</p>

<p class=MsoNormal><span class=Heading1Char><span style='font-size:14.0pt;
line-height:115%'>Sample Category</span></span>: Plug-in, static and dynamic analysis</p>

<p class=MsoNormal><span class=Heading1Char><span style='font-size:14.0pt;
line-height:115%'>Description</span></span></p>

<p class=MsoNormal>The DynamicSlice-tool sample is an example of a tool which enhances the 
debugging experience of the user by an intra-procedural analysis. It uses
Phoenix&#8217;s dataflow analysis capabilities (eg. SSA, dominance and
lattices) and runtime values from the Visual Studio debugger to compute a
dynamic slice of the function. This tool attempts to present only that subset
of the program that could directly or indirectly affect the state of the
program. It uses debug time information about values of variables to prune away
code paths that could not be executed.</p>

<p class=MsoNormal><span class=Heading1Char><span style='font-size:14.0pt;
line-height:115%'>Source Language</span></span>: C#</p>

<p class=MsoNormal><span class=Heading1Char><span style='font-size:14.0pt;
line-height:115%'>Sample Location</span></span>: <span style='font-size:10.0pt;
line-height:115%;font-family:"Arial","sans-serif"'><a
href="../../Samples/dynamicslice-tool/csharp"><span
class=MsoHyperlink>Samples\dynamicslice-tool\csharp</span></a></p>


<p class=MsoNormal><span class=Heading1Char><span style='font-size:14.0pt;
line-height:115%'>Usage</span></span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='color:windowtext;
text-decoration:none'>Install the tool using the prebuilt installer at </span>
<span style='font-size:10.0pt;
line-height:115%;font-family:"Arial","sans-serif"'><a
href="../../Samples/dynamicslice-tool/"><span
class=MsoHyperlink>Samples\dynamicslice-tool</a></span><span
style='color:windowtext;text-decoration:none'>. Now, when you debug a program,
right click on any variable and select &#8216;Select Slice&#8217;. Additional
steps are required for unmanaged applications, which are detailed below.</span></p>

<p class=MsoNormal><span class=Heading1Char><span style='font-size:14.0pt;
line-height:115%'><span
style='color:windowtext;text-decoration:none'>Detailed Description</span></span></span></p>

<p class=MsoNormal><span
style='color:windowtext;text-decoration:none'>The DynamicSlice-tool supports
unmanaged C++, managed C++, C#, and VB. When you build unmanaged applications,
remember to turn off edit and continue and turn on profiling information.
The tool also supports disassembly-mode for unmanaged binaries. You may
slice on any operand of an assembly instruction from the disassembly window.</span></p>

<p class=MsoNormal><span class=Heading2Char><span style='font-size:13.0pt;
line-height:115%'><span
style='color:windowtext;text-decoration:none'>Unmanaged (Native) project</span></span></span></p>

<p class=MsoNormal><span lang=EN><span
style='color:windowtext;text-decoration:none'>Unmanaged projects require two
compiler flags to be set in order to allow the DynamicSlice-tool to work
correctly. In the properties window of the project, go to the C++ tab. Then,
set &quot;Debug Information Format&quot; to &quot;Program Database (/Zi)&quot;.
The default value is &quot;Program Database for Edit &amp; Continue
(/ZI)&quot;. Next, go to the Linker tab; under Advanced, change the Profile
option from &quot;No&quot; to &quot;Enable Profiling information
(/PROFILE)&quot;. </span></span></p>

<p class=MsoNormal><span class=Heading1Char><span style='font-size:14.0pt;
line-height:115%'><span
style='color:windowtext;text-decoration:none'>Compiling the sample</span></span></span></p>

<p class=MsoNormal><span
style='color:windowtext;text-decoration:none'>The sample consists of two
separate projects. When you open these projects for the first time in Visual
Studio, Visual Studio will ask you if you wish to allow custom build rules to
be loaded for </span><span class=CodeChar><span style='font-size:10.0pt;
line-height:115%;color:windowtext;text-decoration:none'>sliceIDE</span></span><span
style='color:windowtext;text-decoration:none'>. You should allow these rules to
be loaded. They are custom rules that install the add-in to the experimental
hive of Visual Studio. This allows you to debug the add-in without breaking
your original development installation (see the section </span><b><span
style='font-size:10.0pt;line-height:115%;font-family:"Arial","sans-serif";
color:windowtext;text-decoration:none'>Debugging and running the sample</span></b><span
style='color:windowtext;text-decoration:none'>). The </span><span
class=CodeChar><span style='font-size:10.0pt;line-height:115%;color:windowtext;
text-decoration:none'>slice</span></span><span style='color:windowtext;
text-decoration:none'> project builds </span><span class=CodeChar><span
style='font-size:10.0pt;line-height:115%;color:windowtext;text-decoration:none'>slice.dll</span></span><span
style='color:windowtext;text-decoration:none'>, which computes the slice using
Phoenix. The </span><span class=CodeChar><span style='font-size:10.0pt;
line-height:115%;color:windowtext;text-decoration:none'>sliceIDE</span></span><span
style='color:windowtext;text-decoration:none'> project, on the other hand, is a
VSSDK add-in that acts as the bridge between Visual Studio and </span><span
class=CodeChar><span style='font-size:10.0pt;line-height:115%;color:windowtext;
text-decoration:none'>slice</span></span><span style='color:windowtext;
text-decoration:none'>. </span><span class=CodeChar><span style='font-size:
10.0pt;line-height:115%;color:windowtext;text-decoration:none'>slice</span></span><span
style='color:windowtext;text-decoration:none'> requires only Phoenix to build. </span><span
class=CodeChar><span style='font-size:10.0pt;line-height:115%;color:windowtext;
text-decoration:none'>sliceIDE</span></span><span style='color:windowtext;
text-decoration:none'>, however, requires the VSSDK to build. It isn't
necessary to build </span><span class=CodeChar><span style='font-size:10.0pt;
line-height:115%;color:windowtext;text-decoration:none'>sliceIDE</span></span><span
style='color:windowtext;text-decoration:none'> at all; we provide a prebuilt
binary. Even if you change analysis in </span><span class=CodeChar><span
style='font-size:10.0pt;line-height:115%;color:windowtext;text-decoration:none'>slice.dll</span></span><span
style='color:windowtext;text-decoration:none'>, no rebuild is required of </span><span
class=CodeChar><span style='font-size:10.0pt;line-height:115%;color:windowtext;
text-decoration:none'>sliceIDE</span></span><span style='color:windowtext;
text-decoration:none'>, because </span><span class=CodeChar><span
style='font-size:10.0pt;line-height:115%;color:windowtext;text-decoration:none'>sliceIDE</span></span><span
style='color:windowtext;text-decoration:none'> always picks the version of </span><span
class=CodeChar><span style='font-size:10.0pt;line-height:115%;color:windowtext;
text-decoration:none'>slice.dll</span></span><span style='color:windowtext;
text-decoration:none'> found in its local directory. To download the VSSDK, go
to </span><a
href="http://msdn.microsoft.com/vstudio/extend/"><span
class=MsoHyperlink>http://msdn.microsoft.com/vstudio/extend/</span></a><span
style='color:windowtext;text-decoration:none'>. The VSSDK is free, but you must
register to download it. </span></p>

<p class=MsoNormal><span class=Heading1Char><span style='font-size:14.0pt;
line-height:115%'><span
style='color:windowtext;text-decoration:none'>Debugging and running the sample</span></span></span></p>

<p class=MsoNormal><span
style='color:windowtext;text-decoration:none'>Generally, testing of a VSSDK
sample takes place in the </span><b><span style='font-size:10.0pt;line-height:
115%;font-family:"Arial","sans-serif";color:windowtext;text-decoration:none'>experimental
hive</span></b><span style='color:windowtext;text-decoration:none'> of Visual
Studio. Visual studio can be started from several different </span><b><span
style='font-size:10.0pt;line-height:115%;font-family:"Arial","sans-serif";
color:windowtext;text-decoration:none'>hives</span></b><span style='color:windowtext;
text-decoration:none'>; each has its own copy of registry entries. In this way,
your development Visual studio (the default hive) will be safe from any
problems that your add-in may cause in the experimental hive. </span><span
class=CodeChar><span style='font-size:10.0pt;line-height:115%;color:windowtext;
text-decoration:none'>sliceIDE</span></span><span style='color:windowtext;
text-decoration:none'>, by default, uses the </span><span class=CodeChar><span
style='font-size:10.0pt;line-height:115%;color:windowtext;text-decoration:none'>8.0Exp</span></span><span
style='color:windowtext;text-decoration:none'> hive. To debug from within
Visual Studio, you'll need to adjust the debug settings for the </span><span
class=CodeChar><span style='font-size:10.0pt;line-height:115%;color:windowtext;
text-decoration:none'>sliceIDE</span></span><span style='color:windowtext;
text-decoration:none'> project. </span></p>

<p class=MsoNormal><span class=Heading2Char><span style='font-size:13.0pt;
line-height:115%'><span
style='color:windowtext;text-decoration:none'>Debug Settings</span></span></span></p>

<p class=MsoNormal><span
style='color:windowtext;text-decoration:none'>In the Debug tab of </span><span
class=CodeChar><span style='font-size:10.0pt;line-height:115%;color:windowtext;
text-decoration:none'>sliceIDE</span></span><span style='color:windowtext;
text-decoration:none'>, set the &quot;Start External Process&quot; to point to </span><span
class=CodeChar><span style='font-size:10.0pt;line-height:115%;color:windowtext;
text-decoration:none'>devenv.exe</span></span><span style='color:windowtext;
text-decoration:none'>. Then, you will need to set the command line parameters
to </span><span class=CodeChar><span style='font-size:10.0pt;line-height:115%;
color:windowtext;text-decoration:none'>/rootsuffix Exp</span></span><span
style='color:windowtext;text-decoration:none'>, which tells Visual Studio to
use the </span><span class=CodeChar><span style='font-size:10.0pt;line-height:
115%;color:windowtext;text-decoration:none'>8.0Exp</span></span><span
style='color:windowtext;text-decoration:none'> registry hive. By default,
debugging </span><span class=CodeChar><span style='font-size:10.0pt;line-height:
115%;color:windowtext;text-decoration:none'>sliceIDE</span></span><span
style='color:windowtext;text-decoration:none'> inside Visual Studio will
register the DynamicSlice-tool with the </span><span class=CodeChar><span
style='font-size:10.0pt;line-height:115%;color:windowtext;text-decoration:none'>8.0Exp</span></span><span
style='color:windowtext;text-decoration:none'> hive. </span></p>

<p class=MsoNormal><span class=Heading2Char><span style='font-size:13.0pt;
line-height:115%'><span
style='color:windowtext;text-decoration:none'>Release Mode</span><span
style='font-size:11.0pt;line-height:115%;font-family:"Calibri","sans-serif";
color:windowtext;text-decoration:none'> </span></span></span></p>

<p class=MsoNormal><span
style='color:windowtext;text-decoration:none'>In release mode,
DynamicSlice-tool does not register the custom line markers with Visual Studio.
It assumes that the installer has done this; in debug mode, for convenience, </span><span
class=CodeChar><span style='font-size:10.0pt;line-height:115%;color:windowtext;
text-decoration:none'>sliceIDE</span></span><span style='color:windowtext;
text-decoration:none'> registers these markers at run-time. </span></p>

<p class=MsoNormal><span class=Heading2Char><span style='font-size:13.0pt;
line-height:115%'><span
style='color:windowtext;text-decoration:none'>Starting DynamicSlice-tool
outside of Visual Studio</span></span></span></p>

<p class=MsoNormal><span
style='color:windowtext;text-decoration:none'>It is possible to start Visual
Studio using the experimental hive via: </span><span class=CodeChar><span
style='font-size:10.0pt;line-height:115%;color:windowtext;text-decoration:none'>devenv.exe
/RootSuffix Exp</span></span></p>

<p class=MsoNormal><span class=Heading1Char><span style='font-size:14.0pt;
line-height:115%'><span
style='color:windowtext;text-decoration:none'>Known Issues</span></span></span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><span style='font-family:Symbol;color:windowtext;text-decoration:
none'>&middot;</span><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='color:windowtext;text-decoration:none'>You cannot slice on fields of
structures or classes; this includes member variables accessed in a member
function.</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><span style='font-family:Symbol;color:windowtext;text-decoration:
none'>&middot;</span><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='color:windowtext;text-decoration:none'>Dynamic slicing does not work
with managed code; the tool only uses static analysis</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><span style='font-family:Symbol;color:windowtext;text-decoration:
none'>&middot;</span><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='color:windowtext;text-decoration:none'>The tool cannot differentiate between
overloaded methods in managed code</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><span style='font-family:Symbol;color:windowtext;text-decoration:
none'>&middot;</span><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='color:windowtext;text-decoration:none'>On Vista machines and some XP SP2 machines, you must install the hot-fix KB910275
which fixes an internal limitation of Visual Studio 2005. Visual Studio only supports 64 custom text markers. This hot-fix 
increases that number. If the tool appears to be working but does not highlight any lines, or the lines are not highlighted 
correctly, install this hot-fix. Refer to the hot-fix here: <a href="http://support.microsoft.com/kb/910275">http://support.microsoft.com/kb/910275</a></span></p>

</div>

</body>

</html>
