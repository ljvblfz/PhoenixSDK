Compiling...
Subrange4.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 16(0x00000010).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 16(0x00000010).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Subrange4.CDecl.Function()->(void)              #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #3
                       START Subrange4(T)                                    #3
Subrange4: (references=1)                                                    #3
                       ENTERFUNCTION                                         #3
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG106.up32->char (i8), 0.i32, 2.i32, 2.i32, &i.up32->index (i32), &subrange4.up32->$$unnamed100 (Aggregate64)                               #14
   subrange4"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32 = CALL &_file_open.CDecl.Function(up32->i8,i32,i32,i32)->(HANDLE (up32->void)), &$SG105.up32->char (i8), 0.i32, 0.i32, 8.i32                             #8
   t143.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), subrange4"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 8.i32                                                #8
   [&subrange4.up32->$$unnamed100 (Aggregate64)+4].index (i32).a32 = ASSIGN t143.i32                                                                         #8
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 63(0x0000003f).i32, [&subrange4.up32->$$unnamed100 (Aggregate64)+4].index (i32).a32, 0.i32, 8.i32                                  #8
                       CALL &_file_reset.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), subrange4"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 10(0x0000000a).i32                                   #10
   t144.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), subrange4"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 10(0x0000000a).i32                                  #10
   [&subrange4.up32->$$unnamed100 (Aggregate64)+4].index (i32).a32 = ASSIGN t144.i32                                                                        #10
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 63(0x0000003f).i32, [&subrange4.up32->$$unnamed100 (Aggregate64)+4].index (i32).a32, 0.i32, 10(0x0000000a).i32                    #10
                       GOTO $L4                                             #11
$L4: (references=2)                                                         #11
   t145.i32          = CALL &_file_eof.CDecl.Function(HANDLE (up32->void))->(i32), subrange4"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32                                                                         #11
                       CONDITIONALBRANCH(True) t145.i32, $L5, $L6           #11
$L5: (references=1)                                                         #11
   tv148-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #11
                       GOTO $L7                                             #11
$L6: (references=1)                                                         #11
   tv148-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #11
                       GOTO $L7                                             #11
$L7: (references=2)                                                         #11
   tv148-.Boolean (Enum32) = ASSIGN tv148-.Boolean (Enum32)                 #11
   t149.i32          = NOT tv148"$$data"(Boolean (Enum32)+0).i32            #11
                       CONDITIONALBRANCH(True) t149.i32, $L8, $L9           #11
$L8: (references=1)                                                         #11
   tv150-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #11
                       GOTO $L10                                            #11
$L9: (references=1)                                                         #11
   tv150-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #11
                       GOTO $L10                                            #11
$L10: (references=2)                                                        #11
                       CONDITIONALBRANCH(True) tv150"$$data"(Boolean (Enum32)+0).i32, $L11, $L12                                                            #11
$L11: (references=1)                                                        #11
   i.index (i32).a32 = ASSIGN subrange4"$current_value"($$unnamed100 (Aggregate64)+32).index (i32).a32                                                      #13
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 63(0x0000003f).i32, i.index (i32).a32, 0.i32, 13(0x0000000d).i32                                                                  #13
   t151.i32          = CALL &_file_get_int.CDecl.Function(HANDLE (up32->void),i32,i32)->(i32), subrange4"$runtime_handle"($$unnamed100 (Aggregate64)+0).HANDLE (up32->void).a32, 0.i32, 13(0x0000000d).i32                                  #13
   [&subrange4.up32->$$unnamed100 (Aggregate64)+4].index (i32).a32 = ASSIGN t151.i32                                                                        #13
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 63(0x0000003f).i32, [&subrange4.up32->$$unnamed100 (Aggregate64)+4].index (i32).a32, 0.i32, 13(0x0000000d).i32                    #13
   [&output.up32->$stdfile (Aggregate2080)+4].index (i32).a32 = ASSIGN i.index (i32).a32                                                                    #14
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 63(0x0000003f).i32, [&output.up32->$stdfile (Aggregate2080)+4].index (i32).a32, 0.i32, 14(0x0000000e).i32                         #14
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].index (i32).a32, 0.i32, 14(0x0000000e).i32                                                      #14
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #14
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 14(0x0000000e).i32                                                                #14
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #14
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 14(0x0000000e).i32                                                                #14
                       GOTO $L4                                             #14
$L12: (references=1)                                                        #11
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #14
                       RETURN $L13(T)                                       #16
$L13: (references=1)                                                        #16
                       EXITFUNCTION                                         #16
$L2: (references=0)                                                         #16
                       END                                                  #16
Writing Subrange4.obj...

Subrange4.p - 0 error(s), 0 warning(s).

Linking...

Subrange4.exe - 0 error(s), 0 warning(s).

0
1

Subrange4.p(13) : runtime value '64' exceeded legal bounds (0..63). Exiting...
