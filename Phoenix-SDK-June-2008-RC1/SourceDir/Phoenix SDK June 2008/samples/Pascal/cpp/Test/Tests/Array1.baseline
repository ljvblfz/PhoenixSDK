Compiling...
Array1.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 17(0x00000011).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 17(0x00000011).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Array1.CDecl.Function()->(void)                 #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #3
                       START Array1(T)                                       #3
Array1: (references=1)                                                       #3
                       ENTERFUNCTION                                         #3
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 2.i32, 8.i32, &a.up32->integer (i32), &b.up32->integer (i32), &c.up32->integer (i32), &d.up32->integer (i32), &M.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (UnmgdArr[integer (i32)]96)]288), &N.up32->$$unnamed102 (UnmgdArr[integer (i32)]288), &i.up32->integer (i32), &j.up32->integer (i32)                                                               #16
   a.integer (i32).a32 = ASSIGN 3.integer (i32)                              #5
   b.integer (i32).a32 = ASSIGN 5.integer (i32)                              #5
   c.integer (i32).a32 = ASSIGN 7.integer (i32)                              #6
   d.integer (i32).a32 = ASSIGN 9.integer (i32)                              #6
   i.integer (i32).a32 = ASSIGN 4.integer (i32)                             #11
   j.integer (i32).a32 = ASSIGN 8.integer (i32)                             #11
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 3.i32, 5.i32, i.integer (i32).a32, 0.i32, 12(0x0000000c).i32 #12
   t153.i32          = SUBTRACT i.integer (i32).a32, 3.i32                  #12
   t154.i32          = ADD t153.i32, 0.i32                                  #12
   tv155-.i32        = MULTIPLY 12(0x0000000c).i32, t154.i32                #12
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 24(0x00000018).i32, tv155-.i32, 0.i32, 12(0x0000000c).i32                                                                         #12
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 7.i32, 9.i32, j.integer (i32).a32, 0.i32, 12(0x0000000c).i32 #12
   t156.i32          = SUBTRACT j.integer (i32).a32, 7.i32                  #12
   t157.i32          = MULTIPLY 1.i32, t156.i32                             #12
   t158.i32          = ADD t157.i32, 0.i32                                  #12
   tv159-.i32        = MULTIPLY 4.i32, t158.i32                             #12
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv159-.i32, 0.i32, 12(0x0000000c).i32      #12
   [&M.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (UnmgdArr[integer (i32)]96)]288)+tv159-.i32]($$unnamed101 (UnmgdArr[integer (i32)]96)+0).integer (i32).a128 = ASSIGN 22(0x00000016).integer (i32)                                          #12
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 7.i32, 9.i32, j.integer (i32).a32, 0.i32, 13(0x0000000d).i32 #13
   t160.i32          = SUBTRACT j.integer (i32).a32, 7.i32                  #13
   t161.i32          = MULTIPLY 1.i32, t160.i32                             #13
   t162.i32          = ADD t161.i32, 0.i32                                  #13
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 3.i32, 5.i32, i.integer (i32).a32, 0.i32, 13(0x0000000d).i32 #13
   t163.i32          = SUBTRACT i.integer (i32).a32, 3.i32                  #13
   t164.i32          = MULTIPLY 3.i32, t163.i32                             #13
   t165.i32          = ADD t164.i32, t162.i32                               #13
   tv166-.i32        = MULTIPLY 4.i32, t165.i32                             #13
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 32(0x00000020).i32, tv166-.i32, 0.i32, 13(0x0000000d).i32                                                                         #13
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 3.i32, 5.i32, i.integer (i32).a32, 0.i32, 13(0x0000000d).i32 #13
   t167.i32          = SUBTRACT i.integer (i32).a32, 3.i32                  #13
   t168.i32          = MULTIPLY 1.i32, t167.i32                             #13
   t169.i32          = ADD t168.i32, 0.i32                                  #13
   tv170-.i32        = MULTIPLY 12(0x0000000c).i32, t169.i32                #13
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 24(0x00000018).i32, tv170-.i32, 0.i32, 13(0x0000000d).i32                                                                         #13
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 7.i32, 9.i32, j.integer (i32).a32, 0.i32, 13(0x0000000d).i32 #13
   t171.i32          = SUBTRACT j.integer (i32).a32, 7.i32                  #13
   t172.i32          = MULTIPLY 1.i32, t171.i32                             #13
   t173.i32          = ADD t172.i32, 0.i32                                  #13
   tv174-.i32        = MULTIPLY 4.i32, t173.i32                             #13
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv174-.i32, 0.i32, 13(0x0000000d).i32      #13
   [&N.up32->$$unnamed102 (UnmgdArr[integer (i32)]288)+tv166-.i32].integer (i32).a32 = ASSIGN [&M.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (UnmgdArr[integer (i32)]96)]288)+tv174-.i32]($$unnamed101 (UnmgdArr[integer (i32)]96)+0).integer (i32).a128                                                                     #13
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 3.i32, 5.i32, i.integer (i32).a32, 0.i32, 15(0x0000000f).i32 #15
   t175.i32          = SUBTRACT i.integer (i32).a32, 3.i32                  #15
   t176.i32          = MULTIPLY 1.i32, t175.i32                             #15
   t177.i32          = ADD t176.i32, 0.i32                                  #15
   tv178-.i32        = MULTIPLY 12(0x0000000c).i32, t177.i32                #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 24(0x00000018).i32, tv178-.i32, 0.i32, 15(0x0000000f).i32                                                                         #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 7.i32, 9.i32, j.integer (i32).a32, 0.i32, 15(0x0000000f).i32 #15
   t179.i32          = SUBTRACT j.integer (i32).a32, 7.i32                  #15
   t180.i32          = MULTIPLY 1.i32, t179.i32                             #15
   t181.i32          = ADD t180.i32, 0.i32                                  #15
   tv182-.i32        = MULTIPLY 4.i32, t181.i32                             #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 8.i32, tv182-.i32, 0.i32, 15(0x0000000f).i32      #15
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [&M.up32->$$unnamed100 (UnmgdArr[$$unnamed101 (UnmgdArr[integer (i32)]96)]288)+tv182-.i32]($$unnamed101 (UnmgdArr[integer (i32)]96)+0).integer (i32).a128          #15
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 15(0x0000000f).i32                                                    #15
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #15
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 15(0x0000000f).i32                                                                #15
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #15
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 15(0x0000000f).i32                                                                #15
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 7.i32, 9.i32, j.integer (i32).a32, 0.i32, 16(0x00000010).i32 #16
   t184.i32          = SUBTRACT j.integer (i32).a32, 7.i32                  #16
   t185.i32          = MULTIPLY 1.i32, t184.i32                             #16
   t186.i32          = ADD t185.i32, 0.i32                                  #16
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 3.i32, 5.i32, i.integer (i32).a32, 0.i32, 16(0x00000010).i32 #16
   t187.i32          = SUBTRACT i.integer (i32).a32, 3.i32                  #16
   t188.i32          = MULTIPLY 3.i32, t187.i32                             #16
   t189.i32          = ADD t188.i32, t186.i32                               #16
   tv190-.i32        = MULTIPLY 4.i32, t189.i32                             #16
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 0.i32, 32(0x00000020).i32, tv190-.i32, 0.i32, 16(0x00000010).i32                                                                         #16
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [&N.up32->$$unnamed102 (UnmgdArr[integer (i32)]288)+tv190-.i32].integer (i32).a32  #16
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 16(0x00000010).i32                                                    #16
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #16
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 16(0x00000010).i32                                                                #16
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #16
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 16(0x00000010).i32                                                                #16
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #16
                       RETURN $L4(T)                                        #17
$L4: (references=1)                                                         #17
                       EXITFUNCTION                                         #17
$L2: (references=0)                                                         #17
                       END                                                  #17
Writing Array1.obj...

Array1.p - 0 error(s), 0 warning(s).

Linking...

Array1.exe - 0 error(s), 0 warning(s).

22
22
