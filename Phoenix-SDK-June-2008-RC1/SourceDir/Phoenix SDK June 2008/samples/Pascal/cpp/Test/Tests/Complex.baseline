Compiling...
Complex.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 25(0x00000019).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 25(0x00000019).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Complex.CDecl.Function()->(void)                #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #4
                       START Complex(T)                                      #4
Complex: (references=1)                                                      #4
                       ENTERFUNCTION                                         #4
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG109.up32->char (i8), 0.i32, 2.i32, 4.i32, &fac.up32->integer (i32), &x.up32->complex (Aggregate64), &y.up32->complex (Aggregate64), &n.up32->integer (i32)                                                                #24
   fac.integer (i32).a32 = ASSIGN 4.integer (i32)                            #6
   x"re"(complex (Aggregate64)+0).integer (i32).a32 = ASSIGN 2.integer (i32) #11
   x"im"(complex (Aggregate64)+32).integer (i32).a32 = ASSIGN 7.integer (i32) #11
   y"re"(complex (Aggregate64)+0).integer (i32).a32 = ASSIGN 6.integer (i32) #12
   y"im"(complex (Aggregate64)+32).integer (i32).a32 = ASSIGN 3.integer (i32) #12
   n.integer (i32).a32 = ASSIGN 1.integer (i32)                             #13
   tv142-.integer (i32) = ASSIGN n.integer (i32).a32                        #13
                       GOTO $L4                                             #13
$L4: (references=2)                                                         #13
   t143.i32          = COMPARE(LT) 4.integer (i32), tv142-.integer (i32)    #13
                       CONDITIONALBRANCH(True) t143.i32, $L5, $L6           #13
$L5: (references=1)                                                         #13
   tv146-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #13
                       GOTO $L7                                             #13
$L6: (references=1)                                                         #13
   tv146-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #13
                       GOTO $L7                                             #13
$L7: (references=2)                                                         #13
                       CONDITIONALBRANCH(True) tv146"$$data"(Boolean (Enum32)+0).i32, $L8, $L9                                                              #13
$L9: (references=1)                                                         #13
   n.integer (i32).a32 = ASSIGN tv142-.integer (i32)                        #13
   output($stdfile (Aggregate2080)+32).up32->char (i8).a32 = ASSIGN &$SG105.up32->char (i8)                                                                 #15
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 15(0x0000000f).i32                         #15
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #15
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN x"re"(complex (Aggregate64)+0).integer (i32).a32                                          #15
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 15(0x0000000f).i32                                                           #15
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #15
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN x"im"(complex (Aggregate64)+32).integer (i32).a32                                         #15
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 15(0x0000000f).i32                                                           #15
   output($stdfile (Aggregate2080)+32).up32->char (i8).a32 = ASSIGN &$SG106.up32->char (i8)                                                                 #15
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 15(0x0000000f).i32                         #15
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #15
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN y"re"(complex (Aggregate64)+0).integer (i32).a32                                          #15
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 15(0x0000000f).i32                                                           #15
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #15
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN y"im"(complex (Aggregate64)+32).integer (i32).a32                                         #15
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 15(0x0000000f).i32                                                           #15
   output($stdfile (Aggregate2080)+32).i8.a8 = ASSIGN 13(0x0d).i8           #15
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).i8.a8, 0.i32, 15(0x0000000f).i32                                                                       #15
   output($stdfile (Aggregate2080)+32).i8.a8 = ASSIGN 10(0x0a).i8           #15
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).i8.a8, 0.i32, 15(0x0000000f).i32                                                                       #15
   t152.integer (i32) = ADD x"im"(complex (Aggregate64)+32).integer (i32).a32, y"im"(complex (Aggregate64)+32).integer (i32).a32                            #18
   output($stdfile (Aggregate2080)+32).up32->char (i8).a32 = ASSIGN &$SG107.up32->char (i8)                                                                 #18
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 18(0x00000012).i32                         #18
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #18
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ADD x"re"(complex (Aggregate64)+0).integer (i32).a32, y"re"(complex (Aggregate64)+0).integer (i32).a32                                                                           #17
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 18(0x00000012).i32                                                    #18
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #18
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN t152.integer (i32)                                                                 #18
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 18(0x00000012).i32                                                    #18
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #18
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 18(0x00000012).i32                                                                #18
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #18
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 18(0x00000012).i32                                                                #18
   t154.integer (i32) = MULTIPLY [&x.up32->complex (Aggregate64)].integer (i32).a32, [&y.up32->complex (Aggregate64)].integer (i32).a32                     #20
   t155.integer (i32) = MULTIPLY [&x.up32->complex (Aggregate64)+4].integer (i32).a32, [&y.up32->complex (Aggregate64)+4].integer (i32).a32                 #20
   t156.integer (i32) = SUBTRACT t154.integer (i32), t155.integer (i32)     #20
   t157.integer (i32) = MULTIPLY [&x.up32->complex (Aggregate64)].integer (i32).a32, [&y.up32->complex (Aggregate64)+4].integer (i32).a32                   #21
   t158.integer (i32) = MULTIPLY [&x.up32->complex (Aggregate64)+4].integer (i32).a32, [&y.up32->complex (Aggregate64)].integer (i32).a32                   #21
   t159.integer (i32) = ADD t157.integer (i32), t158.integer (i32)          #21
   [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32 = ASSIGN &$SG108.up32->char (i8)                                                          #21
                       CALL &_file_put_string.CDecl.Function(HANDLE (up32->void),up32->i8,i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].up32->char (i8).a32, -1(0xffffffff).i32, 0.i32, 21(0x00000015).i32                  #21
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #21
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN t156.integer (i32)                                                                 #21
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 21(0x00000015).i32                                                    #21
                       CALL &_file_set_modifier.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, 0.i32, 3.integer (i32)                                    #21
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN t159.integer (i32)                                                                 #21
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 21(0x00000015).i32                                                    #21
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #21
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 21(0x00000015).i32                                                                #21
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #21
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 21(0x00000015).i32                                                                #21
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #22
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 22(0x00000016).i32                                                                #22
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #22
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 22(0x00000016).i32                                                                #22
   t160.integer (i32) = ADD [&x.up32->complex (Aggregate64)].integer (i32).a32, fac.integer (i32).a32                                                       #23
   [&x.up32->complex (Aggregate64)].integer (i32).a32 = ASSIGN t160.integer (i32)                                                                           #23
   t161.integer (i32) = SUBTRACT [&x.up32->complex (Aggregate64)+4].integer (i32).a32, fac.integer (i32).a32                                                #23
   [&x.up32->complex (Aggregate64)+4].integer (i32).a32 = ASSIGN t161.integer (i32)                                                                         #23
   t162.integer (i32) = ADD n.integer (i32).a32, 1.integer (i32)            #24
   tv142-.integer (i32) = ASSIGN t162.integer (i32)                         #24
                       GOTO $L4                                             #24
$L8: (references=1)                                                         #13
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #24
                       RETURN $L10(T)                                       #25
$L10: (references=1)                                                        #25
                       EXITFUNCTION                                         #25
$L2: (references=0)                                                         #25
                       END                                                  #25
Writing Complex.obj...

Complex.p - 0 error(s), 0 warning(s).

Linking...

Complex.exe - 0 error(s), 0 warning(s).

 x =   2  7  y =   6  3
 sum =   8 10
 product =  -9 48

 x =   6  3  y =   6  3
 sum =  12  6
 product =  27 36

 x =  10 -1  y =   6  3
 sum =  16  2
 product =  63 24

 x =  14 -5  y =   6  3
 sum =  20 -2
 product =  99 12

