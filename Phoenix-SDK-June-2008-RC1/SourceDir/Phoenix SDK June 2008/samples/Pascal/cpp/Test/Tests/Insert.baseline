Compiling...
Insert.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 15(0x0000000f).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 15(0x0000000f).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Insert.CDecl.Function()->(void)                 #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #3
                       START Insert(T)                                       #3
Insert: (references=1)                                                       #3
                       ENTERFUNCTION                                         #3
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG106.up32->char (i8), 0.i32, 2.i32, 2.i32, &ch.up32->char (i8), &insert.up32->text (Aggregate40)                                           #14
   insert"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32 = CALL &_file_open.CDecl.Function(up32->i8,i32,i32,i32)->(HANDLE (up32->void)), &$SG105.up32->char (i8), 0.i32, 0.i32, 6.i32                                        #6
   t141.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), insert"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 6.i32                                                           #6
   [&insert.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t141.i8        #6
                       CALL &_file_reset.CDecl.Function(HANDLE (up32->void),i32,i32)->(void), insert"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 7.i32                                                            #7
   t142.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), insert"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 7.i32                                                           #7
   [&insert.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t142.i8        #7
                       GOTO $L4                                              #8
$L4: (references=2)                                                          #8
   t143.i32          = CALL &_file_eof.CDecl.Function(HANDLE (up32->void))->(i32), insert"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32     #8
                       CONDITIONALBRANCH(True) t143.i32, $L5, $L6            #8
$L5: (references=1)                                                          #8
   tv146-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32                #8
                       GOTO $L7                                              #8
$L6: (references=1)                                                          #8
   tv146-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32               #8
                       GOTO $L7                                              #8
$L7: (references=2)                                                          #8
   tv146-.Boolean (Enum32) = ASSIGN tv146-.Boolean (Enum32)                  #8
   t147.i32          = NOT tv146"$$data"(Boolean (Enum32)+0).i32             #8
                       CONDITIONALBRANCH(True) t147.i32, $L8, $L9            #8
$L8: (references=1)                                                          #8
   tv148-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32                #8
                       GOTO $L10                                             #8
$L9: (references=1)                                                          #8
   tv148-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32               #8
                       GOTO $L10                                             #8
$L10: (references=2)                                                         #8
                       CONDITIONALBRANCH(True) tv148"$$data"(Boolean (Enum32)+0).i32, $L11, $L12                                                             #8
$L11: (references=1)                                                         #8
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 32(0x20).char (i8)                                                                       #9
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 9.i32                                                                       #9
                       GOTO $L13                                            #10
$L13: (references=2)                                                        #10
   t150.i32          = CALL &_file_eoln.CDecl.Function(HANDLE (up32->void),i8)->(i32), insert"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, [&insert.up32->text (Aggregate40)+4].char (i8).a8                             #10
                       CONDITIONALBRANCH(True) t150.i32, $L14, $L15         #10
$L14: (references=1)                                                        #10
   tv151-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #10
                       GOTO $L16                                            #10
$L15: (references=1)                                                        #10
   tv151-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #10
                       GOTO $L16                                            #10
$L16: (references=2)                                                        #10
   tv151-.Boolean (Enum32) = ASSIGN tv151-.Boolean (Enum32)                 #10
   t152.i32          = NOT tv151"$$data"(Boolean (Enum32)+0).i32            #10
                       CONDITIONALBRANCH(True) t152.i32, $L17, $L18         #10
$L17: (references=1)                                                        #10
   tv153-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32               #10
                       GOTO $L19                                            #10
$L18: (references=1)                                                        #10
   tv153-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32              #10
                       GOTO $L19                                            #10
$L19: (references=2)                                                        #10
                       CONDITIONALBRANCH(True) tv153"$$data"(Boolean (Enum32)+0).i32, $L20, $L21                                                            #10
$L20: (references=1)                                                        #10
   ch.char (i8).a8   = ASSIGN insert"$current_value"(text (Aggregate40)+32).char (i8).a8                                                                    #11
   t154.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), insert"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 11(0x0000000b).i32                                             #11
   [&insert.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t154.i8       #11
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN ch.char (i8).a8                                                                         #11
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 11(0x0000000b).i32                                                         #11
                       GOTO $L13                                            #11
$L21: (references=1)                                                        #10
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #13
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 13(0x0000000d).i32                                                         #13
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #13
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 13(0x0000000d).i32                                                         #13
   ch.char (i8).a8   = ASSIGN insert"$current_value"(text (Aggregate40)+32).char (i8).a8                                                                    #13
   t155.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), insert"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 13(0x0000000d).i32                                             #13
   [&insert.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t155.i8       #13
   ch.char (i8).a8   = ASSIGN insert"$current_value"(text (Aggregate40)+32).char (i8).a8                                                                    #13
   t156.i8           = CALL &_file_get_char.CDecl.Function(HANDLE (up32->void),i32,i32)->(i8), insert"$runtime_handle"(text (Aggregate40)+0).HANDLE (up32->void).a32, 0.i32, 13(0x0000000d).i32                                             #13
   [&insert.up32->text (Aggregate40)+4].char (i8).a8 = ASSIGN t156.i8       #13
                       GOTO $L4                                             #14
$L12: (references=1)                                                         #8
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #14
                       RETURN $L22(T)                                       #15
$L22: (references=1)                                                        #15
                       EXITFUNCTION                                         #15
$L2: (references=0)                                                         #15
                       END                                                  #15
Writing Insert.obj...

Insert.p - 0 error(s), 0 warning(s).

Linking...

Insert.exe - 0 error(s), 0 warning(s).

 This program inserts a blank
 at the beginning of each line,
 resulting in normal single
 space printing.
