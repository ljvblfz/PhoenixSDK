Compiling...
Subrange3.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 11(0x0000000b).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 11(0x0000000b).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Subrange3.CDecl.Function()->(void)              #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #3
                       START Subrange3(T)                                    #3
Subrange3: (references=1)                                                    #3
                       ENTERFUNCTION                                         #3
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 2.i32, 1.i32, &i.up32->index (i32)                                                                            #11
   i.index (i32).a32 = ASSIGN 60(0x0000003c).integer (i32)                   #9
   tv139-.integer (i32) = ASSIGN i.index (i32).a32                           #9
                       GOTO $L4                                              #9
$L4: (references=2)                                                          #9
   t140.i32          = COMPARE(LT) 64(0x00000040).integer (i32), tv139-.integer (i32)                                                                        #9
                       CONDITIONALBRANCH(True) t140.i32, $L5, $L6            #9
$L5: (references=1)                                                          #9
   tv143-.Boolean (Enum32) = ASSIGN true.Boolean (Enum32).a32                #9
                       GOTO $L7                                              #9
$L6: (references=1)                                                          #9
   tv143-.Boolean (Enum32) = ASSIGN false.Boolean (Enum32).a32               #9
                       GOTO $L7                                              #9
$L7: (references=2)                                                          #9
                       CONDITIONALBRANCH(True) tv143"$$data"(Boolean (Enum32)+0).i32, $L8, $L9                                                               #9
$L9: (references=1)                                                          #9
   i.index (i32).a32 = ASSIGN tv139-.integer (i32)                           #9
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 63(0x0000003f).i32, i.index (i32).a32, 0.i32, 10(0x0000000a).i32                                                                   #9
   output($stdfile (Aggregate2080)+32).index (i32).a32 = ASSIGN i.index (i32).a32                                                                           #10
                       CALL &_runtime_check_int_range.CDecl.Function(i32,i32,i32,i32,i32)->(void), 1.i32, 63(0x0000003f).i32, output($stdfile (Aggregate2080)+32).index (i32).a32, 0.i32, 10(0x0000000a).i32                                #10
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).index (i32).a32, 0.i32, 10(0x0000000a).i32                                                             #10
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 32(0x20).char (i8) #10
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 10(0x0000000a).i32                                                                #10
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 13(0x0d).i8    #10
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 10(0x0000000a).i32                                                                #10
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 10(0x0a).i8    #10
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 10(0x0000000a).i32                                                                #10
   tv139-.integer (i32) = ADD 1.integer (i32), i.index (i32).a32            #10
                       GOTO $L4                                             #10
$L8: (references=1)                                                          #9
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #11
                       RETURN $L10(T)                                       #11
$L10: (references=1)                                                        #11
                       EXITFUNCTION                                         #11
$L2: (references=0)                                                         #11
                       END                                                  #11
Writing Subrange3.obj...

Subrange3.p - 0 error(s), 0 warning(s).

Linking...

Subrange3.exe - 0 error(s), 0 warning(s).

60 
61 
62 
63 

Subrange3.p(10) : runtime value '64' exceeded legal bounds (1..63). Exiting...
