Compiling...
Nested2.p

IR after Type Checker (control chktype)

Function Unit #1
$L1: (references=0)                                                          #0
                       START _main(T)                                        #0
_main: (references=1)                                                        #0
                       ENTERFUNCTION                                         #0
   input.HANDLE (up32->void).a32 = CALL &_file_get_std_input.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 30(0x0000001e).i32                       #0
   t143.HANDLE (up32->void) = CALL &_file_get_std_output.CDecl.Function(i32,i32)->(HANDLE (up32->void)), 0.i32, 30(0x0000001e).i32                           #0
   output.HANDLE (up32->void).a32 = ASSIGN t143.HANDLE (up32->void)          #0
   [&true.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 1.i32                                                                         #0
   [&false.up32->Boolean (Enum32)]"$$data"(Boolean (Enum32)+0).i32.a32 = ASSIGN 0.i32                                                                        #0
                       CALL &_runtime_init.CDecl.Function()->(void)          #0
                       CALL &Nested2.CDecl.Function()->(void)                #0
                       CALL &_runtime_exit.CDecl.Function()->(void)          #0
                       RETURN 0.i32, $L4(T)                                  #0
$L4: (references=1)                                                          #0
                       EXITFUNCTION                                          #0
$L2: (references=0)                                                          #0
                       END                                                   #0

IR after Type Checker (control chktype)

Function Unit #2
$L1: (references=0)                                                          #3
                       START Nested2(T)                                      #3
Nested2: (references=1)                                                      #3
                       ENTERFUNCTION                                         #3
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 2.i32, 2.i32, &x0.up32->integer (i32), &y0.up32->integer (i32)                                                #29
   x0.integer (i32).a32 = ASSIGN 33(0x00000021).integer (i32)               #25
   y0.integer (i32).a32 = ASSIGN 32(0x00000020).integer (i32)               #25
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN x0.integer (i32).a32                                                                      #27
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 27(0x0000001b).i32                                                           #27
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 32(0x20).char (i8) #27
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 27(0x0000001b).i32                                                                #27
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN y0.integer (i32).a32                                                                      #27
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 27(0x0000001b).i32                                                           #27
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 13(0x0d).i8    #27
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 27(0x0000001b).i32                                                                #27
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 10(0x0a).i8    #27
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 27(0x0000001b).i32                                                                #27
                       CALL &outer.CDecl.Function()->(void)                 #28
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN x0.integer (i32).a32                                                                      #29
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 29(0x0000001d).i32                                                           #29
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 32(0x20).char (i8) #29
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 29(0x0000001d).i32                                                                #29
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN y0.integer (i32).a32                                                                      #29
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 29(0x0000001d).i32                                                           #29
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 13(0x0d).i8    #29
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 29(0x0000001d).i32                                                                #29
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 10(0x0a).i8    #29
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 29(0x0000001d).i32                                                                #29
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 2.i32                                                                   #29
                       RETURN $L4(T)                                        #30
$L4: (references=1)                                                         #30
                       EXITFUNCTION                                         #30
$L2: (references=0)                                                         #30
                       END                                                  #30

IR after Type Checker (control chktype)

Function Unit #3
$L1: (references=0)                                                          #6
                       START outer(T)                                        #6
outer: (references=1)                                                        #6
                       ENTERFUNCTION                                         #6
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 3.i32, 2.i32, &x1.up32->integer (i32), &y1.up32->integer (i32)                                                #22
   x1.integer (i32).a32 = ASSIGN 13(0x0000000d).integer (i32)               #18
   y1.integer (i32).a32 = ASSIGN 13(0x0000000d).integer (i32)               #18
                       CALL &inner.CDecl.Function()->(void)                 #19
   t139.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #20
   t140.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 0.i32                                            #20
   [t139.up32->void].integer (i32).a32 = ADD [t140.up32->void].integer (i32).a32, x1.integer (i32).a32                                                      #20
   t142.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 1.i32                                            #21
   t143.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 2.i32, 1.i32                                            #21
   t144.integer (i32) = ADD [t143.up32->void].integer (i32).a32, y1.integer (i32).a32                                                                       #22
   [t142.up32->void].integer (i32).a32 = ASSIGN t144.integer (i32)          #22
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 3.i32                                                                   #22
                       RETURN $L4(T)                                        #22
$L4: (references=1)                                                         #22
                       EXITFUNCTION                                         #22
$L2: (references=0)                                                         #22
                       END                                                  #22

IR after Type Checker (control chktype)

Function Unit #4
$L1: (references=0)                                                          #8
                       START inner(T)                                        #8
inner: (references=1)                                                        #8
                       ENTERFUNCTION                                         #8
                       CALL &_display_enter.CDecl.Function(up32->i8,i32,i32,i32,...)->(void), &$SG105.up32->char (i8), 0.i32, 4.i32, 2.i32, &x2.up32->integer (i32), &y2.up32->integer (i32)                                                #15
   x2.integer (i32).a32 = ASSIGN 3.integer (i32)                            #11
   y2.integer (i32).a32 = ASSIGN 3.integer (i32)                            #11
   t139.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 3.i32, 0.i32                                            #12
   t140.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 3.i32, 1.i32                                            #12
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN [t139.up32->void].integer (i32).a32                                                       #12
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 12(0x0000000c).i32                                                           #12
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 32(0x20).char (i8) #12
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 12(0x0000000c).i32                                                                #12
   output($stdfile (Aggregate2080)+32).integer (i32).a32 = ASSIGN [t140.up32->void].integer (i32).a32                                                       #12
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).integer (i32).a32, 0.i32, 12(0x0000000c).i32                                                           #12
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 13(0x0d).i8    #12
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 12(0x0000000c).i32                                                                #12
   output($stdfile (Aggregate2080)+32).char (i8).a8 = ASSIGN 10(0x0a).i8    #12
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, output($stdfile (Aggregate2080)+32).char (i8).a8, 0.i32, 12(0x0000000c).i32                                                                #12
   t142.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 3.i32, 0.i32                                            #13
   t143.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 3.i32, 0.i32                                            #13
   [t142.up32->void].integer (i32).a32 = ADD [t143.up32->void].integer (i32).a32, x2.integer (i32).a32                                                      #13
   t145.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 3.i32, 1.i32                                            #14
   t146.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 3.i32, 1.i32                                            #14
   t147.integer (i32) = ADD [t146.up32->void].integer (i32).a32, y2.integer (i32).a32                                                                       #14
   [t145.up32->void].integer (i32).a32 = ASSIGN t147.integer (i32)          #14
   t148.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 3.i32, 0.i32                                            #15
   t149.up32->void   = CALL &_display_get_address.CDecl.Function(i32,i32,i32)->(up32->void), 0.i32, 3.i32, 1.i32                                            #15
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [t148.up32->void].integer (i32).a32                                                #15
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 15(0x0000000f).i32                                                    #15
   [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8 = ASSIGN 32(0x20).char (i8)                                                                      #15
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].char (i8).a8, 0.i32, 15(0x0000000f).i32                                                         #15
   [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32 = ASSIGN [t149.up32->void].integer (i32).a32                                                #15
                       CALL &_file_put_int.CDecl.Function(HANDLE (up32->void),i32,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].integer (i32).a32, 0.i32, 15(0x0000000f).i32                                                    #15
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 13(0x0d).i8    #15
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 15(0x0000000f).i32                                                                #15
   [&output.up32->$stdfile (Aggregate2080)+4].i8.a8 = ASSIGN 10(0x0a).i8    #15
                       CALL &_file_put_char.CDecl.Function(HANDLE (up32->void),i8,i32,i32)->(void), output"$runtime_handle"($stdfile (Aggregate2080)+0).HANDLE (up32->void).a32, [&output.up32->$stdfile (Aggregate2080)+4].i8.a8, 0.i32, 15(0x0000000f).i32                                                                #15
                       CALL &_display_leave.CDecl.Function(i32,i32)->(void), 0.i32, 4.i32                                                                   #15
                       RETURN $L4(T)                                        #16
$L4: (references=1)                                                         #16
                       EXITFUNCTION                                         #16
$L2: (references=0)                                                         #16
                       END                                                  #16
Writing Nested2.obj...

Nested2.p - 0 error(s), 0 warning(s).

Linking...

Nested2.exe - 0 error(s), 0 warning(s).

33 32
13 13
16 16
49 48
